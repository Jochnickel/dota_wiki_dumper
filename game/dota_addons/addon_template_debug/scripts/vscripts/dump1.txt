_G table table: 0x00111960
_G.ABILITY_CANNOT_BE_UPGRADED_AT_MAX number 2
_G.ABILITY_CANNOT_BE_UPGRADED_NOT_UPGRADABLE number 1
_G.ABILITY_CANNOT_BE_UPGRADED_REQUIRES_LEVEL number 3
_G.ABILITY_CAN_BE_UPGRADED number 0
_G.ABILITY_NOT_LEARNABLE number 4
_G.ABILITY_TYPE_ATTRIBUTES number 2
_G.ABILITY_TYPE_BASIC number 0
_G.ABILITY_TYPE_HIDDEN number 3
_G.ABILITY_TYPE_ULTIMATE number 1
_G.ACD_DOTA_IDLE number 1769
_G.ACTIVATE_TYPE_DATAUPDATE_CREATION number 1
_G.ACTIVATE_TYPE_INITIAL_CREATION number 0
_G.ACTIVATE_TYPE_ONRESTORE number 2
_G.ACT_180_LEFT number 137
_G.ACT_180_RIGHT number 138
_G.ACT_90_LEFT number 139
_G.ACT_90_RIGHT number 140
_G.ACT_ALIEN_BURROW_IDLE number 48
_G.ACT_ALIEN_BURROW_OUT number 49
_G.ACT_ANTLION_SCUTTLE_BACK number 968
_G.ACT_ANTLION_SCUTTLE_FORWARD number 967
_G.ACT_ANTLION_SCUTTLE_LEFT number 969
_G.ACT_ANTLION_SCUTTLE_RIGHT number 970
_G.ACT_ARM number 71
_G.ACT_BARNACLE_CHEW number 178
_G.ACT_BARNACLE_CHOMP number 177
_G.ACT_BARNACLE_HIT number 175
_G.ACT_BARNACLE_PULL number 176
_G.ACT_BIG_FLINCH number 64
_G.ACT_BUSY_LEAN_BACK number 384
_G.ACT_BUSY_LEAN_BACK_ENTRY number 385
_G.ACT_BUSY_LEAN_BACK_EXIT number 386
_G.ACT_BUSY_LEAN_LEFT number 381
_G.ACT_BUSY_LEAN_LEFT_ENTRY number 382
_G.ACT_BUSY_LEAN_LEFT_EXIT number 383
_G.ACT_BUSY_QUEUE number 394
_G.ACT_BUSY_SIT_CHAIR number 390
_G.ACT_BUSY_SIT_CHAIR_ENTRY number 391
_G.ACT_BUSY_SIT_CHAIR_EXIT number 392
_G.ACT_BUSY_SIT_GROUND number 387
_G.ACT_BUSY_SIT_GROUND_ENTRY number 388
_G.ACT_BUSY_SIT_GROUND_EXIT number 389
_G.ACT_BUSY_STAND number 393
_G.ACT_CLIMB_DISMOUNT number 35
_G.ACT_CLIMB_DOWN number 34
_G.ACT_CLIMB_UP number 33
_G.ACT_COMBAT_IDLE number 110
_G.ACT_COVER number 3
_G.ACT_COVER_LOW number 5
_G.ACT_COVER_LOW_RPG number 346
_G.ACT_COVER_MED number 4
_G.ACT_COVER_PISTOL_LOW number 296
_G.ACT_COVER_SMG1_LOW number 297
_G.ACT_COWER number 62
_G.ACT_CROSSBOW_DRAW_UNLOADED number 474
_G.ACT_CROUCH number 44
_G.ACT_CROUCHIDLE number 45
_G.ACT_CROUCHIDLE_AGITATED number 105
_G.ACT_CROUCHIDLE_AIM_STIMULATED number 104
_G.ACT_CROUCHIDLE_STIMULATED number 103
_G.ACT_CROUCHING_GRENADEIDLE number 439
_G.ACT_CROUCHING_GRENADEREADY number 440
_G.ACT_CROUCHING_PRIMARYATTACK number 441
_G.ACT_CROUCHING_SHIELD_ATTACK number 458
_G.ACT_CROUCHING_SHIELD_DOWN number 456
_G.ACT_CROUCHING_SHIELD_KNOCKBACK number 459
_G.ACT_CROUCHING_SHIELD_UP number 455
_G.ACT_CROUCHING_SHIELD_UP_IDLE number 457
_G.ACT_CROUCH_IDLE_AUTOGUN number 881
_G.ACT_CROUCH_IDLE_DUAL number 890
_G.ACT_CROUCH_IDLE_RIFLE number 896
_G.ACT_CROUCH_IDLE_SHOTGUN number 894
_G.ACT_CSGO_ALIVE_LOOP number 1016
_G.ACT_CSGO_CATCH number 1008
_G.ACT_CSGO_CLIMB_LADDER number 1022
_G.ACT_CSGO_DEFUSE number 993
_G.ACT_CSGO_DEFUSE_WITH_KIT number 994
_G.ACT_CSGO_DEPLOY number 1007
_G.ACT_CSGO_EXIT_LADDER_BOTTOM number 1026
_G.ACT_CSGO_EXIT_LADDER_TOP number 1025
_G.ACT_CSGO_FALL number 1021
_G.ACT_CSGO_FIRE_PRIMARY number 996
_G.ACT_CSGO_FIRE_PRIMARY_OPT_1 number 997
_G.ACT_CSGO_FIRE_PRIMARY_OPT_2 number 998
_G.ACT_CSGO_FIRE_SECONDARY number 999
_G.ACT_CSGO_FIRE_SECONDARY_OPT_1 number 1000
_G.ACT_CSGO_FIRE_SECONDARY_OPT_2 number 1001
_G.ACT_CSGO_FLASHBANG_REACTION number 995
_G.ACT_CSGO_FLINCH number 1017
_G.ACT_CSGO_FLINCH_HEAD number 1018
_G.ACT_CSGO_FLINCH_MOLOTOV number 1019
_G.ACT_CSGO_IDLE_ADJUST_STOPPEDMOVING number 1015
_G.ACT_CSGO_IDLE_TURN_BALANCEADJUST number 1014
_G.ACT_CSGO_JUMP number 1020
_G.ACT_CSGO_LAND_HEAVY number 1024
_G.ACT_CSGO_LAND_LIGHT number 1023
_G.ACT_CSGO_NULL number 992
_G.ACT_CSGO_OPERATE number 1006
_G.ACT_CSGO_PARACHUTE number 1027
_G.ACT_CSGO_PLANT_BOMB number 1013
_G.ACT_CSGO_RELOAD number 1002
_G.ACT_CSGO_RELOAD_END number 1005
_G.ACT_CSGO_RELOAD_LOOP number 1004
_G.ACT_CSGO_RELOAD_START number 1003
_G.ACT_CSGO_SILENCER_ATTACH number 1010
_G.ACT_CSGO_SILENCER_DETACH number 1009
_G.ACT_CSGO_TAUNT number 1028
_G.ACT_CSGO_TWITCH number 1011
_G.ACT_CSGO_TWITCH_BUYZONE number 1012
_G.ACT_DEPLOY number 471
_G.ACT_DEPLOY_IDLE number 472
_G.ACT_DIEBACKWARD number 21
_G.ACT_DIEFORWARD number 22
_G.ACT_DIERAGDOLL number 24
_G.ACT_DIESIMPLE number 20
_G.ACT_DIEVIOLENT number 23
_G.ACT_DIE_BACKSHOT number 117
_G.ACT_DIE_BACKSIDE number 404
_G.ACT_DIE_BARNACLE_SWALLOW number 396
_G.ACT_DIE_CHESTSHOT number 115
_G.ACT_DIE_CROUCH number 990
_G.ACT_DIE_CROUCH_BACKSIDE number 408
_G.ACT_DIE_CROUCH_FRONTSIDE number 406
_G.ACT_DIE_CROUCH_HEADSHOT number 991
_G.ACT_DIE_CROUCH_LEFTSIDE number 409
_G.ACT_DIE_CROUCH_RIGHTSIDE number 407
_G.ACT_DIE_FRONTSIDE number 402
_G.ACT_DIE_GUTSHOT number 116
_G.ACT_DIE_HEADSHOT number 114
_G.ACT_DIE_INCAP number 410
_G.ACT_DIE_LEFTSIDE number 405
_G.ACT_DIE_RIGHTSIDE number 403
_G.ACT_DIE_STAND number 988
_G.ACT_DIE_STANDING number 411
_G.ACT_DIE_STAND_HEADSHOT number 989
_G.ACT_DISARM number 72
_G.ACT_DI_ALYX_ANTLION number 416
_G.ACT_DI_ALYX_HEADCRAB_MELEE number 415
_G.ACT_DI_ALYX_ZOMBIE_MELEE number 413
_G.ACT_DI_ALYX_ZOMBIE_SHOTGUN26 number 418
_G.ACT_DI_ALYX_ZOMBIE_SHOTGUN64 number 417
_G.ACT_DI_ALYX_ZOMBIE_TORSO_MELEE number 414
_G.ACT_DOTA_ALCHEMIST_CHEMICAL_RAGE_END number 1580
_G.ACT_DOTA_ALCHEMIST_CHEMICAL_RAGE_START number 1572
_G.ACT_DOTA_ALCHEMIST_CONCOCTION number 1573
_G.ACT_DOTA_ALCHEMIST_CONCOCTION_THROW number 1579
_G.ACT_DOTA_AMBUSH number 1627
_G.ACT_DOTA_ANCESTRAL_SPIRIT number 1677
_G.ACT_DOTA_ARCANA_VOTE number 1751
_G.ACT_DOTA_ARCTIC_BURN_END number 1682
_G.ACT_DOTA_AREA_DENY number 1661
_G.ACT_DOTA_ATTACK number 1503
_G.ACT_DOTA_ATTACK2 number 1504
_G.ACT_DOTA_ATTACK_EVENT number 1505
_G.ACT_DOTA_ATTACK_EVENT_BASH number 1705
_G.ACT_DOTA_ATTACK_STATUE number 1755
_G.ACT_DOTA_AW_MAGNETIC_FIELD number 1707
_G.ACT_DOTA_BELLYACHE_END number 1614
_G.ACT_DOTA_BELLYACHE_LOOP number 1613
_G.ACT_DOTA_BELLYACHE_START number 1612
_G.ACT_DOTA_BLINK_DAGGER number 1732
_G.ACT_DOTA_BLINK_DAGGER_END number 1733
_G.ACT_DOTA_BRIDGE_DESTROY number 1640
_G.ACT_DOTA_BRIDGE_THREAT number 1650
_G.ACT_DOTA_CAGED_CREEP_RAGE number 1644
_G.ACT_DOTA_CAGED_CREEP_RAGE_OUT number 1645
_G.ACT_DOTA_CAGED_CREEP_SMASH number 1646
_G.ACT_DOTA_CAGED_CREEP_SMASH_OUT number 1647
_G.ACT_DOTA_CANCEL_SIREN_SONG number 1599
_G.ACT_DOTA_CAPTURE number 1533
_G.ACT_DOTA_CAPTURE_CARD number 1717
_G.ACT_DOTA_CAPTURE_PET number 1698
_G.ACT_DOTA_CAPTURE_RARE number 1706
_G.ACT_DOTA_CAST1_STATUE number 1757
_G.ACT_DOTA_CAST2_STATUE number 1768
_G.ACT_DOTA_CAST3_STATUE number 1756
_G.ACT_DOTA_CAST4_STATUE number 1765
_G.ACT_DOTA_CAST_ABILITY_1 number 1510
_G.ACT_DOTA_CAST_ABILITY_1_END number 1540
_G.ACT_DOTA_CAST_ABILITY_2 number 1511
_G.ACT_DOTA_CAST_ABILITY_2_ALLY number 1748
_G.ACT_DOTA_CAST_ABILITY_2_END number 1541
_G.ACT_DOTA_CAST_ABILITY_2_ES_ROLL number 1653
_G.ACT_DOTA_CAST_ABILITY_2_ES_ROLL_END number 1654
_G.ACT_DOTA_CAST_ABILITY_2_ES_ROLL_START number 1652
_G.ACT_DOTA_CAST_ABILITY_3 number 1512
_G.ACT_DOTA_CAST_ABILITY_3_END number 1542
_G.ACT_DOTA_CAST_ABILITY_4 number 1513
_G.ACT_DOTA_CAST_ABILITY_4_END number 1543
_G.ACT_DOTA_CAST_ABILITY_5 number 1514
_G.ACT_DOTA_CAST_ABILITY_6 number 1515
_G.ACT_DOTA_CAST_ABILITY_7 number 1598
_G.ACT_DOTA_CAST_ABILITY_ROT number 1547
_G.ACT_DOTA_CAST_ALACRITY number 1585
_G.ACT_DOTA_CAST_ALACRITY_ORB number 1741
_G.ACT_DOTA_CAST_BURROW_END number 1702
_G.ACT_DOTA_CAST_CHAOS_METEOR number 1586
_G.ACT_DOTA_CAST_CHAOS_METEOR_ORB number 1742
_G.ACT_DOTA_CAST_COLD_SNAP number 1581
_G.ACT_DOTA_CAST_COLD_SNAP_ORB number 1737
_G.ACT_DOTA_CAST_DEAFENING_BLAST number 1590
_G.ACT_DOTA_CAST_DEAFENING_BLAST_ORB number 1746
_G.ACT_DOTA_CAST_DRAGONBREATH number 1538
_G.ACT_DOTA_CAST_EMP number 1584
_G.ACT_DOTA_CAST_EMP_ORB number 1740
_G.ACT_DOTA_CAST_FENCE number 1775
_G.ACT_DOTA_CAST_FORGE_SPIRIT number 1588
_G.ACT_DOTA_CAST_FORGE_SPIRIT_ORB number 1744
_G.ACT_DOTA_CAST_GHOST_SHIP number 1708
_G.ACT_DOTA_CAST_GHOST_WALK number 1582
_G.ACT_DOTA_CAST_GHOST_WALK_ORB number 1738
_G.ACT_DOTA_CAST_ICE_WALL number 1589
_G.ACT_DOTA_CAST_ICE_WALL_ORB number 1745
_G.ACT_DOTA_CAST_LIFE_BREAK_END number 1564
_G.ACT_DOTA_CAST_LIFE_BREAK_START number 1563
_G.ACT_DOTA_CAST_REFRACTION number 1597
_G.ACT_DOTA_CAST_STATUE number 1754
_G.ACT_DOTA_CAST_SUN_STRIKE number 1587
_G.ACT_DOTA_CAST_SUN_STRIKE_ORB number 1743
_G.ACT_DOTA_CAST_TORNADO number 1583
_G.ACT_DOTA_CAST_TORNADO_ORB number 1739
_G.ACT_DOTA_CAST_WILD_AXES_END number 1562
_G.ACT_DOTA_CENTAUR_STAMPEDE number 1611
_G.ACT_DOTA_CHANNEL_ABILITY_1 number 1520
_G.ACT_DOTA_CHANNEL_ABILITY_2 number 1521
_G.ACT_DOTA_CHANNEL_ABILITY_3 number 1522
_G.ACT_DOTA_CHANNEL_ABILITY_4 number 1523
_G.ACT_DOTA_CHANNEL_ABILITY_5 number 1524
_G.ACT_DOTA_CHANNEL_ABILITY_6 number 1525
_G.ACT_DOTA_CHANNEL_ABILITY_7 number 1600
_G.ACT_DOTA_CHANNEL_END_ABILITY_1 number 1526
_G.ACT_DOTA_CHANNEL_END_ABILITY_2 number 1527
_G.ACT_DOTA_CHANNEL_END_ABILITY_3 number 1528
_G.ACT_DOTA_CHANNEL_END_ABILITY_4 number 1529
_G.ACT_DOTA_CHANNEL_END_ABILITY_5 number 1530
_G.ACT_DOTA_CHANNEL_END_ABILITY_6 number 1531
_G.ACT_DOTA_CHILLING_TOUCH number 1673
_G.ACT_DOTA_COLD_FEET number 1671
_G.ACT_DOTA_CONSTANT_LAYER number 1532
_G.ACT_DOTA_CUSTOM_TOWER_ATTACK number 1734
_G.ACT_DOTA_CUSTOM_TOWER_DIE number 1736
_G.ACT_DOTA_CUSTOM_TOWER_IDLE number 1735
_G.ACT_DOTA_CYCLONE number 1778
_G.ACT_DOTA_DAGON number 1651
_G.ACT_DOTA_DEATH_BY_SNIPER number 1642
_G.ACT_DOTA_DEFEAT number 1592
_G.ACT_DOTA_DEFEAT_START number 1711
_G.ACT_DOTA_DIE number 1506
_G.ACT_DOTA_DIE_SPECIAL number 1548
_G.ACT_DOTA_DISABLED number 1509
_G.ACT_DOTA_DISABLED_END number 1770
_G.ACT_DOTA_DP_SPIRIT_SIPHON number 1712
_G.ACT_DOTA_EARTHSHAKER_TOTEM_ATTACK number 1570
_G.ACT_DOTA_ECHO_SLAM number 1539
_G.ACT_DOTA_ENFEEBLE number 1674
_G.ACT_DOTA_ES_STONE_CALLER number 1714
_G.ACT_DOTA_FATAL_BONDS number 1675
_G.ACT_DOTA_FLAIL number 1508
_G.ACT_DOTA_FLAIL_STATUE number 1767
_G.ACT_DOTA_FLEE number 1685
_G.ACT_DOTA_FLINCH number 1507
_G.ACT_DOTA_FORCESTAFF_END number 1602
_G.ACT_DOTA_FRUSTRATION number 1630
_G.ACT_DOTA_FXANIM number 1709
_G.ACT_DOTA_GENERIC_CHANNEL_1 number 1728
_G.ACT_DOTA_GESTURE_ACCENT number 1625
_G.ACT_DOTA_GESTURE_POINT number 1624
_G.ACT_DOTA_GREET number 1690
_G.ACT_DOTA_GREEVIL_BLINK_BONE number 1621
_G.ACT_DOTA_GREEVIL_CAST number 1617
_G.ACT_DOTA_GREEVIL_HOOK_END number 1620
_G.ACT_DOTA_GREEVIL_HOOK_START number 1619
_G.ACT_DOTA_GREEVIL_OVERRIDE_ABILITY number 1618
_G.ACT_DOTA_GS_INK_CREATURE number 1730
_G.ACT_DOTA_GS_SOUL_CHAIN number 1729
_G.ACT_DOTA_ICE_VORTEX number 1672
_G.ACT_DOTA_IDLE number 1500
_G.ACT_DOTA_IDLE_IMPATIENT number 1636
_G.ACT_DOTA_IDLE_IMPATIENT_SWORD_TAP number 1648
_G.ACT_DOTA_IDLE_RARE number 1501
_G.ACT_DOTA_IDLE_SLEEPING number 1622
_G.ACT_DOTA_IDLE_SLEEPING_END number 1639
_G.ACT_DOTA_IDLE_STATUE number 1764
_G.ACT_DOTA_IMPALE number 1779
_G.ACT_DOTA_INTRO number 1623
_G.ACT_DOTA_INTRO_LOOP number 1649
_G.ACT_DOTA_ITEM_DROP number 1697
_G.ACT_DOTA_ITEM_LOOK number 1628
_G.ACT_DOTA_ITEM_PICKUP number 1696
_G.ACT_DOTA_JAKIRO_LIQUIDFIRE_LOOP number 1575
_G.ACT_DOTA_JAKIRO_LIQUIDFIRE_START number 1574
_G.ACT_DOTA_KILLTAUNT number 1535
_G.ACT_DOTA_KINETIC_FIELD number 1679
_G.ACT_DOTA_LASSO_LOOP number 1578
_G.ACT_DOTA_LEAP_STUN number 1658
_G.ACT_DOTA_LEAP_SWIPE number 1659
_G.ACT_DOTA_LIFESTEALER_ASSIMILATE number 1703
_G.ACT_DOTA_LIFESTEALER_EJECT number 1704
_G.ACT_DOTA_LIFESTEALER_INFEST number 1576
_G.ACT_DOTA_LIFESTEALER_INFEST_END number 1577
_G.ACT_DOTA_LIFESTEALER_OPEN_WOUNDS number 1567
_G.ACT_DOTA_LIFESTEALER_RAGE number 1566
_G.ACT_DOTA_LOADOUT number 1601
_G.ACT_DOTA_LOADOUT_RARE number 1683
_G.ACT_DOTA_LOOK_AROUND number 1643
_G.ACT_DOTA_MAGNUS_SKEWER_END number 1606
_G.ACT_DOTA_MAGNUS_SKEWER_START number 1605
_G.ACT_DOTA_MEDUSA_STONE_GAZE number 1607
_G.ACT_DOTA_MIDNIGHT_PULSE number 1676
_G.ACT_DOTA_MINI_TAUNT number 1681
_G.ACT_DOTA_MK_FUR_ARMY number 1722
_G.ACT_DOTA_MK_SPRING_CAST number 1723
_G.ACT_DOTA_MK_SPRING_END number 1719
_G.ACT_DOTA_MK_SPRING_SOAR number 1718
_G.ACT_DOTA_MK_STRIKE number 1715
_G.ACT_DOTA_MK_TREE_END number 1721
_G.ACT_DOTA_MK_TREE_SOAR number 1720
_G.ACT_DOTA_NECRO_GHOST_SHROUD number 1724
_G.ACT_DOTA_NIAN_INTRO_LEAP number 1660
_G.ACT_DOTA_NIAN_PIN_END number 1657
_G.ACT_DOTA_NIAN_PIN_LOOP number 1656
_G.ACT_DOTA_NIAN_PIN_START number 1655
_G.ACT_DOTA_NIAN_PIN_TO_STUN number 1662
_G.ACT_DOTA_NIGHTSTALKER_TRANSITION number 1565
_G.ACT_DOTA_NOTICE number 1747
_G.ACT_DOTA_OVERRIDE_ABILITY_1 number 1516
_G.ACT_DOTA_OVERRIDE_ABILITY_2 number 1517
_G.ACT_DOTA_OVERRIDE_ABILITY_3 number 1518
_G.ACT_DOTA_OVERRIDE_ABILITY_4 number 1519
_G.ACT_DOTA_OVERRIDE_ARCANA number 1725
_G.ACT_DOTA_PET_LEVEL number 1701
_G.ACT_DOTA_PET_WARD_OBSERVER number 1699
_G.ACT_DOTA_PET_WARD_SENTRY number 1700
_G.ACT_DOTA_POOF_END number 1603
_G.ACT_DOTA_PRESENT_ITEM number 1635
_G.ACT_DOTA_PUNCH number 1753
_G.ACT_DOTA_RADIANT_CREEP_HAMMER number 1772
_G.ACT_DOTA_RATTLETRAP_BATTERYASSAULT number 1549
_G.ACT_DOTA_RATTLETRAP_HOOKSHOT_END number 1553
_G.ACT_DOTA_RATTLETRAP_HOOKSHOT_LOOP number 1552
_G.ACT_DOTA_RATTLETRAP_HOOKSHOT_START number 1551
_G.ACT_DOTA_RATTLETRAP_POWERCOGS number 1550
_G.ACT_DOTA_RAZE_1 number 1663
_G.ACT_DOTA_RAZE_2 number 1664
_G.ACT_DOTA_RAZE_3 number 1665
_G.ACT_DOTA_RELAX_END number 1610
_G.ACT_DOTA_RELAX_IN number 1773
_G.ACT_DOTA_RELAX_LOOP number 1609
_G.ACT_DOTA_RELAX_LOOP_END number 1634
_G.ACT_DOTA_RELAX_OUT number 1774
_G.ACT_DOTA_RELAX_START number 1608
_G.ACT_DOTA_ROQUELAIRE_LAND number 1615
_G.ACT_DOTA_ROQUELAIRE_LAND_IDLE number 1616
_G.ACT_DOTA_RUN number 1502
_G.ACT_DOTA_RUN_ALT number 1777
_G.ACT_DOTA_RUN_STATUE number 1763
_G.ACT_DOTA_SAND_KING_BURROW_IN number 1568
_G.ACT_DOTA_SAND_KING_BURROW_OUT number 1569
_G.ACT_DOTA_SHAKE number 1687
_G.ACT_DOTA_SHALLOW_GRAVE number 1670
_G.ACT_DOTA_SHARPEN_WEAPON number 1637
_G.ACT_DOTA_SHARPEN_WEAPON_OUT number 1638
_G.ACT_DOTA_SHOPKEEPER_PET_INTERACT number 1695
_G.ACT_DOTA_SHRUG number 1633
_G.ACT_DOTA_SHUFFLE_L number 1749
_G.ACT_DOTA_SHUFFLE_R number 1750
_G.ACT_DOTA_SLARK_POUNCE number 1604
_G.ACT_DOTA_SLEEPING_END number 1626
_G.ACT_DOTA_SLIDE number 1726
_G.ACT_DOTA_SLIDE_LOOP number 1727
_G.ACT_DOTA_SPAWN number 1534
_G.ACT_DOTA_SPIRIT_BREAKER_CHARGE_END number 1594
_G.ACT_DOTA_SPIRIT_BREAKER_CHARGE_POSE number 1593
_G.ACT_DOTA_SPIRIT_BREAKER_ULT_RUN number 1752
_G.ACT_DOTA_SPWN number 1776
_G.ACT_DOTA_STARTLE number 1629
_G.ACT_DOTA_STATIC_STORM number 1680
_G.ACT_DOTA_STATUE_SEQUENCE number 1761
_G.ACT_DOTA_STORM_ABILITY_4 number 1762
_G.ACT_DOTA_STUN_STATUE number 1766
_G.ACT_DOTA_SWIM number 1684
_G.ACT_DOTA_SWIM_IDLE number 1688
_G.ACT_DOTA_TAUNT number 1536
_G.ACT_DOTA_TAUNT_SNIPER number 1641
_G.ACT_DOTA_TAUNT_STATUE number 1760
_G.ACT_DOTA_TELEPORT number 1595
_G.ACT_DOTA_TELEPORT_COOP_END number 1693
_G.ACT_DOTA_TELEPORT_COOP_EXIT number 1694
_G.ACT_DOTA_TELEPORT_COOP_START number 1691
_G.ACT_DOTA_TELEPORT_COOP_WAIT number 1692
_G.ACT_DOTA_TELEPORT_END number 1596
_G.ACT_DOTA_TELEPORT_END_REACT number 1632
_G.ACT_DOTA_TELEPORT_REACT number 1631
_G.ACT_DOTA_TELEPORT_STATUE number 1758
_G.ACT_DOTA_THIRST number 1537
_G.ACT_DOTA_THUNDER_STRIKE number 1678
_G.ACT_DOTA_TINKER_REARM1 number 1555
_G.ACT_DOTA_TINKER_REARM2 number 1556
_G.ACT_DOTA_TINKER_REARM3 number 1557
_G.ACT_DOTA_TORRENT number 1780
_G.ACT_DOTA_TRANSITION number 1731
_G.ACT_DOTA_TRICKS_END number 1713
_G.ACT_DOTA_TROT number 1686
_G.ACT_DOTA_UNDYING_DECAY number 1666
_G.ACT_DOTA_UNDYING_SOUL_RIP number 1667
_G.ACT_DOTA_UNDYING_TOMBSTONE number 1668
_G.ACT_DOTA_VERSUS number 1716
_G.ACT_DOTA_VICTORY number 1591
_G.ACT_DOTA_VICTORY_START number 1710
_G.ACT_DOTA_VICTORY_STATUE number 1759
_G.ACT_DOTA_WAIT_IDLE number 1689
_G.ACT_DOTA_WEAVERBUG_ATTACH number 1561
_G.ACT_DOTA_WHEEL_LAYER number 1571
_G.ACT_DOTA_WHIRLING_AXES_RANGED number 1669
_G.ACT_DO_NOT_DISTURB number 179
_G.ACT_DROP_WEAPON number 73
_G.ACT_DROP_WEAPON_SHOTGUN number 74
_G.ACT_DUCK_DODGE number 395
_G.ACT_DYINGLOOP number 430
_G.ACT_DYINGTODEAD number 431
_G.ACT_EXPLODE number 910
_G.ACT_FIRE number 906
_G.ACT_FIRE_END number 438
_G.ACT_FIRE_LOOP number 437
_G.ACT_FIRE_RECOVER number 907
_G.ACT_FIRE_START number 436
_G.ACT_FLICK_LEFT number 900
_G.ACT_FLICK_LEFT_MIDDLE number 901
_G.ACT_FLICK_RIGHT number 903
_G.ACT_FLICK_RIGHT_MIDDLE number 902
_G.ACT_FLINCH_CHEST number 119
_G.ACT_FLINCH_CHEST_BACK number 127
_G.ACT_FLINCH_CROUCH_BACK number 130
_G.ACT_FLINCH_CROUCH_FRONT number 129
_G.ACT_FLINCH_CROUCH_LEFT number 131
_G.ACT_FLINCH_CROUCH_RIGHT number 132
_G.ACT_FLINCH_HEAD number 118
_G.ACT_FLINCH_HEAD_BACK number 126
_G.ACT_FLINCH_LEFTARM number 121
_G.ACT_FLINCH_LEFTLEG number 123
_G.ACT_FLINCH_PHYSICS number 125
_G.ACT_FLINCH_RIGHTARM number 122
_G.ACT_FLINCH_RIGHTLEG number 124
_G.ACT_FLINCH_STOMACH number 120
_G.ACT_FLINCH_STOMACH_BACK number 128
_G.ACT_FLY number 25
_G.ACT_GAUSS_SPINCYCLE number 476
_G.ACT_GAUSS_SPINUP number 475
_G.ACT_GESTURE_BARNACLE_STRANGLE number 397
_G.ACT_GESTURE_BIG_FLINCH number 153
_G.ACT_GESTURE_FLINCH_BLAST number 154
_G.ACT_GESTURE_FLINCH_BLAST_DAMAGED number 156
_G.ACT_GESTURE_FLINCH_BLAST_DAMAGED_SHOTGUN number 157
_G.ACT_GESTURE_FLINCH_BLAST_SHOTGUN number 155
_G.ACT_GESTURE_FLINCH_CHEST number 159
_G.ACT_GESTURE_FLINCH_HEAD number 158
_G.ACT_GESTURE_FLINCH_LEFTARM number 161
_G.ACT_GESTURE_FLINCH_LEFTLEG number 163
_G.ACT_GESTURE_FLINCH_RIGHTARM number 162
_G.ACT_GESTURE_FLINCH_RIGHTLEG number 164
_G.ACT_GESTURE_FLINCH_STOMACH number 160
_G.ACT_GESTURE_MELEE_ATTACK1 number 147
_G.ACT_GESTURE_MELEE_ATTACK2 number 148
_G.ACT_GESTURE_MELEE_ATTACK_SWING number 313
_G.ACT_GESTURE_RANGE_ATTACK1 number 145
_G.ACT_GESTURE_RANGE_ATTACK1_LOW number 149
_G.ACT_GESTURE_RANGE_ATTACK2 number 146
_G.ACT_GESTURE_RANGE_ATTACK2_LOW number 150
_G.ACT_GESTURE_RANGE_ATTACK_AR1 number 298
_G.ACT_GESTURE_RANGE_ATTACK_AR2 number 299
_G.ACT_GESTURE_RANGE_ATTACK_AR2_GRENADE number 300
_G.ACT_GESTURE_RANGE_ATTACK_HMG1 number 301
_G.ACT_GESTURE_RANGE_ATTACK_ML number 302
_G.ACT_GESTURE_RANGE_ATTACK_PISTOL number 307
_G.ACT_GESTURE_RANGE_ATTACK_PISTOL_LOW number 308
_G.ACT_GESTURE_RANGE_ATTACK_SHOTGUN number 306
_G.ACT_GESTURE_RANGE_ATTACK_SLAM number 309
_G.ACT_GESTURE_RANGE_ATTACK_SMG1 number 303
_G.ACT_GESTURE_RANGE_ATTACK_SMG1_LOW number 304
_G.ACT_GESTURE_RANGE_ATTACK_SMG2 number 305
_G.ACT_GESTURE_RANGE_ATTACK_SNIPER_RIFLE number 312
_G.ACT_GESTURE_RANGE_ATTACK_THROW number 311
_G.ACT_GESTURE_RANGE_ATTACK_TRIPWIRE number 310
_G.ACT_GESTURE_RELOAD number 377
_G.ACT_GESTURE_RELOAD_PISTOL number 378
_G.ACT_GESTURE_RELOAD_SHOTGUN number 380
_G.ACT_GESTURE_RELOAD_SMG1 number 379
_G.ACT_GESTURE_SMALL_FLINCH number 152
_G.ACT_GESTURE_TURN_LEFT number 165
_G.ACT_GESTURE_TURN_LEFT45 number 167
_G.ACT_GESTURE_TURN_LEFT45_FLAT number 171
_G.ACT_GESTURE_TURN_LEFT90 number 169
_G.ACT_GESTURE_TURN_LEFT90_FLAT number 173
_G.ACT_GESTURE_TURN_RIGHT number 166
_G.ACT_GESTURE_TURN_RIGHT45 number 168
_G.ACT_GESTURE_TURN_RIGHT45_FLAT number 172
_G.ACT_GESTURE_TURN_RIGHT90 number 170
_G.ACT_GESTURE_TURN_RIGHT90_FLAT number 174
_G.ACT_GLIDE number 27
_G.ACT_GRABBITYGLOVES_ACTIVE number 958
_G.ACT_GRABBITYGLOVES_ACTIVE_IDLE number 959
_G.ACT_GRABBITYGLOVES_DEACTIVATE number 960
_G.ACT_GRABBITYGLOVES_GRAB number 955
_G.ACT_GRABBITYGLOVES_GRAB_IDLE number 957
_G.ACT_GRABBITYGLOVES_PULL number 961
_G.ACT_GRABBITYGLOVES_RELEASE number 956
_G.ACT_HEADCRAB_SMOKE_BOMB number 962
_G.ACT_HEADCRAB_SPIT number 963
_G.ACT_HL2MP_GESTURE_RANGE_ATTACK_MELEE number 500
_G.ACT_HL2MP_GESTURE_RELOAD_MELEE number 501
_G.ACT_HL2MP_IDLE_CROUCH_MELEE number 498
_G.ACT_HL2MP_IDLE_MELEE number 496
_G.ACT_HL2MP_JUMP_MELEE number 502
_G.ACT_HL2MP_RUN_MELEE number 497
_G.ACT_HL2MP_WALK_CROUCH_MELEE number 499
_G.ACT_HOP number 30
_G.ACT_HOVER number 26
_G.ACT_IDLE number 1
_G.ACT_IDLETORUN number 493
_G.ACT_IDLE_AGITATED number 80
_G.ACT_IDLE_AIM_AGITATED number 93
_G.ACT_IDLE_AIM_AUTOGUN number 879
_G.ACT_IDLE_AIM_DUAL number 888
_G.ACT_IDLE_AIM_PISTOL number 884
_G.ACT_IDLE_AIM_RELAXED number 91
_G.ACT_IDLE_AIM_RIFLE number 895
_G.ACT_IDLE_AIM_RIFLE_STIMULATED number 331
_G.ACT_IDLE_AIM_SHOTGUN number 893
_G.ACT_IDLE_AIM_STEALTH number 94
_G.ACT_IDLE_AIM_STIMULATED number 92
_G.ACT_IDLE_ANGRY number 77
_G.ACT_IDLE_ANGRY_MELEE number 342
_G.ACT_IDLE_ANGRY_PISTOL number 318
_G.ACT_IDLE_ANGRY_RPG number 345
_G.ACT_IDLE_ANGRY_SHOTGUN number 319
_G.ACT_IDLE_ANGRY_SMG1 number 316
_G.ACT_IDLE_AUTOGUN number 878
_G.ACT_IDLE_CARRY number 427
_G.ACT_IDLE_DUAL number 887
_G.ACT_IDLE_HURT number 82
_G.ACT_IDLE_MANNEDGUN number 340
_G.ACT_IDLE_MELEE number 341
_G.ACT_IDLE_ON_FIRE number 133
_G.ACT_IDLE_PACKAGE number 321
_G.ACT_IDLE_PISTOL number 317
_G.ACT_IDLE_RELAXED number 78
_G.ACT_IDLE_RIFLE number 314
_G.ACT_IDLE_RPG number 344
_G.ACT_IDLE_RPG_RELAXED number 343
_G.ACT_IDLE_SHOTGUN_AGITATED number 336
_G.ACT_IDLE_SHOTGUN_RELAXED number 334
_G.ACT_IDLE_SHOTGUN_STIMULATED number 335
_G.ACT_IDLE_SMG1 number 315
_G.ACT_IDLE_SMG1_RELAXED number 325
_G.ACT_IDLE_SMG1_STIMULATED number 326
_G.ACT_IDLE_STEALTH number 81
_G.ACT_IDLE_STEALTH_PISTOL number 320
_G.ACT_IDLE_STIMULATED number 79
_G.ACT_IDLE_SUITCASE number 323
_G.ACT_ITEM1_VM_DRAW number 852
_G.ACT_ITEM1_VM_DRYFIRE number 859
_G.ACT_ITEM1_VM_HOLSTER number 853
_G.ACT_ITEM1_VM_IDLE number 854
_G.ACT_ITEM1_VM_IDLE_LOWERED number 861
_G.ACT_ITEM1_VM_IDLE_TO_LOWERED number 860
_G.ACT_ITEM1_VM_LOWERED_TO_IDLE number 862
_G.ACT_ITEM1_VM_PRIMARYATTACK number 856
_G.ACT_ITEM1_VM_PULLBACK number 855
_G.ACT_ITEM1_VM_RELOAD number 858
_G.ACT_ITEM1_VM_SECONDARYATTACK number 857
_G.ACT_ITEM2_VM_DRAW number 863
_G.ACT_ITEM2_VM_DRYFIRE number 870
_G.ACT_ITEM2_VM_HOLSTER number 864
_G.ACT_ITEM2_VM_IDLE number 865
_G.ACT_ITEM2_VM_IDLE_LOWERED number 872
_G.ACT_ITEM2_VM_IDLE_TO_LOWERED number 871
_G.ACT_ITEM2_VM_LOWERED_TO_IDLE number 873
_G.ACT_ITEM2_VM_PRIMARYATTACK number 867
_G.ACT_ITEM2_VM_PULLBACK number 866
_G.ACT_ITEM2_VM_RELOAD number 869
_G.ACT_ITEM2_VM_SECONDARYATTACK number 868
_G.ACT_JUMP number 29
_G.ACT_JUMP_AUTOGUN number 883
_G.ACT_JUMP_DUAL number 892
_G.ACT_LAND number 32
_G.ACT_LEAP number 31
_G.ACT_LOOKBACK_LEFT number 61
_G.ACT_LOOKBACK_RIGHT number 60
_G.ACT_MELEE_ATTACK1 number 65
_G.ACT_MELEE_ATTACK2 number 66
_G.ACT_MELEE_ATTACK_SWING number 291
_G.ACT_MELEE_ATTACK_SWING_GESTURE number 151
_G.ACT_MELEE_VM_DRAW number 830
_G.ACT_MELEE_VM_DRYFIRE number 837
_G.ACT_MELEE_VM_HOLSTER number 831
_G.ACT_MELEE_VM_IDLE number 832
_G.ACT_MELEE_VM_IDLE_LOWERED number 839
_G.ACT_MELEE_VM_IDLE_TO_LOWERED number 838
_G.ACT_MELEE_VM_LOWERED_TO_IDLE number 840
_G.ACT_MELEE_VM_PRIMARYATTACK number 834
_G.ACT_MELEE_VM_PULLBACK number 833
_G.ACT_MELEE_VM_RELOAD number 836
_G.ACT_MELEE_VM_SECONDARYATTACK number 835
_G.ACT_MIRANA_LEAP_END number 1544
_G.ACT_MP_AIRWALK number 510
_G.ACT_MP_AIRWALK_BUILDING number 729
_G.ACT_MP_AIRWALK_ITEM1 number 646
_G.ACT_MP_AIRWALK_ITEM2 number 663
_G.ACT_MP_AIRWALK_MELEE number 625
_G.ACT_MP_AIRWALK_PDA number 748
_G.ACT_MP_AIRWALK_PRIMARY number 559
_G.ACT_MP_AIRWALK_SECONDARY number 594
_G.ACT_MP_ATTACK_AIRWALK_BUILDING number 739
_G.ACT_MP_ATTACK_AIRWALK_GRENADE number 535
_G.ACT_MP_ATTACK_AIRWALK_GRENADE_BUILDING number 743
_G.ACT_MP_ATTACK_AIRWALK_GRENADE_MELEE number 641
_G.ACT_MP_ATTACK_AIRWALK_GRENADE_PRIMARY number 589
_G.ACT_MP_ATTACK_AIRWALK_GRENADE_SECONDARY number 620
_G.ACT_MP_ATTACK_AIRWALK_ITEM1 number 658
_G.ACT_MP_ATTACK_AIRWALK_ITEM2 number 675
_G.ACT_MP_ATTACK_AIRWALK_MELEE number 637
_G.ACT_MP_ATTACK_AIRWALK_PRIMARY number 573
_G.ACT_MP_ATTACK_AIRWALK_PRIMARYFIRE number 533
_G.ACT_MP_ATTACK_AIRWALK_SECONDARY number 604
_G.ACT_MP_ATTACK_AIRWALK_SECONDARYFIRE number 534
_G.ACT_MP_ATTACK_CROUCH_BUILDING number 737
_G.ACT_MP_ATTACK_CROUCH_GRENADE number 529
_G.ACT_MP_ATTACK_CROUCH_GRENADE_BUILDING number 741
_G.ACT_MP_ATTACK_CROUCH_GRENADE_MELEE number 639
_G.ACT_MP_ATTACK_CROUCH_GRENADE_PRIMARY number 587
_G.ACT_MP_ATTACK_CROUCH_GRENADE_SECONDARY number 618
_G.ACT_MP_ATTACK_CROUCH_ITEM1 number 655
_G.ACT_MP_ATTACK_CROUCH_ITEM1_SECONDARY number 656
_G.ACT_MP_ATTACK_CROUCH_ITEM2 number 672
_G.ACT_MP_ATTACK_CROUCH_ITEM2_SECONDARY number 673
_G.ACT_MP_ATTACK_CROUCH_MELEE number 634
_G.ACT_MP_ATTACK_CROUCH_MELEE_SECONDARY number 635
_G.ACT_MP_ATTACK_CROUCH_POSTFIRE number 552
_G.ACT_MP_ATTACK_CROUCH_PREFIRE number 551
_G.ACT_MP_ATTACK_CROUCH_PRIMARY number 570
_G.ACT_MP_ATTACK_CROUCH_PRIMARYFIRE number 526
_G.ACT_MP_ATTACK_CROUCH_PRIMARYFIRE_DEPLOYED number 527
_G.ACT_MP_ATTACK_CROUCH_PRIMARY_DEPLOYED number 571
_G.ACT_MP_ATTACK_CROUCH_SECONDARY number 602
_G.ACT_MP_ATTACK_CROUCH_SECONDARYFIRE number 528
_G.ACT_MP_ATTACK_STAND_BUILDING number 736
_G.ACT_MP_ATTACK_STAND_GRENADE number 525
_G.ACT_MP_ATTACK_STAND_GRENADE_BUILDING number 740
_G.ACT_MP_ATTACK_STAND_GRENADE_MELEE number 638
_G.ACT_MP_ATTACK_STAND_GRENADE_PRIMARY number 586
_G.ACT_MP_ATTACK_STAND_GRENADE_SECONDARY number 617
_G.ACT_MP_ATTACK_STAND_ITEM1 number 653
_G.ACT_MP_ATTACK_STAND_ITEM1_SECONDARY number 654
_G.ACT_MP_ATTACK_STAND_ITEM2 number 670
_G.ACT_MP_ATTACK_STAND_ITEM2_SECONDARY number 671
_G.ACT_MP_ATTACK_STAND_MELEE number 632
_G.ACT_MP_ATTACK_STAND_MELEE_SECONDARY number 633
_G.ACT_MP_ATTACK_STAND_PDA number 755
_G.ACT_MP_ATTACK_STAND_POSTFIRE number 549
_G.ACT_MP_ATTACK_STAND_PREFIRE number 548
_G.ACT_MP_ATTACK_STAND_PRIMARY number 568
_G.ACT_MP_ATTACK_STAND_PRIMARYFIRE number 522
_G.ACT_MP_ATTACK_STAND_PRIMARYFIRE_DEPLOYED number 523
_G.ACT_MP_ATTACK_STAND_PRIMARY_DEPLOYED number 569
_G.ACT_MP_ATTACK_STAND_SECONDARY number 601
_G.ACT_MP_ATTACK_STAND_SECONDARYFIRE number 524
_G.ACT_MP_ATTACK_STAND_STARTFIRE number 550
_G.ACT_MP_ATTACK_SWIM_BUILDING number 738
_G.ACT_MP_ATTACK_SWIM_GRENADE number 532
_G.ACT_MP_ATTACK_SWIM_GRENADE_BUILDING number 742
_G.ACT_MP_ATTACK_SWIM_GRENADE_MELEE number 640
_G.ACT_MP_ATTACK_SWIM_GRENADE_PRIMARY number 588
_G.ACT_MP_ATTACK_SWIM_GRENADE_SECONDARY number 619
_G.ACT_MP_ATTACK_SWIM_ITEM1 number 657
_G.ACT_MP_ATTACK_SWIM_ITEM2 number 674
_G.ACT_MP_ATTACK_SWIM_MELEE number 636
_G.ACT_MP_ATTACK_SWIM_PDA number 756
_G.ACT_MP_ATTACK_SWIM_POSTFIRE number 554
_G.ACT_MP_ATTACK_SWIM_PREFIRE number 553
_G.ACT_MP_ATTACK_SWIM_PRIMARY number 572
_G.ACT_MP_ATTACK_SWIM_PRIMARYFIRE number 530
_G.ACT_MP_ATTACK_SWIM_SECONDARY number 603
_G.ACT_MP_ATTACK_SWIM_SECONDARYFIRE number 531
_G.ACT_MP_CROUCHWALK number 511
_G.ACT_MP_CROUCHWALK_BUILDING number 730
_G.ACT_MP_CROUCHWALK_ITEM1 number 647
_G.ACT_MP_CROUCHWALK_ITEM2 number 664
_G.ACT_MP_CROUCHWALK_MELEE number 626
_G.ACT_MP_CROUCHWALK_PDA number 749
_G.ACT_MP_CROUCHWALK_PRIMARY number 560
_G.ACT_MP_CROUCHWALK_SECONDARY number 595
_G.ACT_MP_CROUCH_BUILDING number 726
_G.ACT_MP_CROUCH_DEPLOYED number 506
_G.ACT_MP_CROUCH_DEPLOYED_IDLE number 505
_G.ACT_MP_CROUCH_IDLE number 504
_G.ACT_MP_CROUCH_ITEM1 number 643
_G.ACT_MP_CROUCH_ITEM2 number 660
_G.ACT_MP_CROUCH_MELEE number 622
_G.ACT_MP_CROUCH_PDA number 745
_G.ACT_MP_CROUCH_PRIMARY number 556
_G.ACT_MP_CROUCH_SECONDARY number 591
_G.ACT_MP_DEPLOYED number 519
_G.ACT_MP_DEPLOYED_IDLE number 507
_G.ACT_MP_DEPLOYED_PRIMARY number 566
_G.ACT_MP_DOUBLEJUMP number 517
_G.ACT_MP_GESTURE_FLINCH number 676
_G.ACT_MP_GESTURE_FLINCH_CHEST number 683
_G.ACT_MP_GESTURE_FLINCH_HEAD number 682
_G.ACT_MP_GESTURE_FLINCH_ITEM1 number 680
_G.ACT_MP_GESTURE_FLINCH_ITEM2 number 681
_G.ACT_MP_GESTURE_FLINCH_LEFTARM number 685
_G.ACT_MP_GESTURE_FLINCH_LEFTLEG number 687
_G.ACT_MP_GESTURE_FLINCH_MELEE number 679
_G.ACT_MP_GESTURE_FLINCH_PRIMARY number 677
_G.ACT_MP_GESTURE_FLINCH_RIGHTARM number 686
_G.ACT_MP_GESTURE_FLINCH_RIGHTLEG number 688
_G.ACT_MP_GESTURE_FLINCH_SECONDARY number 678
_G.ACT_MP_GESTURE_FLINCH_STOMACH number 684
_G.ACT_MP_GESTURE_VC_FINGERPOINT number 758
_G.ACT_MP_GESTURE_VC_FINGERPOINT_BUILDING number 794
_G.ACT_MP_GESTURE_VC_FINGERPOINT_ITEM1 number 782
_G.ACT_MP_GESTURE_VC_FINGERPOINT_ITEM2 number 788
_G.ACT_MP_GESTURE_VC_FINGERPOINT_MELEE number 776
_G.ACT_MP_GESTURE_VC_FINGERPOINT_PDA number 800
_G.ACT_MP_GESTURE_VC_FINGERPOINT_PRIMARY number 764
_G.ACT_MP_GESTURE_VC_FINGERPOINT_SECONDARY number 770
_G.ACT_MP_GESTURE_VC_FISTPUMP number 759
_G.ACT_MP_GESTURE_VC_FISTPUMP_BUILDING number 795
_G.ACT_MP_GESTURE_VC_FISTPUMP_ITEM1 number 783
_G.ACT_MP_GESTURE_VC_FISTPUMP_ITEM2 number 789
_G.ACT_MP_GESTURE_VC_FISTPUMP_MELEE number 777
_G.ACT_MP_GESTURE_VC_FISTPUMP_PDA number 801
_G.ACT_MP_GESTURE_VC_FISTPUMP_PRIMARY number 765
_G.ACT_MP_GESTURE_VC_FISTPUMP_SECONDARY number 771
_G.ACT_MP_GESTURE_VC_HANDMOUTH number 757
_G.ACT_MP_GESTURE_VC_HANDMOUTH_BUILDING number 793
_G.ACT_MP_GESTURE_VC_HANDMOUTH_ITEM1 number 781
_G.ACT_MP_GESTURE_VC_HANDMOUTH_ITEM2 number 787
_G.ACT_MP_GESTURE_VC_HANDMOUTH_MELEE number 775
_G.ACT_MP_GESTURE_VC_HANDMOUTH_PDA number 799
_G.ACT_MP_GESTURE_VC_HANDMOUTH_PRIMARY number 763
_G.ACT_MP_GESTURE_VC_HANDMOUTH_SECONDARY number 769
_G.ACT_MP_GESTURE_VC_NODNO number 762
_G.ACT_MP_GESTURE_VC_NODNO_BUILDING number 798
_G.ACT_MP_GESTURE_VC_NODNO_ITEM1 number 786
_G.ACT_MP_GESTURE_VC_NODNO_ITEM2 number 792
_G.ACT_MP_GESTURE_VC_NODNO_MELEE number 780
_G.ACT_MP_GESTURE_VC_NODNO_PDA number 804
_G.ACT_MP_GESTURE_VC_NODNO_PRIMARY number 768
_G.ACT_MP_GESTURE_VC_NODNO_SECONDARY number 774
_G.ACT_MP_GESTURE_VC_NODYES number 761
_G.ACT_MP_GESTURE_VC_NODYES_BUILDING number 797
_G.ACT_MP_GESTURE_VC_NODYES_ITEM1 number 785
_G.ACT_MP_GESTURE_VC_NODYES_ITEM2 number 791
_G.ACT_MP_GESTURE_VC_NODYES_MELEE number 779
_G.ACT_MP_GESTURE_VC_NODYES_PDA number 803
_G.ACT_MP_GESTURE_VC_NODYES_PRIMARY number 767
_G.ACT_MP_GESTURE_VC_NODYES_SECONDARY number 773
_G.ACT_MP_GESTURE_VC_THUMBSUP number 760
_G.ACT_MP_GESTURE_VC_THUMBSUP_BUILDING number 796
_G.ACT_MP_GESTURE_VC_THUMBSUP_ITEM1 number 784
_G.ACT_MP_GESTURE_VC_THUMBSUP_ITEM2 number 790
_G.ACT_MP_GESTURE_VC_THUMBSUP_MELEE number 778
_G.ACT_MP_GESTURE_VC_THUMBSUP_PDA number 802
_G.ACT_MP_GESTURE_VC_THUMBSUP_PRIMARY number 766
_G.ACT_MP_GESTURE_VC_THUMBSUP_SECONDARY number 772
_G.ACT_MP_GRENADE1_ATTACK number 691
_G.ACT_MP_GRENADE1_DRAW number 689
_G.ACT_MP_GRENADE1_IDLE number 690
_G.ACT_MP_GRENADE2_ATTACK number 694
_G.ACT_MP_GRENADE2_DRAW number 692
_G.ACT_MP_GRENADE2_IDLE number 693
_G.ACT_MP_ITEM1_GRENADE1_ATTACK number 715
_G.ACT_MP_ITEM1_GRENADE1_DRAW number 713
_G.ACT_MP_ITEM1_GRENADE1_IDLE number 714
_G.ACT_MP_ITEM1_GRENADE2_ATTACK number 718
_G.ACT_MP_ITEM1_GRENADE2_DRAW number 716
_G.ACT_MP_ITEM1_GRENADE2_IDLE number 717
_G.ACT_MP_ITEM2_GRENADE1_ATTACK number 721
_G.ACT_MP_ITEM2_GRENADE1_DRAW number 719
_G.ACT_MP_ITEM2_GRENADE1_IDLE number 720
_G.ACT_MP_ITEM2_GRENADE2_ATTACK number 724
_G.ACT_MP_ITEM2_GRENADE2_DRAW number 722
_G.ACT_MP_ITEM2_GRENADE2_IDLE number 723
_G.ACT_MP_JUMP number 513
_G.ACT_MP_JUMP_BUILDING number 731
_G.ACT_MP_JUMP_FLOAT number 515
_G.ACT_MP_JUMP_FLOAT_BUILDING number 733
_G.ACT_MP_JUMP_FLOAT_ITEM1 number 650
_G.ACT_MP_JUMP_FLOAT_ITEM2 number 667
_G.ACT_MP_JUMP_FLOAT_MELEE number 629
_G.ACT_MP_JUMP_FLOAT_PDA number 752
_G.ACT_MP_JUMP_FLOAT_PRIMARY number 563
_G.ACT_MP_JUMP_FLOAT_SECONDARY number 598
_G.ACT_MP_JUMP_ITEM1 number 648
_G.ACT_MP_JUMP_ITEM2 number 665
_G.ACT_MP_JUMP_LAND number 516
_G.ACT_MP_JUMP_LAND_BUILDING number 734
_G.ACT_MP_JUMP_LAND_ITEM1 number 651
_G.ACT_MP_JUMP_LAND_ITEM2 number 668
_G.ACT_MP_JUMP_LAND_MELEE number 630
_G.ACT_MP_JUMP_LAND_PDA number 753
_G.ACT_MP_JUMP_LAND_PRIMARY number 564
_G.ACT_MP_JUMP_LAND_SECONDARY number 599
_G.ACT_MP_JUMP_MELEE number 627
_G.ACT_MP_JUMP_PDA number 750
_G.ACT_MP_JUMP_PRIMARY number 561
_G.ACT_MP_JUMP_SECONDARY number 596
_G.ACT_MP_JUMP_START number 514
_G.ACT_MP_JUMP_START_BUILDING number 732
_G.ACT_MP_JUMP_START_ITEM1 number 649
_G.ACT_MP_JUMP_START_ITEM2 number 666
_G.ACT_MP_JUMP_START_MELEE number 628
_G.ACT_MP_JUMP_START_PDA number 751
_G.ACT_MP_JUMP_START_PRIMARY number 562
_G.ACT_MP_JUMP_START_SECONDARY number 597
_G.ACT_MP_MELEE_GRENADE1_ATTACK number 709
_G.ACT_MP_MELEE_GRENADE1_DRAW number 707
_G.ACT_MP_MELEE_GRENADE1_IDLE number 708
_G.ACT_MP_MELEE_GRENADE2_ATTACK number 712
_G.ACT_MP_MELEE_GRENADE2_DRAW number 710
_G.ACT_MP_MELEE_GRENADE2_IDLE number 711
_G.ACT_MP_PRIMARY_GRENADE1_ATTACK number 697
_G.ACT_MP_PRIMARY_GRENADE1_DRAW number 695
_G.ACT_MP_PRIMARY_GRENADE1_IDLE number 696
_G.ACT_MP_PRIMARY_GRENADE2_ATTACK number 700
_G.ACT_MP_PRIMARY_GRENADE2_DRAW number 698
_G.ACT_MP_PRIMARY_GRENADE2_IDLE number 699
_G.ACT_MP_RELOAD_AIRWALK number 545
_G.ACT_MP_RELOAD_AIRWALK_END number 547
_G.ACT_MP_RELOAD_AIRWALK_LOOP number 546
_G.ACT_MP_RELOAD_AIRWALK_PRIMARY number 583
_G.ACT_MP_RELOAD_AIRWALK_PRIMARY_END number 585
_G.ACT_MP_RELOAD_AIRWALK_PRIMARY_LOOP number 584
_G.ACT_MP_RELOAD_AIRWALK_SECONDARY number 614
_G.ACT_MP_RELOAD_AIRWALK_SECONDARY_END number 616
_G.ACT_MP_RELOAD_AIRWALK_SECONDARY_LOOP number 615
_G.ACT_MP_RELOAD_CROUCH number 539
_G.ACT_MP_RELOAD_CROUCH_END number 541
_G.ACT_MP_RELOAD_CROUCH_LOOP number 540
_G.ACT_MP_RELOAD_CROUCH_PRIMARY number 577
_G.ACT_MP_RELOAD_CROUCH_PRIMARY_END number 579
_G.ACT_MP_RELOAD_CROUCH_PRIMARY_LOOP number 578
_G.ACT_MP_RELOAD_CROUCH_SECONDARY number 608
_G.ACT_MP_RELOAD_CROUCH_SECONDARY_END number 610
_G.ACT_MP_RELOAD_CROUCH_SECONDARY_LOOP number 609
_G.ACT_MP_RELOAD_STAND number 536
_G.ACT_MP_RELOAD_STAND_END number 538
_G.ACT_MP_RELOAD_STAND_LOOP number 537
_G.ACT_MP_RELOAD_STAND_PRIMARY number 574
_G.ACT_MP_RELOAD_STAND_PRIMARY_END number 576
_G.ACT_MP_RELOAD_STAND_PRIMARY_LOOP number 575
_G.ACT_MP_RELOAD_STAND_SECONDARY number 605
_G.ACT_MP_RELOAD_STAND_SECONDARY_END number 607
_G.ACT_MP_RELOAD_STAND_SECONDARY_LOOP number 606
_G.ACT_MP_RELOAD_SWIM number 542
_G.ACT_MP_RELOAD_SWIM_END number 544
_G.ACT_MP_RELOAD_SWIM_LOOP number 543
_G.ACT_MP_RELOAD_SWIM_PRIMARY number 580
_G.ACT_MP_RELOAD_SWIM_PRIMARY_END number 582
_G.ACT_MP_RELOAD_SWIM_PRIMARY_LOOP number 581
_G.ACT_MP_RELOAD_SWIM_SECONDARY number 611
_G.ACT_MP_RELOAD_SWIM_SECONDARY_END number 613
_G.ACT_MP_RELOAD_SWIM_SECONDARY_LOOP number 612
_G.ACT_MP_RUN number 508
_G.ACT_MP_RUN_BUILDING number 727
_G.ACT_MP_RUN_ITEM1 number 644
_G.ACT_MP_RUN_ITEM2 number 661
_G.ACT_MP_RUN_MELEE number 623
_G.ACT_MP_RUN_PDA number 746
_G.ACT_MP_RUN_PRIMARY number 557
_G.ACT_MP_RUN_SECONDARY number 592
_G.ACT_MP_SECONDARY_GRENADE1_ATTACK number 703
_G.ACT_MP_SECONDARY_GRENADE1_DRAW number 701
_G.ACT_MP_SECONDARY_GRENADE1_IDLE number 702
_G.ACT_MP_SECONDARY_GRENADE2_ATTACK number 706
_G.ACT_MP_SECONDARY_GRENADE2_DRAW number 704
_G.ACT_MP_SECONDARY_GRENADE2_IDLE number 705
_G.ACT_MP_SPRINT number 512
_G.ACT_MP_STAND_BUILDING number 725
_G.ACT_MP_STAND_IDLE number 503
_G.ACT_MP_STAND_ITEM1 number 642
_G.ACT_MP_STAND_ITEM2 number 659
_G.ACT_MP_STAND_MELEE number 621
_G.ACT_MP_STAND_PDA number 744
_G.ACT_MP_STAND_PRIMARY number 555
_G.ACT_MP_STAND_SECONDARY number 590
_G.ACT_MP_SWIM number 518
_G.ACT_MP_SWIM_BUILDING number 735
_G.ACT_MP_SWIM_DEPLOYED number 520
_G.ACT_MP_SWIM_DEPLOYED_PRIMARY number 567
_G.ACT_MP_SWIM_ITEM1 number 652
_G.ACT_MP_SWIM_ITEM2 number 669
_G.ACT_MP_SWIM_MELEE number 631
_G.ACT_MP_SWIM_PDA number 754
_G.ACT_MP_SWIM_PRIMARY number 565
_G.ACT_MP_SWIM_SECONDARY number 600
_G.ACT_MP_VCD number 521
_G.ACT_MP_WALK number 509
_G.ACT_MP_WALK_BUILDING number 728
_G.ACT_MP_WALK_ITEM1 number 645
_G.ACT_MP_WALK_ITEM2 number 662
_G.ACT_MP_WALK_MELEE number 624
_G.ACT_MP_WALK_PDA number 747
_G.ACT_MP_WALK_PRIMARY number 558
_G.ACT_MP_WALK_SECONDARY number 593
_G.ACT_NEUTRAL_REF_POSE number 966
_G.ACT_OBJ_ASSEMBLING number 463
_G.ACT_OBJ_DETERIORATING number 469
_G.ACT_OBJ_DISMANTLING number 464
_G.ACT_OBJ_IDLE number 467
_G.ACT_OBJ_PLACING number 468
_G.ACT_OBJ_RUNNING number 466
_G.ACT_OBJ_STARTUP number 465
_G.ACT_OBJ_UPGRADING number 470
_G.ACT_OPEN_DOOR number 412
_G.ACT_OVERLAY_GRENADEIDLE number 442
_G.ACT_OVERLAY_GRENADEREADY number 443
_G.ACT_OVERLAY_PRIMARYATTACK number 444
_G.ACT_OVERLAY_SHIELD_ATTACK number 448
_G.ACT_OVERLAY_SHIELD_DOWN number 446
_G.ACT_OVERLAY_SHIELD_KNOCKBACK number 449
_G.ACT_OVERLAY_SHIELD_UP number 445
_G.ACT_OVERLAY_SHIELD_UP_IDLE number 447
_G.ACT_PDA_VM_DRAW number 841
_G.ACT_PDA_VM_DRYFIRE number 848
_G.ACT_PDA_VM_HOLSTER number 842
_G.ACT_PDA_VM_IDLE number 843
_G.ACT_PDA_VM_IDLE_LOWERED number 850
_G.ACT_PDA_VM_IDLE_TO_LOWERED number 849
_G.ACT_PDA_VM_LOWERED_TO_IDLE number 851
_G.ACT_PDA_VM_PRIMARYATTACK number 845
_G.ACT_PDA_VM_PULLBACK number 844
_G.ACT_PDA_VM_RELOAD number 847
_G.ACT_PDA_VM_SECONDARYATTACK number 846
_G.ACT_PHYSCANNON_ANIMATE number 399
_G.ACT_PHYSCANNON_ANIMATE_POST number 401
_G.ACT_PHYSCANNON_ANIMATE_PRE number 400
_G.ACT_PHYSCANNON_DETACH number 398
_G.ACT_PHYSCANNON_UPGRADE number 272
_G.ACT_PICKUP_GROUND number 75
_G.ACT_PICKUP_RACK number 76
_G.ACT_PLAYER_CROUCH_FIRE number 489
_G.ACT_PLAYER_CROUCH_WALK_FIRE number 490
_G.ACT_PLAYER_IDLE_FIRE number 488
_G.ACT_PLAYER_RUN_FIRE number 492
_G.ACT_PLAYER_WALK_FIRE number 491
_G.ACT_POLICE_HARASS1 number 338
_G.ACT_POLICE_HARASS2 number 339
_G.ACT_PREP_EXPLODE number 909
_G.ACT_PREP_TO_FIRE number 905
_G.ACT_PRIMARY_VM_DRAW number 808
_G.ACT_PRIMARY_VM_DRYFIRE number 815
_G.ACT_PRIMARY_VM_HOLSTER number 809
_G.ACT_PRIMARY_VM_IDLE number 810
_G.ACT_PRIMARY_VM_IDLE_LOWERED number 817
_G.ACT_PRIMARY_VM_IDLE_TO_LOWERED number 816
_G.ACT_PRIMARY_VM_LOWERED_TO_IDLE number 818
_G.ACT_PRIMARY_VM_PRIMARYATTACK number 812
_G.ACT_PRIMARY_VM_PULLBACK number 811
_G.ACT_PRIMARY_VM_RELOAD number 814
_G.ACT_PRIMARY_VM_SECONDARYATTACK number 813
_G.ACT_RAGDOLL_RECOVERY_BACK number 952
_G.ACT_RAGDOLL_RECOVERY_FRONT number 951
_G.ACT_RAGDOLL_RECOVERY_LEFT number 953
_G.ACT_RAGDOLL_RECOVERY_RIGHT number 954
_G.ACT_RANGE_AIM_AR2_LOW number 295
_G.ACT_RANGE_AIM_LOW number 292
_G.ACT_RANGE_AIM_PISTOL_LOW number 294
_G.ACT_RANGE_AIM_SMG1_LOW number 293
_G.ACT_RANGE_ATTACK1 number 16
_G.ACT_RANGE_ATTACK1_LOW number 18
_G.ACT_RANGE_ATTACK2 number 17
_G.ACT_RANGE_ATTACK2_LOW number 19
_G.ACT_RANGE_ATTACK_AR1 number 273
_G.ACT_RANGE_ATTACK_AR2 number 274
_G.ACT_RANGE_ATTACK_AR2_GRENADE number 276
_G.ACT_RANGE_ATTACK_AR2_LOW number 275
_G.ACT_RANGE_ATTACK_AUTOGUN number 882
_G.ACT_RANGE_ATTACK_DUAL number 891
_G.ACT_RANGE_ATTACK_HMG1 number 277
_G.ACT_RANGE_ATTACK_ML number 278
_G.ACT_RANGE_ATTACK_PISTOL number 284
_G.ACT_RANGE_ATTACK_PISTOL_LOW number 285
_G.ACT_RANGE_ATTACK_RIFLE number 897
_G.ACT_RANGE_ATTACK_RPG number 290
_G.ACT_RANGE_ATTACK_SHOTGUN number 282
_G.ACT_RANGE_ATTACK_SHOTGUN_LOW number 283
_G.ACT_RANGE_ATTACK_SLAM number 286
_G.ACT_RANGE_ATTACK_SMG1 number 279
_G.ACT_RANGE_ATTACK_SMG1_LOW number 280
_G.ACT_RANGE_ATTACK_SMG2 number 281
_G.ACT_RANGE_ATTACK_SNIPER_RIFLE number 289
_G.ACT_RANGE_ATTACK_THROW number 288
_G.ACT_RANGE_ATTACK_TRIPWIRE number 287
_G.ACT_RAPPEL_LOOP number 136
_G.ACT_READINESS_AGITATED_TO_STIMULATED number 421
_G.ACT_READINESS_PISTOL_AGITATED_TO_STIMULATED number 425
_G.ACT_READINESS_PISTOL_RELAXED_TO_STIMULATED number 423
_G.ACT_READINESS_PISTOL_RELAXED_TO_STIMULATED_WALK number 424
_G.ACT_READINESS_PISTOL_STIMULATED_TO_RELAXED number 426
_G.ACT_READINESS_RELAXED_TO_STIMULATED number 419
_G.ACT_READINESS_RELAXED_TO_STIMULATED_WALK number 420
_G.ACT_READINESS_STIMULATED_TO_RELAXED number 422
_G.ACT_RELOAD number 67
_G.ACT_RELOAD_AUTOGUN number 880
_G.ACT_RELOAD_DUAL number 889
_G.ACT_RELOAD_FAIL number 875
_G.ACT_RELOAD_FINISH number 69
_G.ACT_RELOAD_LOW number 70
_G.ACT_RELOAD_PISTOL number 371
_G.ACT_RELOAD_PISTOL_LOW number 372
_G.ACT_RELOAD_SHOTGUN number 375
_G.ACT_RELOAD_SHOTGUN_LOW number 376
_G.ACT_RELOAD_SMG1 number 373
_G.ACT_RELOAD_SMG1_LOW number 374
_G.ACT_RELOAD_START number 68
_G.ACT_RELOAD_SUCCEED number 874
_G.ACT_RESET number 0
_G.ACT_RIDE_MANNED_GUN number 432
_G.ACT_ROLL_LEFT number 40
_G.ACT_ROLL_RIGHT number 41
_G.ACT_RUN number 10
_G.ACT_RUNTOIDLE number 494
_G.ACT_RUN_AGITATED number 89
_G.ACT_RUN_AIM number 11
_G.ACT_RUN_AIM_AGITATED number 101
_G.ACT_RUN_AIM_AUTOGUN number 877
_G.ACT_RUN_AIM_DUAL number 886
_G.ACT_RUN_AIM_PISTOL number 367
_G.ACT_RUN_AIM_RELAXED number 99
_G.ACT_RUN_AIM_RIFLE number 358
_G.ACT_RUN_AIM_RIFLE_STIMULATED number 333
_G.ACT_RUN_AIM_SHOTGUN number 363
_G.ACT_RUN_AIM_STEALTH number 102
_G.ACT_RUN_AIM_STEALTH_PISTOL number 370
_G.ACT_RUN_AIM_STIMULATED number 100
_G.ACT_RUN_CROUCH number 12
_G.ACT_RUN_CROUCH_AIM number 13
_G.ACT_RUN_CROUCH_AIM_RIFLE number 360
_G.ACT_RUN_CROUCH_RIFLE number 359
_G.ACT_RUN_CROUCH_RPG number 350
_G.ACT_RUN_HURT number 107
_G.ACT_RUN_ON_FIRE number 135
_G.ACT_RUN_PISTOL number 365
_G.ACT_RUN_PROTECTED number 14
_G.ACT_RUN_RELAXED number 87
_G.ACT_RUN_RIFLE number 357
_G.ACT_RUN_RIFLE_RELAXED number 328
_G.ACT_RUN_RIFLE_STIMULATED number 330
_G.ACT_RUN_RPG number 348
_G.ACT_RUN_RPG_RELAXED number 352
_G.ACT_RUN_SCARED number 112
_G.ACT_RUN_STEALTH number 90
_G.ACT_RUN_STEALTH_PISTOL number 361
_G.ACT_RUN_STIMULATED number 88
_G.ACT_SCRIPT_CUSTOM_0 number 911
_G.ACT_SCRIPT_CUSTOM_1 number 912
_G.ACT_SCRIPT_CUSTOM_10 number 921
_G.ACT_SCRIPT_CUSTOM_11 number 922
_G.ACT_SCRIPT_CUSTOM_12 number 923
_G.ACT_SCRIPT_CUSTOM_13 number 924
_G.ACT_SCRIPT_CUSTOM_14 number 925
_G.ACT_SCRIPT_CUSTOM_15 number 926
_G.ACT_SCRIPT_CUSTOM_16 number 927
_G.ACT_SCRIPT_CUSTOM_17 number 928
_G.ACT_SCRIPT_CUSTOM_18 number 929
_G.ACT_SCRIPT_CUSTOM_19 number 930
_G.ACT_SCRIPT_CUSTOM_2 number 913
_G.ACT_SCRIPT_CUSTOM_20 number 931
_G.ACT_SCRIPT_CUSTOM_21 number 932
_G.ACT_SCRIPT_CUSTOM_22 number 933
_G.ACT_SCRIPT_CUSTOM_23 number 934
_G.ACT_SCRIPT_CUSTOM_24 number 935
_G.ACT_SCRIPT_CUSTOM_25 number 936
_G.ACT_SCRIPT_CUSTOM_26 number 937
_G.ACT_SCRIPT_CUSTOM_27 number 938
_G.ACT_SCRIPT_CUSTOM_28 number 939
_G.ACT_SCRIPT_CUSTOM_29 number 940
_G.ACT_SCRIPT_CUSTOM_3 number 914
_G.ACT_SCRIPT_CUSTOM_30 number 941
_G.ACT_SCRIPT_CUSTOM_31 number 942
_G.ACT_SCRIPT_CUSTOM_4 number 915
_G.ACT_SCRIPT_CUSTOM_5 number 916
_G.ACT_SCRIPT_CUSTOM_6 number 917
_G.ACT_SCRIPT_CUSTOM_7 number 918
_G.ACT_SCRIPT_CUSTOM_8 number 919
_G.ACT_SCRIPT_CUSTOM_9 number 920
_G.ACT_SCRIPT_CUSTOM_MOVE number 15
_G.ACT_SECONDARY_VM_DRAW number 819
_G.ACT_SECONDARY_VM_DRYFIRE number 826
_G.ACT_SECONDARY_VM_HOLSTER number 820
_G.ACT_SECONDARY_VM_IDLE number 821
_G.ACT_SECONDARY_VM_IDLE_LOWERED number 828
_G.ACT_SECONDARY_VM_IDLE_TO_LOWERED number 827
_G.ACT_SECONDARY_VM_LOWERED_TO_IDLE number 829
_G.ACT_SECONDARY_VM_PRIMARYATTACK number 823
_G.ACT_SECONDARY_VM_PULLBACK number 822
_G.ACT_SECONDARY_VM_RELOAD number 825
_G.ACT_SECONDARY_VM_SECONDARYATTACK number 824
_G.ACT_SHIELD_ATTACK number 453
_G.ACT_SHIELD_DOWN number 451
_G.ACT_SHIELD_KNOCKBACK number 454
_G.ACT_SHIELD_UP number 450
_G.ACT_SHIELD_UP_IDLE number 452
_G.ACT_SHIPLADDER_DOWN number 37
_G.ACT_SHIPLADDER_UP number 36
_G.ACT_SHOTGUN_PUMP number 264
_G.ACT_SHOTGUN_RELOAD_FINISH number 263
_G.ACT_SHOTGUN_RELOAD_START number 262
_G.ACT_SIGNAL1 number 50
_G.ACT_SIGNAL2 number 51
_G.ACT_SIGNAL3 number 52
_G.ACT_SIGNAL_ADVANCE number 53
_G.ACT_SIGNAL_FORWARD number 54
_G.ACT_SIGNAL_GROUP number 55
_G.ACT_SIGNAL_HALT number 56
_G.ACT_SIGNAL_LEFT number 57
_G.ACT_SIGNAL_RIGHT number 58
_G.ACT_SIGNAL_TAKECOVER number 59
_G.ACT_SLAM_DETONATOR_DETONATE number 258
_G.ACT_SLAM_DETONATOR_DRAW number 257
_G.ACT_SLAM_DETONATOR_HOLSTER number 259
_G.ACT_SLAM_DETONATOR_IDLE number 256
_G.ACT_SLAM_DETONATOR_STICKWALL_DRAW number 260
_G.ACT_SLAM_DETONATOR_THROW_DRAW number 261
_G.ACT_SLAM_STICKWALL_ATTACH number 226
_G.ACT_SLAM_STICKWALL_ATTACH2 number 227
_G.ACT_SLAM_STICKWALL_DETONATE number 230
_G.ACT_SLAM_STICKWALL_DETONATOR_HOLSTER number 231
_G.ACT_SLAM_STICKWALL_DRAW number 232
_G.ACT_SLAM_STICKWALL_IDLE number 224
_G.ACT_SLAM_STICKWALL_ND_ATTACH number 228
_G.ACT_SLAM_STICKWALL_ND_ATTACH2 number 229
_G.ACT_SLAM_STICKWALL_ND_DRAW number 233
_G.ACT_SLAM_STICKWALL_ND_IDLE number 225
_G.ACT_SLAM_STICKWALL_TO_THROW number 234
_G.ACT_SLAM_STICKWALL_TO_THROW_ND number 235
_G.ACT_SLAM_STICKWALL_TO_TRIPMINE_ND number 236
_G.ACT_SLAM_THROW_DETONATE number 247
_G.ACT_SLAM_THROW_DETONATOR_HOLSTER number 248
_G.ACT_SLAM_THROW_DRAW number 243
_G.ACT_SLAM_THROW_IDLE number 237
_G.ACT_SLAM_THROW_ND_DRAW number 244
_G.ACT_SLAM_THROW_ND_IDLE number 238
_G.ACT_SLAM_THROW_THROW number 239
_G.ACT_SLAM_THROW_THROW2 number 240
_G.ACT_SLAM_THROW_THROW_ND number 241
_G.ACT_SLAM_THROW_THROW_ND2 number 242
_G.ACT_SLAM_THROW_TO_STICKWALL number 245
_G.ACT_SLAM_THROW_TO_STICKWALL_ND number 246
_G.ACT_SLAM_THROW_TO_TRIPMINE_ND number 249
_G.ACT_SLAM_TRIPMINE_ATTACH number 252
_G.ACT_SLAM_TRIPMINE_ATTACH2 number 253
_G.ACT_SLAM_TRIPMINE_DRAW number 251
_G.ACT_SLAM_TRIPMINE_IDLE number 250
_G.ACT_SLAM_TRIPMINE_TO_STICKWALL_ND number 254
_G.ACT_SLAM_TRIPMINE_TO_THROW_ND number 255
_G.ACT_SLEEP number 898
_G.ACT_SMALL_FLINCH number 63
_G.ACT_SMG2_DRAW2 number 267
_G.ACT_SMG2_DRYFIRE2 number 269
_G.ACT_SMG2_FIRE2 number 266
_G.ACT_SMG2_IDLE2 number 265
_G.ACT_SMG2_RELOAD2 number 268
_G.ACT_SMG2_TOAUTO number 270
_G.ACT_SMG2_TOBURST number 271
_G.ACT_SPECIAL_ATTACK1 number 108
_G.ACT_SPECIAL_ATTACK2 number 109
_G.ACT_SPECIFIC_SEQUENCE number 180
_G.ACT_SPINAROUND number 904
_G.ACT_SPRAY number 908
_G.ACT_STAND number 46
_G.ACT_STARTDYING number 429
_G.ACT_STEP_BACK number 143
_G.ACT_STEP_FORE number 144
_G.ACT_STEP_LEFT number 141
_G.ACT_STEP_RIGHT number 142
_G.ACT_STORM_SPIRIT_OVERLOAD_RUN_OVERRIDE number 1554
_G.ACT_STRAFE_LEFT number 38
_G.ACT_STRAFE_RIGHT number 39
_G.ACT_SWIM number 28
_G.ACT_TINY_AVALANCHE number 1558
_G.ACT_TINY_GROWL number 1560
_G.ACT_TINY_TOSS number 1559
_G.ACT_TRANSITION number 2
_G.ACT_TURN number 462
_G.ACT_TURNLEFT45 number 461
_G.ACT_TURNRIGHT45 number 460
_G.ACT_TURN_LEFT number 42
_G.ACT_TURN_RIGHT number 43
_G.ACT_UNDEPLOY number 473
_G.ACT_USE number 47
_G.ACT_VICTORY_DANCE number 113
_G.ACT_VM_ATTACH_SILENCER number 222
_G.ACT_VM_DEPLOY number 181
_G.ACT_VM_DETACH_SILENCER number 223
_G.ACT_VM_DRAW number 183
_G.ACT_VM_DRAW_DEPLOYED number 495
_G.ACT_VM_DRAW_SILENCED number 481
_G.ACT_VM_DROP number 191
_G.ACT_VM_DRYFIRE number 196
_G.ACT_VM_DRYFIRE_LEFT number 483
_G.ACT_VM_DRYFIRE_SILENCED number 479
_G.ACT_VM_FIDGET number 186
_G.ACT_VM_HAULBACK number 209
_G.ACT_VM_HITCENTER number 201
_G.ACT_VM_HITCENTER2 number 202
_G.ACT_VM_HITLEFT number 197
_G.ACT_VM_HITLEFT2 number 198
_G.ACT_VM_HITRIGHT number 199
_G.ACT_VM_HITRIGHT2 number 200
_G.ACT_VM_HOLSTER number 184
_G.ACT_VM_IDLE number 185
_G.ACT_VM_IDLE_EMPTY_LEFT number 482
_G.ACT_VM_IDLE_LOWERED number 214
_G.ACT_VM_IDLE_SILENCED number 480
_G.ACT_VM_IDLE_TO_LOWERED number 213
_G.ACT_VM_IS_DRAW number 484
_G.ACT_VM_IS_HOLSTER number 485
_G.ACT_VM_IS_IDLE number 486
_G.ACT_VM_IS_PRIMARYATTACK number 487
_G.ACT_VM_LOWERED_TO_IDLE number 215
_G.ACT_VM_MAUL_LOOP number 221
_G.ACT_VM_MISSCENTER number 207
_G.ACT_VM_MISSCENTER2 number 208
_G.ACT_VM_MISSLEFT number 203
_G.ACT_VM_MISSLEFT2 number 204
_G.ACT_VM_MISSRIGHT number 205
_G.ACT_VM_MISSRIGHT2 number 206
_G.ACT_VM_PICKUP number 219
_G.ACT_VM_PRIMARYATTACK number 193
_G.ACT_VM_PRIMARYATTACK_SILENCED number 477
_G.ACT_VM_PULLBACK number 187
_G.ACT_VM_PULLBACK_HIGH number 188
_G.ACT_VM_PULLBACK_LOW number 189
_G.ACT_VM_PULLPIN number 192
_G.ACT_VM_RECOIL1 number 216
_G.ACT_VM_RECOIL2 number 217
_G.ACT_VM_RECOIL3 number 218
_G.ACT_VM_RELEASE number 220
_G.ACT_VM_RELOAD number 195
_G.ACT_VM_RELOAD_EMPTY number 182
_G.ACT_VM_RELOAD_SILENCED number 478
_G.ACT_VM_SECONDARYATTACK number 194
_G.ACT_VM_SPRINT_ENTER number 433
_G.ACT_VM_SPRINT_IDLE number 434
_G.ACT_VM_SPRINT_LEAVE number 435
_G.ACT_VM_SWINGHARD number 210
_G.ACT_VM_SWINGHIT number 212
_G.ACT_VM_SWINGMISS number 211
_G.ACT_VM_THROW number 190
_G.ACT_VM_UNUSABLE number 805
_G.ACT_VM_UNUSABLE_TO_USABLE number 806
_G.ACT_VM_USABLE_TO_UNUSABLE number 807
_G.ACT_VR_PISTOL_BURST_ATTACK number 986
_G.ACT_VR_PISTOL_BURST_TOGGLE number 984
_G.ACT_VR_PISTOL_CLIP_IN_CHAMBERED number 947
_G.ACT_VR_PISTOL_CLIP_IN_SLIDE_BACK number 948
_G.ACT_VR_PISTOL_CLIP_OUT_CHAMBERED number 945
_G.ACT_VR_PISTOL_CLIP_OUT_SLIDE_BACK number 946
_G.ACT_VR_PISTOL_EMPTY_CLIP_IN_SLIDE_BACK number 971
_G.ACT_VR_PISTOL_IDLE_SLIDE_BACK number 949
_G.ACT_VR_PISTOL_IDLE_SLIDE_BACK_CLIP_READY number 950
_G.ACT_VR_PISTOL_LAST_SHOT number 943
_G.ACT_VR_PISTOL_LONG_CLIP_IN_CHAMBERED number 982
_G.ACT_VR_PISTOL_LONG_CLIP_IN_SLIDE_BACK number 983
_G.ACT_VR_PISTOL_LOW_KICK number 985
_G.ACT_VR_PISTOL_SLIDE_RELEASE number 944
_G.ACT_VR_SHOTGUN_CLOSE_CHAMBER number 977
_G.ACT_VR_SHOTGUN_GRENADE_TWIST number 987
_G.ACT_VR_SHOTGUN_IDLE number 972
_G.ACT_VR_SHOTGUN_OPEN_CHAMBER number 973
_G.ACT_VR_SHOTGUN_RELOAD_1 number 974
_G.ACT_VR_SHOTGUN_RELOAD_2 number 975
_G.ACT_VR_SHOTGUN_RELOAD_3 number 976
_G.ACT_VR_SHOTGUN_SHOOT number 979
_G.ACT_VR_SHOTGUN_SLIDE_BACK number 980
_G.ACT_VR_SHOTGUN_SLIDE_FORWARD number 981
_G.ACT_VR_SHOTGUN_TRIGGER_SQUEEZE number 978
_G.ACT_WAKE number 899
_G.ACT_WALK number 6
_G.ACT_WALK_AGITATED number 85
_G.ACT_WALK_AIM number 7
_G.ACT_WALK_AIM_AGITATED number 97
_G.ACT_WALK_AIM_AUTOGUN number 876
_G.ACT_WALK_AIM_DUAL number 885
_G.ACT_WALK_AIM_PISTOL number 366
_G.ACT_WALK_AIM_RELAXED number 95
_G.ACT_WALK_AIM_RIFLE number 354
_G.ACT_WALK_AIM_RIFLE_STIMULATED number 332
_G.ACT_WALK_AIM_SHOTGUN number 362
_G.ACT_WALK_AIM_STEALTH number 98
_G.ACT_WALK_AIM_STEALTH_PISTOL number 369
_G.ACT_WALK_AIM_STIMULATED number 96
_G.ACT_WALK_ANGRY number 337
_G.ACT_WALK_CARRY number 428
_G.ACT_WALK_CROUCH number 8
_G.ACT_WALK_CROUCH_AIM number 9
_G.ACT_WALK_CROUCH_AIM_RIFLE number 356
_G.ACT_WALK_CROUCH_RIFLE number 355
_G.ACT_WALK_CROUCH_RPG number 349
_G.ACT_WALK_HURT number 106
_G.ACT_WALK_ON_FIRE number 134
_G.ACT_WALK_PACKAGE number 322
_G.ACT_WALK_PISTOL number 364
_G.ACT_WALK_RELAXED number 83
_G.ACT_WALK_RIFLE number 353
_G.ACT_WALK_RIFLE_RELAXED number 327
_G.ACT_WALK_RIFLE_STIMULATED number 329
_G.ACT_WALK_RPG number 347
_G.ACT_WALK_RPG_RELAXED number 351
_G.ACT_WALK_SCARED number 111
_G.ACT_WALK_STEALTH number 86
_G.ACT_WALK_STEALTH_PISTOL number 368
_G.ACT_WALK_STIMULATED number 84
_G.ACT_WALK_SUITCASE number 324
_G.ACT_WAVEFORM_END number 1546
_G.ACT_WAVEFORM_START number 1545
_G.ACT_ZOMBIE_LUNGE number 965
_G.ACT_ZOMBIE_TRIP number 964
_G.AE_ABILITY_END_EVENT number 147
_G.AE_ABILITY_START_EVENT number 146
_G.AE_ABILITY_TICK number 148
_G.AE_ACTION_ALLOW_COMBO number 142
_G.AE_ACTION_ALLOW_DODGE number 144
_G.AE_ACTION_ALLOW_MOVE_INTERRUPT number 138
_G.AE_ACTION_AVOID_DAMAGE number 139
_G.AE_ACTION_DROP_ITEM number 165
_G.AE_ACTION_END_TURN number 150
_G.AE_ACTION_ENTERING_IDLE number 136
_G.AE_ACTION_OVERLAP_MOVE number 137
_G.AE_ACTION_PREVENT_COMBO number 143
_G.AE_ACTION_PREVENT_DODGE number 145
_G.AE_ACTION_SET_TURN_RATE_SCALE number 141
_G.AE_ACTION_START_TURN number 149
_G.AE_ACTION_STOP_AVOIDING_DAMAGE number 140
_G.AE_ACTION_USE number 151
_G.AE_AMMOCRATE_PICKUP_AMMO number 25
_G.AE_ATTACK_END number 58
_G.AE_ATTACK_HIT number 57
_G.AE_ATTACK_START number 56
_G.AE_CHARGER_POUND_IMPACT number 74
_G.AE_CHARGER_POUND_SOUND number 76
_G.AE_CHARGER_POUND_VOCALIZE number 75
_G.AE_CLIENT_EFFECT_ATTACH number 21
_G.AE_CL_ADD_PARTICLE_EFFECT_CP number 35
_G.AE_CL_BODYGROUP_SET_VALUE number 40
_G.AE_CL_BODYGROUP_SET_VALUE_CMODEL_WPN number 42
_G.AE_CL_CLOTH_ATTR number 183
_G.AE_CL_CLOTH_GROUND_OFFSET number 189
_G.AE_CL_CLOTH_STIFFEN number 190
_G.AE_CL_CREATE_ANIM_SCOPE_PROP number 182
_G.AE_CL_CREATE_PARTICLE_BRASS number 36
_G.AE_CL_CREATE_PARTICLE_EFFECT number 33
_G.AE_CL_CREATE_PARTICLE_EFFECT_CFG number 181
_G.AE_CL_DISABLE_BODYGROUP number 39
_G.AE_CL_DOTA_NPC_CREATE_PARTICLE_EFFECT number 194
_G.AE_CL_DOTA_PLAY_STATUS_EFFECT number 192
_G.AE_CL_DOTA_RUBICK_ARCANA_CREATE_PARTICLE_EFFECT number 195
_G.AE_CL_DOTA_STOP_STATUS_EFFECT number 193
_G.AE_CL_ENABLE_BODYGROUP number 38
_G.AE_CL_FOOTSTEP_LEFT number 103
_G.AE_CL_FOOTSTEP_RIGHT number 104
_G.AE_CL_MFOOTSTEP_LEFT number 105
_G.AE_CL_MFOOTSTEP_LEFT_LOUD number 107
_G.AE_CL_MFOOTSTEP_RIGHT number 106
_G.AE_CL_MFOOTSTEP_RIGHT_LOUD number 108
_G.AE_CL_PLAYSOUND number 15
_G.AE_CL_PLAYSOUND_ATTACHMENT number 16
_G.AE_CL_PLAYSOUND_LOOPING number 176
_G.AE_CL_PLAYSOUND_POSITION number 163
_G.AE_CL_SPEECH number 131
_G.AE_CL_STOPSOUND number 18
_G.AE_CL_STOP_PARTICLE_EFFECT number 34
_G.AE_DEFIBRILLATOR_SHOCK number 77
_G.AE_DOTA_PLAY_SOUND_ATTACK number 198
_G.AE_DOTA_PLAY_SOUND_ATTACK_SPECIAL number 197
_G.AE_DOTA_SUPPRESS_CONSTANT_LAYER number 196
_G.AE_DRAW_WEAPONS number 153
_G.AE_DROP_ITEM number 155
_G.AE_DROP_PRIMARY_WEAPON number 162
_G.AE_EF_DRAW number 158
_G.AE_EF_NODRAW number 157
_G.AE_EMPTY number 0
_G.AE_FIRE_INPUT number 100
_G.AE_FOOTSTEP number 184
_G.AE_FOOTSTEP_LEFT number 54
_G.AE_FOOTSTEP_RIGHT number 55
_G.AE_HAPTIC_PULSE number 186
_G.AE_HIDE_WEAPON number 60
_G.AE_HIT_ARM_LEFT_SEVERED number 93
_G.AE_HIT_ARM_RIGHT_SEVERED number 92
_G.AE_HIT_BACK number 97
_G.AE_HIT_BACK_LOWER number 83
_G.AE_HIT_BACK_UPPER number 82
_G.AE_HIT_CHEST number 81
_G.AE_HIT_FRONT number 96
_G.AE_HIT_HEAD_BACK number 79
_G.AE_HIT_HEAD_FRONT number 78
_G.AE_HIT_LEFT number 98
_G.AE_HIT_LEG_LEFT_BACK number 91
_G.AE_HIT_LEG_LEFT_FRONT number 90
_G.AE_HIT_LEG_LEFT_SEVERED number 95
_G.AE_HIT_LEG_RIGHT_BACK number 89
_G.AE_HIT_LEG_RIGHT_FRONT number 88
_G.AE_HIT_LEG_RIGHT_SEVERED number 94
_G.AE_HIT_RIGHT number 99
_G.AE_HIT_SHOULDER_LEFT_BACK number 87
_G.AE_HIT_SHOULDER_LEFT_FRONT number 86
_G.AE_HIT_SHOULDER_RIGHT_BACK number 85
_G.AE_HIT_SHOULDER_RIGHT_FRONT number 84
_G.AE_HIT_STOMACH number 80
_G.AE_IK_ALLOW_PLANE_TILT_NORMAL_UPDATES number 178
_G.AE_IK_SET_CHAIN_BLEND_AMOUNT number 180
_G.AE_IK_SET_LOCK_ROTATION_ALPHA number 177
_G.AE_IK_SET_MASTER_BLEND_AMOUNT number 179
_G.AE_KEYFIELD_SOUND number 164
_G.AE_LOCK_STATE_CHANGED number 72
_G.AE_MANTLE_GRAB number 161
_G.AE_MANTLE_LEAP number 160
_G.AE_MARINE_FOOTSTEP number 49
_G.AE_MARINE_RELOAD_SOUND_A number 50
_G.AE_MARINE_RELOAD_SOUND_B number 51
_G.AE_MARINE_RELOAD_SOUND_C number 52
_G.AE_MELEE_FORCE_START_WEAPON_TRAIL number 134
_G.AE_MELEE_FORCE_STOP_WEAPON_TRAIL number 135
_G.AE_MELEE_START_COLLISION_DAMAGE number 132
_G.AE_MELEE_STOP_COLLISION_DAMAGE number 133
_G.AE_MUZZLEFLASH number 22
_G.AE_NPC_180TURN number 6
_G.AE_NPC_ADDGESTURE number 27
_G.AE_NPC_ATTACK_BROADCAST number 29
_G.AE_NPC_BECOME_TEMPORARY_RAGDOLL number 175
_G.AE_NPC_BODYDROP_HEAVY number 4
_G.AE_NPC_BODYDROP_LIGHT number 3
_G.AE_NPC_DRAW number 13
_G.AE_NPC_END_POWERED_RAGDOLL number 188
_G.AE_NPC_GIB number 185
_G.AE_NPC_HOLSTER number 12
_G.AE_NPC_HURT_INTERACTION_PARTNER number 30
_G.AE_NPC_ITEM_PICKUP number 7
_G.AE_NPC_LEFTFOOT number 1
_G.AE_NPC_MUZZLEFLASH number 23
_G.AE_NPC_RAGDOLL number 26
_G.AE_NPC_RESTARTGESTURE number 28
_G.AE_NPC_RIGHTFOOT number 2
_G.AE_NPC_SET_INTERACTION_CANTDIE number 31
_G.AE_NPC_START_POWERED_RAGDOLL number 187
_G.AE_NPC_SWISHSOUND number 5
_G.AE_NPC_WEAPON_DROP number 8
_G.AE_NPC_WEAPON_FIRE number 14
_G.AE_NPC_WEAPON_SET_ACTIVITY number 11
_G.AE_NPC_WEAPON_SET_SEQUENCE_NAME number 9
_G.AE_NPC_WEAPON_SET_SEQUENCE_NUMBER number 10
_G.AE_OPTIONAL_END number 59
_G.AE_PICKUP_CHARGING number 63
_G.AE_PICKUP_CLIPIN number 62
_G.AE_PICKUP_FASSIST number 64
_G.AE_PICK_UP_ITEM number 154
_G.AE_RAGDOLL number 37
_G.AE_RELOAD_CLIPIN number 66
_G.AE_RELOAD_CLIPOUT number 65
_G.AE_RELOAD_EMPTY_CLIPIN number 68
_G.AE_RELOAD_EMPTY_CLIPIN2 number 69
_G.AE_RELOAD_EMPTY_CLIPOUT number 67
_G.AE_RELOAD_PUMPEND number 71
_G.AE_RELOAD_SHELL_INSERT number 70
_G.AE_REMOVE_CLIENT_AIM number 53
_G.AE_SCRIPT_EVENT_CANINTERRUPT number 168
_G.AE_SCRIPT_EVENT_CUSTOMINTERRUPT_END number 174
_G.AE_SCRIPT_EVENT_CUSTOMINTERRUPT_START number 173
_G.AE_SCRIPT_EVENT_DEAD number 170
_G.AE_SCRIPT_EVENT_FIREEVENT number 169
_G.AE_SCRIPT_EVENT_FIRE_INPUT number 172
_G.AE_SCRIPT_EVENT_NOINTERRUPT number 167
_G.AE_SCRIPT_EVENT_NOT_DEAD number 171
_G.AE_SHEATHE_WEAPONS number 152
_G.AE_SHOW_WEAPON number 61
_G.AE_SOUND_EMITTED number 166
_G.AE_START_SCRIPTED_EFFECT number 19
_G.AE_STOP_SCRIPTED_EFFECT number 20
_G.AE_SV_BODYGROUP_SET_VALUE number 41
_G.AE_SV_DUSTTRAIL number 32
_G.AE_SV_FOOTSTEP_LEFT number 101
_G.AE_SV_FOOTSTEP_RIGHT number 102
_G.AE_SV_PLAYSOUND number 17
_G.AE_THUMPER_THUMP number 24
_G.AE_TOSS_ITEM number 156
_G.AE_TUG_INCAP number 73
_G.AE_WEAPON_AR1 number 114
_G.AE_WEAPON_AR2 number 115
_G.AE_WEAPON_AR2_ALTFIRE number 129
_G.AE_WEAPON_AR2_GRENADE number 120
_G.AE_WEAPON_HMG1 number 116
_G.AE_WEAPON_MELEE_HIT number 109
_G.AE_WEAPON_MELEE_SWISH number 111
_G.AE_WEAPON_MISSILE_FIRE number 118
_G.AE_WEAPON_PISTOL_FIRE number 122
_G.AE_WEAPON_RELOAD number 123
_G.AE_WEAPON_RELOAD_FILL_CLIP number 126
_G.AE_WEAPON_RELOAD_SOUND number 125
_G.AE_WEAPON_SEQUENCE_FINISHED number 130
_G.AE_WEAPON_SHOTGUN_FIRE number 112
_G.AE_WEAPON_SLAM_GROUND number 159
_G.AE_WEAPON_SMG1 number 110
_G.AE_WEAPON_SMG1_BURST1 number 127
_G.AE_WEAPON_SMG1_BURSTN number 128
_G.AE_WEAPON_SMG2 number 117
_G.AE_WEAPON_SNIPER_RIFLE_FIRE number 119
_G.AE_WEAPON_THROW number 113
_G.AE_WEAPON_THROW2 number 121
_G.AE_WEAPON_THROW3 number 124
_G.AE_WPN_HIDE number 45
_G.AE_WPN_INCREMENTAMMO number 44
_G.AE_WPN_PLAYWPNSOUND number 47
_G.AE_WPN_PRIMARYATTACK number 43
_G.AE_WPN_UNHIDE number 46
_G.AddFOWViewer function function: 0x00140f40
_G.AddToScriptHelp function function: 0x001e1c00
_G.AngleDiff function function: 0x00140200
_G.AppendToLogFile function function: 0x0013ef18
_G.ApplyDamage function function: 0x001316a8
_G.AxisAngleToQuaternion function function: 0x0013df90
_G.BURST number 5
_G.BeginScriptDebug function function: 0x001c9960
_G.CBaseAnimating table table: 0x00179348
_G.CBaseAnimating.ActiveSequenceDuration function function: 0x0017a638
_G.CBaseAnimating.FDesc table table: 0x001793d0
_G.CBaseAnimating.FDesc.ActiveSequenceDuration userdata float ActiveSequenceDuration()
Returns the duration in seconds of the active sequence.
_G.CBaseAnimating.FDesc.GetAttachmentAngles userdata Vector GetAttachmentAngles(int iAttachment)
Get the attachment id's angles as a p,y,r vector.
_G.CBaseAnimating.FDesc.GetAttachmentForward userdata Vector GetAttachmentForward(int iAttachment)
Get the attachment id's forward vector.
_G.CBaseAnimating.FDesc.GetAttachmentOrigin userdata Vector GetAttachmentOrigin(int iAttachment)
Get the attachment id's origin vector.
_G.CBaseAnimating.FDesc.GetCycle userdata float GetCycle()
Get the cycle of the animation.
_G.CBaseAnimating.FDesc.GetGraphParameter userdata table GetGraphParameter(string pszParam)
Get the value of the given animGraph parameter
_G.CBaseAnimating.FDesc.GetModelScale userdata float GetModelScale()
Get scale of entity's model.
_G.CBaseAnimating.FDesc.GetSequence userdata string GetSequence()
Returns the name of the active sequence.
_G.CBaseAnimating.FDesc.IsSequenceFinished userdata bool IsSequenceFinished()
Ask whether the main sequence is done playing.
_G.CBaseAnimating.FDesc.ResetSequence userdata void ResetSequence(string pSequenceName)
Sets the active sequence by name, resetting the current cycle.
_G.CBaseAnimating.FDesc.ScriptLookupAttachment userdata int ScriptLookupAttachment(string pAttachmentName)
Get the named attachment id.
_G.CBaseAnimating.FDesc.SequenceDuration userdata float SequenceDuration(string pSequenceName)
Returns the duration in seconds of the given sequence name.
_G.CBaseAnimating.FDesc.SetGraphLookTarget userdata void SetGraphLookTarget(Vector vValue)
Pass the desired look target in world space to the graph
_G.CBaseAnimating.FDesc.SetGraphParameter userdata void SetGraphParameter(string pszParam, table svArg)
Set the specific param value, type is inferred from the type in script
_G.CBaseAnimating.FDesc.SetGraphParameterBool userdata void SetGraphParameterBool(string szName, bool bValue)
Set the specific param on or off
_G.CBaseAnimating.FDesc.SetGraphParameterEnum userdata void SetGraphParameterEnum(string szName, int nValue)
Pass the enum (int) value to the specified param
_G.CBaseAnimating.FDesc.SetGraphParameterFloat userdata void SetGraphParameterFloat(string szName, float flValue)
Pass the float value to the specified param
_G.CBaseAnimating.FDesc.SetGraphParameterInt userdata void SetGraphParameterInt(string szName, int nValue)
Pass the int value to the specified param
_G.CBaseAnimating.FDesc.SetGraphParameterVector userdata void SetGraphParameterVector(string szName, Vector vValue)
Pass the vector value to the specified param in the graph
_G.CBaseAnimating.FDesc.SetModelScale userdata void SetModelScale(float flScale)
Set scale of entity's model.
_G.CBaseAnimating.FDesc.SetPoseParameter userdata float SetPoseParameter(string szName, float fValue)
Set the specified pose parameter to the specified value.
_G.CBaseAnimating.FDesc.SetSequence userdata void SetSequence(string pSequenceName)
Sets the active sequence by name, keeping the current cycle.
_G.CBaseAnimating.FDesc.StopAnimation userdata void StopAnimation()
Stop the current animation by setting playback rate to 0.0.
_G.CBaseAnimating.GetAttachmentAngles function function: 0x00179cf8
_G.CBaseAnimating.GetAttachmentForward function function: 0x00179fb0
_G.CBaseAnimating.GetAttachmentOrigin function function: 0x00179df8
_G.CBaseAnimating.GetCycle function function: 0x0017a308
_G.CBaseAnimating.GetGraphParameter function function: 0x0017ae10
_G.CBaseAnimating.GetModelScale function function: 0x0017a128
_G.CBaseAnimating.GetSequence function function: 0x0017a0c0
_G.CBaseAnimating.IsNull function function: 0x00179370
_G.CBaseAnimating.IsSequenceFinished function function: 0x0017a038
_G.CBaseAnimating.ResetSequence function function: 0x0017a5b8
_G.CBaseAnimating.ScriptLookupAttachment function function: 0x00179d70
_G.CBaseAnimating.SequenceDuration function function: 0x0017a6c0
_G.CBaseAnimating.SetGraphLookTarget function function: 0x0017ad88
_G.CBaseAnimating.SetGraphParameter function function: 0x0017a1a8
_G.CBaseAnimating.SetGraphParameterBool function function: 0x0017a230
_G.CBaseAnimating.SetGraphParameterEnum function function: 0x0017a468
_G.CBaseAnimating.SetGraphParameterFloat function function: 0x0017a2b8
_G.CBaseAnimating.SetGraphParameterInt function function: 0x0017a3e0
_G.CBaseAnimating.SetGraphParameterVector function function: 0x0017ad00
_G.CBaseAnimating.SetModelScale function function: 0x00179e80
_G.CBaseAnimating.SetPoseParameter function function: 0x001793f8
_G.CBaseAnimating.SetSequence function function: 0x0017a538
_G.CBaseAnimating.StopAnimation function function: 0x00179f20
_G.CBaseCombatCharacter table table: 0x0017b3c0
_G.CBaseCombatCharacter.FDesc table table: 0x0017b448
_G.CBaseCombatCharacter.FDesc.GetEquippedWeapons userdata table GetEquippedWeapons()
GetEquippedWeapons() : Returns an array of all the equipped weapons
_G.CBaseCombatCharacter.FDesc.GetFaction userdata int GetFaction()
Get the combat character faction.
_G.CBaseCombatCharacter.FDesc.GetWeaponCount userdata int GetWeaponCount()
GetWeaponCount() : Gets the number of weapons currently equipped
_G.CBaseCombatCharacter.FDesc.ShootPosition userdata Vector ShootPosition(int nHand, int nMuzzle)
Returns the shoot position eyes (or hand in VR).
_G.CBaseCombatCharacter.GetEquippedWeapons function function: 0x0017b568
_G.CBaseCombatCharacter.GetFaction function function: 0x0017b4f0
_G.CBaseCombatCharacter.GetWeaponCount function function: 0x0017b5f0
_G.CBaseCombatCharacter.IsNull function function: 0x0017b3e8
_G.CBaseCombatCharacter.ShootPosition function function: 0x0017b470
_G.CBaseEntity table table: 0x00139950
_G.CBaseEntity.AddEffects function function: 0x0013a4d8
_G.CBaseEntity.ApplyAbsVelocityImpulse function function: 0x0013b698
_G.CBaseEntity.ApplyLocalAngularVelocityImpulse function function: 0x0013b720
_G.CBaseEntity.Attribute_GetFloatValue function function: 0x0013a660
_G.CBaseEntity.Attribute_GetIntValue function function: 0x0013a770
_G.CBaseEntity.Attribute_SetFloatValue function function: 0x0013a5d8
_G.CBaseEntity.Attribute_SetIntValue function function: 0x0013a6e8
_G.CBaseEntity.DeleteAttribute function function: 0x0013a878
_G.CBaseEntity.EmitSound function function: 0x0013b948
_G.CBaseEntity.EmitSoundParams function function: 0x0013b9c8
_G.CBaseEntity.EyeAngles function function: 0x0013a028
_G.CBaseEntity.EyePosition function function: 0x0013a3d8
_G.CBaseEntity.FDesc table table: 0x001399d8
_G.CBaseEntity.FDesc.AddEffects userdata void AddEffects(int nFlags)
AddEffects( int ): Adds the render effect flag.
_G.CBaseEntity.FDesc.ApplyAbsVelocityImpulse userdata void ApplyAbsVelocityImpulse(Vector vecImpulse)
Apply a Velocity Impulse
_G.CBaseEntity.FDesc.ApplyLocalAngularVelocityImpulse userdata void ApplyLocalAngularVelocityImpulse(Vector angImpulse)
Apply an Ang Velocity Impulse
_G.CBaseEntity.FDesc.Attribute_GetFloatValue userdata float Attribute_GetFloatValue(string pName, float flDefault)
Get float value for an entity attribute.
_G.CBaseEntity.FDesc.Attribute_GetIntValue userdata int Attribute_GetIntValue(string pName, int nDefault)
Get int value for an entity attribute.
_G.CBaseEntity.FDesc.Attribute_SetFloatValue userdata void Attribute_SetFloatValue(string pName, float flValue)
Set float value for an entity attribute.
_G.CBaseEntity.FDesc.Attribute_SetIntValue userdata void Attribute_SetIntValue(string pName, int nValue)
Set int value for an entity attribute.
_G.CBaseEntity.FDesc.DeleteAttribute userdata void DeleteAttribute(string pName)
Delete an entity attribute.
_G.CBaseEntity.FDesc.EmitSound userdata void EmitSound(string soundname)
Plays a sound from this entity.
_G.CBaseEntity.FDesc.EmitSoundParams userdata void EmitSoundParams(string soundname, int nPitch, float flVolume, float flDelay)
Plays/modifies a sound from this entity. changes sound if nPitch and/or flVol or flSoundTime is > 0.
_G.CBaseEntity.FDesc.EyeAngles userdata QAngle EyeAngles()
Get the qangles that this entity is looking at.
_G.CBaseEntity.FDesc.EyePosition userdata Vector EyePosition()
Get vector to eye position - absolute coords.
_G.CBaseEntity.FDesc.FirstMoveChild userdata handle FirstMoveChild()

_G.CBaseEntity.FDesc.FollowEntity userdata void FollowEntity(handle hEnt, bool bBoneMerge)
hEntity to follow, bool bBoneMerge
_G.CBaseEntity.FDesc.GatherCriteria userdata void GatherCriteria(handle hResult)
Returns a table containing the criteria that would be used for response queries on this entity. This is the same as the table that is passed to response rule script function callbacks.
_G.CBaseEntity.FDesc.GetAbsOrigin userdata Vector GetAbsOrigin()

_G.CBaseEntity.FDesc.GetAbsScale userdata float GetAbsScale()

_G.CBaseEntity.FDesc.GetAngles userdata QAngle GetAngles()

_G.CBaseEntity.FDesc.GetAnglesAsVector userdata Vector GetAnglesAsVector()
Get entity pitch, yaw, roll as a vector.
_G.CBaseEntity.FDesc.GetAngularVelocity userdata Vector GetAngularVelocity()
Get the local angular velocity - returns a vector of pitch,yaw,roll
_G.CBaseEntity.FDesc.GetBaseVelocity userdata Vector GetBaseVelocity()
Get Base? velocity.
_G.CBaseEntity.FDesc.GetBoundingMaxs userdata Vector GetBoundingMaxs()
Get a vector containing max bounds, centered on object.
_G.CBaseEntity.FDesc.GetBoundingMins userdata Vector GetBoundingMins()
Get a vector containing min bounds, centered on object.
_G.CBaseEntity.FDesc.GetBounds userdata table GetBounds()
Get a table containing the 'Mins' & 'Maxs' vector bounds, centered on object.
_G.CBaseEntity.FDesc.GetCenter userdata Vector GetCenter()
Get vector to center of object - absolute coords
_G.CBaseEntity.FDesc.GetChildren userdata handle GetChildren()
Get the entities parented to this entity.
_G.CBaseEntity.FDesc.GetContext userdata table GetContext(string name)
GetContext( name ): looks up a context and returns it if available. May return string, float, or null (if the context isn't found).
_G.CBaseEntity.FDesc.GetForwardVector userdata Vector GetForwardVector()
Get the forward vector of the entity.
_G.CBaseEntity.FDesc.GetHealth userdata int GetHealth()
Get the health of this entity.
_G.CBaseEntity.FDesc.GetLocalAngles userdata QAngle GetLocalAngles()
Get entity local pitch, yaw, roll as a QAngle
_G.CBaseEntity.FDesc.GetLocalAngularVelocity userdata QAngle GetLocalAngularVelocity()
Maybe local angvel
_G.CBaseEntity.FDesc.GetLocalOrigin userdata Vector GetLocalOrigin()
Get entity local origin as a Vector
_G.CBaseEntity.FDesc.GetLocalScale userdata float GetLocalScale()

_G.CBaseEntity.FDesc.GetLocalVelocity userdata Vector GetLocalVelocity()
Get Entity relative velocity.
_G.CBaseEntity.FDesc.GetMass userdata float GetMass()
Get the mass of an entity. (returns 0 if it doesn't have a physics object)
_G.CBaseEntity.FDesc.GetMaxHealth userdata int GetMaxHealth()
Get the maximum health of this entity.
_G.CBaseEntity.FDesc.GetModelName userdata string GetModelName()
Returns the name of the model.
_G.CBaseEntity.FDesc.GetMoveParent userdata handle GetMoveParent()
If in hierarchy, retrieves the entity's parent.
_G.CBaseEntity.FDesc.GetOrigin userdata Vector GetOrigin()

_G.CBaseEntity.FDesc.GetOwner userdata handle GetOwner()
Gets this entity's owner
_G.CBaseEntity.FDesc.GetOwnerEntity userdata handle GetOwnerEntity()
Get the owner entity, if there is one
_G.CBaseEntity.FDesc.GetRightVector userdata Vector GetRightVector()
Get the right vector of the entity.
_G.CBaseEntity.FDesc.GetRootMoveParent userdata handle GetRootMoveParent()
If in hierarchy, walks up the hierarchy to find the root parent.
_G.CBaseEntity.FDesc.GetSoundDuration userdata float GetSoundDuration(string soundname, string actormodel)
Returns float duration of the sound. Takes soundname and optional actormodelname.
_G.CBaseEntity.FDesc.GetTeam userdata int GetTeam()
Get the team number of this entity.
_G.CBaseEntity.FDesc.GetTeamNumber userdata int GetTeamNumber()
Get the team number of this entity.
_G.CBaseEntity.FDesc.GetUpVector userdata Vector GetUpVector()
Get the up vector of the entity.
_G.CBaseEntity.FDesc.GetVelocity userdata Vector GetVelocity()

_G.CBaseEntity.FDesc.HasAttribute userdata bool HasAttribute(string pName)
See if an entity has a particular attribute.
_G.CBaseEntity.FDesc.IsAlive userdata bool IsAlive()
Is this entity alive?
_G.CBaseEntity.FDesc.IsNPC userdata bool IsNPC()
Is this entity an CAI_BaseNPC?
_G.CBaseEntity.FDesc.IsPlayer userdata bool IsPlayer()
Is this entity a player?
_G.CBaseEntity.FDesc.Kill userdata void Kill()

_G.CBaseEntity.FDesc.NextMovePeer userdata handle NextMovePeer()

_G.CBaseEntity.FDesc.OverrideFriction userdata void OverrideFriction(float duration, float friction)
Takes duration, value for a temporary override.
_G.CBaseEntity.FDesc.PrecacheScriptSound userdata void PrecacheScriptSound(string soundname)
Precache a sound for later playing.
_G.CBaseEntity.FDesc.RemoveEffects userdata void RemoveEffects(int nFlags)
RemoveEffects( int ): Removes the render effect flag.
_G.CBaseEntity.FDesc.SetAbsAngles userdata void SetAbsAngles(float fPitch, float fYaw, float fRoll)
Set entity pitch, yaw, roll by component.
_G.CBaseEntity.FDesc.SetAbsOrigin userdata void SetAbsOrigin(Vector origin)

_G.CBaseEntity.FDesc.SetAbsScale userdata void SetAbsScale(float flScale)

_G.CBaseEntity.FDesc.SetAngles userdata void SetAngles(float fPitch, float fYaw, float fRoll)
Set entity pitch, yaw, roll by component.
_G.CBaseEntity.FDesc.SetAngularVelocity userdata void SetAngularVelocity(float pitchVel, float yawVel, float rollVel)
Set the local angular velocity - takes float pitch,yaw,roll velocities
_G.CBaseEntity.FDesc.SetConstraint userdata void SetConstraint(Vector vPos)
Set the position of the constraint.
_G.CBaseEntity.FDesc.SetContext userdata void SetContext(string pName, string pValue, float duration)
SetContext( name , value, duration ): store any key/value pair in this entity's dialog contexts. Value must be a string. Will last for duration (set 0 to mean 'forever').
_G.CBaseEntity.FDesc.SetContextNum userdata void SetContextNum(string pName, float fValue, float duration)
SetContextNum( name , value, duration ): store any key/value pair in this entity's dialog contexts. Value must be a number (int or float). Will last for duration (set 0 to mean 'forever').
_G.CBaseEntity.FDesc.SetContextThink userdata void SetContextThink(string pszContextName, handle hThinkFunc, float flInterval)
Set a think function on this entity.
_G.CBaseEntity.FDesc.SetEntityName userdata void SetEntityName(string pName)
Set the name of an entity.
_G.CBaseEntity.FDesc.SetForwardVector userdata void SetForwardVector(Vector v)
Set the orientation of the entity to have this forward vector.
_G.CBaseEntity.FDesc.SetFriction userdata void SetFriction(float flFriction)
Set PLAYER friction, ignored for objects.
_G.CBaseEntity.FDesc.SetGravity userdata void SetGravity(float flGravity)
Set PLAYER gravity, ignored for objects.
_G.CBaseEntity.FDesc.SetHealth userdata void SetHealth(int nHealth)
Set the health of this entity.
_G.CBaseEntity.FDesc.SetLocalAngles userdata void SetLocalAngles(float fPitch, float fYaw, float fRoll)
Set entity local pitch, yaw, roll by component
_G.CBaseEntity.FDesc.SetLocalOrigin userdata void SetLocalOrigin(Vector origin)
Set entity local origin from a Vector
_G.CBaseEntity.FDesc.SetLocalScale userdata void SetLocalScale(float flScale)

_G.CBaseEntity.FDesc.SetMass userdata void SetMass(float flMass)
Set the mass of an entity. (does nothing if it doesn't have a physics object)
_G.CBaseEntity.FDesc.SetMaxHealth userdata void SetMaxHealth(int amt)
Set the maximum health of this entity.
_G.CBaseEntity.FDesc.SetOrigin userdata void SetOrigin(Vector v)

_G.CBaseEntity.FDesc.SetOwner userdata void SetOwner(handle pOwner)
Sets this entity's owner
_G.CBaseEntity.FDesc.SetParent userdata void SetParent(handle hParent, string pAttachmentname)
Set the parent for this entity.
_G.CBaseEntity.FDesc.SetTeam userdata void SetTeam(int iTeamNum)

_G.CBaseEntity.FDesc.SetVelocity userdata void SetVelocity(Vector vecVelocity)

_G.CBaseEntity.FDesc.StopSound userdata void StopSound(string soundname)
Stops a named sound playing from this entity.
_G.CBaseEntity.FDesc.TakeDamage userdata int TakeDamage(handle hInfo)
Apply damage to this entity. Use CreateDamageInfo() to create a damageinfo object.
_G.CBaseEntity.FDesc.TransformPointEntityToWorld userdata Vector TransformPointEntityToWorld(Vector vPoint)
Returns the input Vector transformed from entity to world space
_G.CBaseEntity.FDesc.TransformPointWorldToEntity userdata Vector TransformPointWorldToEntity(Vector vPoint)
Returns the input Vector transformed from world to entity space
_G.CBaseEntity.FDesc.Trigger userdata void Trigger()
Fires off this entity's OnTrigger responses.
_G.CBaseEntity.FDesc.ValidatePrivateScriptScope userdata void ValidatePrivateScriptScope()
Validates the private script scope and creates it if one doesn't exist.
_G.CBaseEntity.FirstMoveChild function function: 0x00139bf8
_G.CBaseEntity.FollowEntity function function: 0x0013c278
_G.CBaseEntity.GatherCriteria function function: 0x0013c570
_G.CBaseEntity.GetAbsOrigin function function: 0x0013bd08
_G.CBaseEntity.GetAbsScale function function: 0x0013be08
_G.CBaseEntity.GetAngles function function: 0x0013bd88
_G.CBaseEntity.GetAnglesAsVector function function: 0x00139fa0
_G.CBaseEntity.GetAngularVelocity function function: 0x0013af10
_G.CBaseEntity.GetBaseVelocity function function: 0x0013b840
_G.CBaseEntity.GetBoundingMaxs function function: 0x0013ae10
_G.CBaseEntity.GetBoundingMins function function: 0x0013ad90
_G.CBaseEntity.GetBounds function function: 0x0013ae90
_G.CBaseEntity.GetCenter function function: 0x0013c088
_G.CBaseEntity.GetChildren function function: 0x00139e28
_G.CBaseEntity.GetContext function function: 0x0013c4f0
_G.CBaseEntity.GetForwardVector function function: 0x00139af0
_G.CBaseEntity.GetHealth function function: 0x0013b390
_G.CBaseEntity.GetLocalAngles function function: 0x0013a228
_G.CBaseEntity.GetLocalAngularVelocity function function: 0x0013b7b8
_G.CBaseEntity.GetLocalOrigin function function: 0x0013ab68
_G.CBaseEntity.GetLocalScale function function: 0x0013bf08
_G.CBaseEntity.GetLocalVelocity function function: 0x0013b590
_G.CBaseEntity.GetMass function function: 0x0013bc58
_G.CBaseEntity.GetMaxHealth function function: 0x0013b210
_G.CBaseEntity.GetModelName function function: 0x00139d28
_G.CBaseEntity.GetMoveParent function function: 0x00139c98
_G.CBaseEntity.GetOrigin function function: 0x0013bbd8
_G.CBaseEntity.GetOwner function function: 0x0013a988
_G.CBaseEntity.GetOwnerEntity function function: 0x00139da8
_G.CBaseEntity.GetRightVector function function: 0x00139b78
_G.CBaseEntity.GetRootMoveParent function function: 0x00139e98
_G.CBaseEntity.GetSoundDuration function function: 0x0013bac8
_G.CBaseEntity.GetTeam function function: 0x0013c188
_G.CBaseEntity.GetTeamNumber function function: 0x0013c108
_G.CBaseEntity.GetUpVector function function: 0x00139a78
_G.CBaseEntity.GetVelocity function function: 0x0013b618
_G.CBaseEntity.HasAttribute function function: 0x0013a7f8
_G.CBaseEntity.IsAlive function function: 0x0013b0a0
_G.CBaseEntity.IsBaseNPC function function: 0x001e1998
_G.CBaseEntity.IsInstance function function: 0x001c9ac8
_G.CBaseEntity.IsNPC function function: 0x0013b198
_G.CBaseEntity.IsNull function function: 0x00139978
_G.CBaseEntity.IsPlayer function function: 0x0013b118
_G.CBaseEntity.Kill function function: 0x00139a00
_G.CBaseEntity.NextMovePeer function function: 0x0013a080
_G.CBaseEntity.OverrideFriction function function: 0x0013b8c0
_G.CBaseEntity.PrecacheScriptSound function function: 0x0013bb50
_G.CBaseEntity.RemoveEffects function function: 0x0013a558
_G.CBaseEntity.SetAbsAngles function function: 0x00139f20
_G.CBaseEntity.SetAbsOrigin function function: 0x0013c008
_G.CBaseEntity.SetAbsScale function function: 0x0013be88
_G.CBaseEntity.SetAngles function function: 0x0013a458
_G.CBaseEntity.SetAngularVelocity function function: 0x0013af98
_G.CBaseEntity.SetConstraint function function: 0x0013a358
_G.CBaseEntity.SetContext function function: 0x0013c3f0
_G.CBaseEntity.SetContextNum function function: 0x0013c470
_G.CBaseEntity.SetContextThink function function: 0x0013c370
_G.CBaseEntity.SetEntityName function function: 0x0013aa88
_G.CBaseEntity.SetForwardVector function function: 0x0013ad08
_G.CBaseEntity.SetFriction function function: 0x0013b490
_G.CBaseEntity.SetGravity function function: 0x0013b410
_G.CBaseEntity.SetHealth function function: 0x0013b310
_G.CBaseEntity.SetLocalAngles function function: 0x0013a1a8
_G.CBaseEntity.SetLocalOrigin function function: 0x0013aae8
_G.CBaseEntity.SetLocalScale function function: 0x0013bf88
_G.CBaseEntity.SetMass function function: 0x0013bcb0
_G.CBaseEntity.SetMaxHealth function function: 0x0013b290
_G.CBaseEntity.SetOrigin function function: 0x0013a128
_G.CBaseEntity.SetOwner function function: 0x0013aa08
_G.CBaseEntity.SetParent function function: 0x0013a2d8
_G.CBaseEntity.SetTeam function function: 0x0013c200
_G.CBaseEntity.SetThink function function: 0x001c9a88
_G.CBaseEntity.SetVelocity function function: 0x0013b510
_G.CBaseEntity.StopSound function function: 0x0013ba48
_G.CBaseEntity.StopThink function function: 0x001c9aa8
_G.CBaseEntity.TakeDamage function function: 0x0013b020
_G.CBaseEntity.TransformPointEntityToWorld function function: 0x0013abe8
_G.CBaseEntity.TransformPointWorldToEntity function function: 0x0013ac78
_G.CBaseEntity.Trigger function function: 0x0013c2f8
_G.CBaseEntity.ValidatePrivateScriptScope function function: 0x0013a8f8
_G.CBaseFlex table table: 0x0017af80
_G.CBaseFlex.FDesc table table: 0x0017b008
_G.CBaseFlex.FDesc.GetCurrentScene userdata handle GetCurrentScene()
Returns the instance of the oldest active scene entity (if any).
_G.CBaseFlex.FDesc.GetSceneByIndex userdata handle GetSceneByIndex(int index)
Returns the instance of the scene entity at the specified index.
_G.CBaseFlex.FDesc.ScriptPlayScene userdata float ScriptPlayScene(string pszScene, float flDelay)
( vcd file, delay ) - play specified vcd file
_G.CBaseFlex.GetCurrentScene function function: 0x0017b128
_G.CBaseFlex.GetSceneByIndex function function: 0x0017b1a8
_G.CBaseFlex.IsNull function function: 0x0017afa8
_G.CBaseFlex.ScriptPlayScene function function: 0x0017b030
_G.CBaseModelEntity table table: 0x00178b68
_G.CBaseModelEntity.FDesc table table: 0x00178bf0
_G.CBaseModelEntity.FDesc.GetMaterialGroupHash userdata unsigned GetMaterialGroupHash()
GetMaterialGroupHash(): Get the material group hash of this entity.
_G.CBaseModelEntity.FDesc.GetMaterialGroupMask userdata uint64 GetMaterialGroupMask()
GetMaterialGroupMask(): Get the mesh group mask of this entity.
_G.CBaseModelEntity.FDesc.GetRenderAlpha userdata int GetRenderAlpha()
GetRenderAlpha(): Get the alpha modulation of this entity.
_G.CBaseModelEntity.FDesc.GetRenderColor userdata Vector GetRenderColor()
GetRenderColor(): Get the render color of the entity.
_G.CBaseModelEntity.FDesc.SetBodygroup userdata void SetBodygroup(int iGroup, int iValue)
Sets a bodygroup.
_G.CBaseModelEntity.FDesc.SetBodygroupByName userdata void SetBodygroupByName(string pName, int iValue)
Sets a bodygroup by name.
_G.CBaseModelEntity.FDesc.SetLightGroup userdata void SetLightGroup(string pLightGroup)
SetLightGroup( string ): Sets the light group of the entity.
_G.CBaseModelEntity.FDesc.SetMaterialGroup userdata void SetMaterialGroup(string pMaterialGroup)
SetMaterialGroup( string ): Set the material group of this entity.
_G.CBaseModelEntity.FDesc.SetMaterialGroupHash userdata void SetMaterialGroupHash(unsigned nHash)
SetMaterialGroupHash( uint32 ): Set the material group hash of this entity.
_G.CBaseModelEntity.FDesc.SetMaterialGroupMask userdata void SetMaterialGroupMask(uint64 nMeshGroupMask)
SetMaterialGroupMask( uint64 ): Set the mesh group mask of this entity.
_G.CBaseModelEntity.FDesc.SetModel userdata void SetModel(string pModelName)

_G.CBaseModelEntity.FDesc.SetRenderAlpha userdata void SetRenderAlpha(int nAlpha)
SetRenderAlpha( int ): Set the alpha modulation of this entity.
_G.CBaseModelEntity.FDesc.SetRenderColor userdata void SetRenderColor(int r, int g, int b)
SetRenderColor( r, g, b ): Sets the render color of the entity.
_G.CBaseModelEntity.FDesc.SetRenderMode userdata void SetRenderMode(int nMode)
SetRenderMode( int ): Sets the render mode of the entity.
_G.CBaseModelEntity.FDesc.SetSingleMeshGroup userdata void SetSingleMeshGroup(string pMeshGroupName)
SetSingleMeshGroup( string ): Set a single mesh group for this entity.
_G.CBaseModelEntity.FDesc.SetSize userdata void SetSize(Vector mins, Vector maxs)

_G.CBaseModelEntity.FDesc.SetSkin userdata void SetSkin(int iSkin)
Set skin (int).
_G.CBaseModelEntity.GetMaterialGroupHash function function: 0x00179020
_G.CBaseModelEntity.GetMaterialGroupMask function function: 0x001795b0
_G.CBaseModelEntity.GetRenderAlpha function function: 0x00178d68
_G.CBaseModelEntity.GetRenderColor function function: 0x00178de8
_G.CBaseModelEntity.IsNull function function: 0x00178b90
_G.CBaseModelEntity.SetBodygroup function function: 0x00179638
_G.CBaseModelEntity.SetBodygroupByName function function: 0x00179108
_G.CBaseModelEntity.SetLightGroup function function: 0x00178f18
_G.CBaseModelEntity.SetMaterialGroup function function: 0x00179268
_G.CBaseModelEntity.SetMaterialGroupHash function function: 0x00178f98
_G.CBaseModelEntity.SetMaterialGroupMask function function: 0x00179528
_G.CBaseModelEntity.SetModel function function: 0x00178ce8
_G.CBaseModelEntity.SetRenderAlpha function function: 0x00178c70
_G.CBaseModelEntity.SetRenderColor function function: 0x00179088
_G.CBaseModelEntity.SetRenderMode function function: 0x00178e88
_G.CBaseModelEntity.SetSingleMeshGroup function function: 0x001794a0
_G.CBaseModelEntity.SetSize function function: 0x00178c18
_G.CBaseModelEntity.SetSkin function function: 0x00179190
_G.CBasePlayer table table: 0x001b5bb8
_G.CBasePlayer.AreChaperoneBoundsVisible function function: 0x001b6118
_G.CBasePlayer.FDesc table table: 0x001b5c40
_G.CBasePlayer.FDesc.AreChaperoneBoundsVisible userdata bool AreChaperoneBoundsVisible()
Returns whether this player's chaperone bounds are visible.
_G.CBasePlayer.FDesc.GetHMDAnchor userdata handle GetHMDAnchor()
Returns the HMD anchor entity for this player if it exists.
_G.CBasePlayer.FDesc.GetHMDAvatar userdata handle GetHMDAvatar()
Returns the HMD Avatar entity for this player if it exists.
_G.CBasePlayer.FDesc.GetPlayArea userdata Vector GetPlayArea(int nPoint)
Returns the Vector position of the point you ask for. Pass 0-3 to get the four points.
_G.CBasePlayer.FDesc.GetUserID userdata int GetUserID()
Returns the player's user id.
_G.CBasePlayer.FDesc.GetVRControllerType userdata <unknown> GetVRControllerType()
Returns the type of controller being used while in VR.
_G.CBasePlayer.FDesc.IsNoclipping userdata bool IsNoclipping()
Returns true if the player is in noclip mode.
_G.CBasePlayer.FDesc.IsUsePressed userdata bool IsUsePressed()
Returns true if the use key is pressed.
_G.CBasePlayer.FDesc.IsVRControllerButtonPressed userdata bool IsVRControllerButtonPressed(int nButton)
Returns true if the controller button is pressed.
_G.CBasePlayer.FDesc.IsVRDashboardShowing userdata bool IsVRDashboardShowing()
Returns true if the SteamVR dashboard is showing for this player.
_G.CBasePlayer.GetHMDAnchor function function: 0x001b5d60
_G.CBasePlayer.GetHMDAvatar function function: 0x001b5c68
_G.CBasePlayer.GetPlayArea function function: 0x001b5f10
_G.CBasePlayer.GetUserID function function: 0x001b6308
_G.CBasePlayer.GetVRControllerType function function: 0x001b5fa0
_G.CBasePlayer.IsNoclipping function function: 0x001b6028
_G.CBasePlayer.IsNull function function: 0x001b5be0
_G.CBasePlayer.IsUsePressed function function: 0x001b5e70
_G.CBasePlayer.IsVRControllerButtonPressed function function: 0x001b5de0
_G.CBasePlayer.IsVRDashboardShowing function function: 0x001b5ce8
_G.CBaseTrigger table table: 0x0017b920
_G.CBaseTrigger.Disable function function: 0x0017bb10
_G.CBaseTrigger.Enable function function: 0x0017bab8
_G.CBaseTrigger.FDesc table table: 0x0017b9a8
_G.CBaseTrigger.FDesc.Disable userdata void Disable()
Disable's the trigger
_G.CBaseTrigger.FDesc.Enable userdata void Enable()
Enable the trigger
_G.CBaseTrigger.FDesc.IsTouching userdata bool IsTouching(handle hEnt)
Checks whether the passed entity is touching the trigger.
_G.CBaseTrigger.IsNull function function: 0x0017b948
_G.CBaseTrigger.IsTouching function function: 0x0017b9d0
_G.CBodyComponent table table: 0x00177fd8
_G.CBodyComponent.AddImpulseAtPosition function function: 0x0012c2b8
_G.CBodyComponent.AddVelocity function function: 0x0012c1d0
_G.CBodyComponent.DetachFromParent function function: 0x001783e8
_G.CBodyComponent.FDesc table table: 0x00178060
_G.CBodyComponent.FDesc.AddImpulseAtPosition userdata void AddImpulseAtPosition(Vector, Vector)
Apply an impulse at a worldspace position to the physics
_G.CBodyComponent.FDesc.AddVelocity userdata void AddVelocity(Vector, Vector)
Add linear and angular velocity to the physics object
_G.CBodyComponent.FDesc.DetachFromParent userdata void DetachFromParent()
Detach from its parent
_G.CBodyComponent.FDesc.GetSequence userdata <unknown> GetSequence()
Returns the active sequence

_G.CBodyComponent.FDesc.IsAttachedToParent userdata bool IsAttachedToParent()
Is attached to parent
_G.CBodyComponent.FDesc.LookupSequence userdata <unknown> LookupSequence(string)
Returns a sequence id given a name

_G.CBodyComponent.FDesc.SequenceDuration userdata float SequenceDuration(string)
Returns the duration in seconds of the specified sequence
_G.CBodyComponent.FDesc.SetAngularVelocity userdata void SetAngularVelocity(Vector)

_G.CBodyComponent.FDesc.SetAnimation userdata void SetAnimation(string)
Pass string for the animation to play on this model
_G.CBodyComponent.FDesc.SetMaterialGroup userdata void SetMaterialGroup(utlstringtoken)

_G.CBodyComponent.FDesc.SetVelocity userdata void SetVelocity(Vector)

_G.CBodyComponent.GetSequence function function: 0x00178578
_G.CBodyComponent.IsAttachedToParent function function: 0x00178850
_G.CBodyComponent.IsNull function function: 0x00178000
_G.CBodyComponent.LookupSequence function function: 0x001785f8
_G.CBodyComponent.SequenceDuration function function: 0x00178668
_G.CBodyComponent.SetAngularVelocity function function: 0x00178028
_G.CBodyComponent.SetAnimation function function: 0x00178488
_G.CBodyComponent.SetMaterialGroup function function: 0x001784f0
_G.CBodyComponent.SetVelocity function function: 0x00178390
_G.CCustomGameEventManager table table: 0x001f1f78
_G.CCustomGameEventManager.FDesc table table: 0x001f2000
_G.CCustomGameEventManager.FDesc.RegisterListener userdata int RegisterListener(string, handle)
( string EventName, func CallbackFunction ) - Register a callback to be called when a particular custom event arrives. Returns a listener ID that can be used to unregister later.
_G.CCustomGameEventManager.FDesc.Send_ServerToAllClients userdata void Send_ServerToAllClients(string, handle)
( string EventName, table EventData )
_G.CCustomGameEventManager.FDesc.Send_ServerToPlayer userdata void Send_ServerToPlayer(handle, string, handle)
( Entity Player, string EventName, table EventData )
_G.CCustomGameEventManager.FDesc.Send_ServerToTeam userdata void Send_ServerToTeam(int, string, handle)
( int TeamNumber, string EventName, table EventData )
_G.CCustomGameEventManager.FDesc.UnregisterListener userdata void UnregisterListener(int)
( int ListnerID ) - Unregister a specific listener
_G.CCustomGameEventManager.IsNull function function: 0x001f1fa0
_G.CCustomGameEventManager.RegisterListener function function: 0x001f2028
_G.CCustomGameEventManager.Send_ServerToAllClients function function: 0x001f21b0
_G.CCustomGameEventManager.Send_ServerToPlayer function function: 0x001f2368
_G.CCustomGameEventManager.Send_ServerToTeam function function: 0x001f20b0
_G.CCustomGameEventManager.UnregisterListener function function: 0x001f2128
_G.CCustomNetTableManager table table: 0x001f1b98
_G.CCustomNetTableManager.FDesc table table: 0x001f1c20
_G.CCustomNetTableManager.FDesc.GetTableValue userdata table GetTableValue(string, string)
( string TableName, string KeyName )
_G.CCustomNetTableManager.FDesc.SetTableValue userdata bool SetTableValue(string, string, handle)
( string TableName, string KeyName, script_table Value )
_G.CCustomNetTableManager.GetTableValue function function: 0x001f1d40
_G.CCustomNetTableManager.IsNull function function: 0x001f1bc0
_G.CCustomNetTableManager.SetTableValue function function: 0x001f1c48
_G.CDOTABaseAbility table table: 0x00131d58
_G.CDOTABaseAbility.CanAbilityBeUpgraded function function: 0x0017be68
_G.CDOTABaseAbility.CastAbility function function: 0x0017c528
_G.CDOTABaseAbility.ContinueCasting function function: 0x0017c728
_G.CDOTABaseAbility.CreateVisibilityNode function function: 0x0017d330
_G.CDOTABaseAbility.DecrementModifierRefCount function function: 0x0017dc80
_G.CDOTABaseAbility.EndChannel function function: 0x0017c428
_G.CDOTABaseAbility.EndCooldown function function: 0x0017dfa8
_G.CDOTABaseAbility.FDesc table table: 0x0012bf60
_G.CDOTABaseAbility.FDesc.CanAbilityBeUpgraded userdata <unknown> CanAbilityBeUpgraded()

_G.CDOTABaseAbility.FDesc.CastAbility userdata bool CastAbility()

_G.CDOTABaseAbility.FDesc.ContinueCasting userdata bool ContinueCasting()

_G.CDOTABaseAbility.FDesc.CreateVisibilityNode userdata void CreateVisibilityNode(Vector vLocation, float fRadius, float fDuration)

_G.CDOTABaseAbility.FDesc.DecrementModifierRefCount userdata void DecrementModifierRefCount()

_G.CDOTABaseAbility.FDesc.EndChannel userdata void EndChannel(bool bInterrupted)

_G.CDOTABaseAbility.FDesc.EndCooldown userdata void EndCooldown()
Clear the cooldown remaining on this ability.
_G.CDOTABaseAbility.FDesc.GetAOERadius userdata int GetAOERadius()

_G.CDOTABaseAbility.FDesc.GetAbilityDamage userdata int GetAbilityDamage()

_G.CDOTABaseAbility.FDesc.GetAbilityDamageType userdata int GetAbilityDamageType()

_G.CDOTABaseAbility.FDesc.GetAbilityIndex userdata int GetAbilityIndex()

_G.CDOTABaseAbility.FDesc.GetAbilityKeyValues userdata table GetAbilityKeyValues()
Gets the key values definition for this ability.
_G.CDOTABaseAbility.FDesc.GetAbilityName userdata string GetAbilityName()
Returns the name of this ability.
_G.CDOTABaseAbility.FDesc.GetAbilityTargetFlags userdata int GetAbilityTargetFlags()

_G.CDOTABaseAbility.FDesc.GetAbilityTargetTeam userdata int GetAbilityTargetTeam()

_G.CDOTABaseAbility.FDesc.GetAbilityTargetType userdata int GetAbilityTargetType()

_G.CDOTABaseAbility.FDesc.GetAbilityType userdata int GetAbilityType()

_G.CDOTABaseAbility.FDesc.GetAnimationIgnoresModelScale userdata bool GetAnimationIgnoresModelScale()

_G.CDOTABaseAbility.FDesc.GetAssociatedPrimaryAbilities userdata string GetAssociatedPrimaryAbilities()

_G.CDOTABaseAbility.FDesc.GetAssociatedSecondaryAbilities userdata string GetAssociatedSecondaryAbilities()

_G.CDOTABaseAbility.FDesc.GetAutoCastState userdata bool GetAutoCastState()

_G.CDOTABaseAbility.FDesc.GetBackswingTime userdata float GetBackswingTime()

_G.CDOTABaseAbility.FDesc.GetBehavior userdata int GetBehavior()

_G.CDOTABaseAbility.FDesc.GetCastPoint userdata float GetCastPoint()

_G.CDOTABaseAbility.FDesc.GetCastRange userdata int GetCastRange(Vector vLocation, handle hTarget)
Gets the cast range of the ability.
_G.CDOTABaseAbility.FDesc.GetCaster userdata handle GetCaster()

_G.CDOTABaseAbility.FDesc.GetChannelStartTime userdata float GetChannelStartTime()

_G.CDOTABaseAbility.FDesc.GetChannelTime userdata float GetChannelTime()

_G.CDOTABaseAbility.FDesc.GetChannelledManaCostPerSecond userdata int GetChannelledManaCostPerSecond(int iLevel)

_G.CDOTABaseAbility.FDesc.GetCloneSource userdata handle GetCloneSource()

_G.CDOTABaseAbility.FDesc.GetConceptRecipientType userdata int GetConceptRecipientType()

_G.CDOTABaseAbility.FDesc.GetCooldown userdata float GetCooldown(int iLevel)
Get the cooldown duration for this ability at a given level, not the amount of cooldown actually left.
_G.CDOTABaseAbility.FDesc.GetCooldownTime userdata float GetCooldownTime()

_G.CDOTABaseAbility.FDesc.GetCooldownTimeRemaining userdata float GetCooldownTimeRemaining()

_G.CDOTABaseAbility.FDesc.GetCursorPosition userdata Vector GetCursorPosition()

_G.CDOTABaseAbility.FDesc.GetCursorTarget userdata handle GetCursorTarget()

_G.CDOTABaseAbility.FDesc.GetCursorTargetingNothing userdata bool GetCursorTargetingNothing()

_G.CDOTABaseAbility.FDesc.GetDuration userdata float GetDuration()

_G.CDOTABaseAbility.FDesc.GetEffectiveCooldown userdata float GetEffectiveCooldown(int iLevel)

_G.CDOTABaseAbility.FDesc.GetGoldCost userdata int GetGoldCost(int iLevel)

_G.CDOTABaseAbility.FDesc.GetGoldCostForUpgrade userdata int GetGoldCostForUpgrade(int iLevel)

_G.CDOTABaseAbility.FDesc.GetHeroLevelRequiredToUpgrade userdata int GetHeroLevelRequiredToUpgrade()

_G.CDOTABaseAbility.FDesc.GetIntrinsicModifierName userdata string GetIntrinsicModifierName()

_G.CDOTABaseAbility.FDesc.GetLevel userdata int GetLevel()
Get the current level of the ability.
_G.CDOTABaseAbility.FDesc.GetLevelSpecialValueFor userdata table GetLevelSpecialValueFor(string szName, int nLevel)

_G.CDOTABaseAbility.FDesc.GetManaCost userdata int GetManaCost(int iLevel)

_G.CDOTABaseAbility.FDesc.GetMaxLevel userdata int GetMaxLevel()

_G.CDOTABaseAbility.FDesc.GetModifierValue userdata float GetModifierValue()

_G.CDOTABaseAbility.FDesc.GetModifierValueBonus userdata float GetModifierValueBonus()

_G.CDOTABaseAbility.FDesc.GetPlaybackRateOverride userdata float GetPlaybackRateOverride()

_G.CDOTABaseAbility.FDesc.GetSharedCooldownName userdata string GetSharedCooldownName()

_G.CDOTABaseAbility.FDesc.GetSpecialValueFor userdata table GetSpecialValueFor(string szName)
Gets a value from this ability's special value block for its current level.
_G.CDOTABaseAbility.FDesc.GetStolenActivityModifier userdata string GetStolenActivityModifier()

_G.CDOTABaseAbility.FDesc.GetToggleState userdata bool GetToggleState()

_G.CDOTABaseAbility.FDesc.GetUpgradeRecommended userdata bool GetUpgradeRecommended()

_G.CDOTABaseAbility.FDesc.HeroXPChange userdata bool HeroXPChange(float flXP)

_G.CDOTABaseAbility.FDesc.IncrementModifierRefCount userdata void IncrementModifierRefCount()

_G.CDOTABaseAbility.FDesc.IsActivated userdata bool IsActivated()

_G.CDOTABaseAbility.FDesc.IsAttributeBonus userdata bool IsAttributeBonus()

_G.CDOTABaseAbility.FDesc.IsChanneling userdata bool IsChanneling()
Returns whether the ability is currently channeling.
_G.CDOTABaseAbility.FDesc.IsCooldownReady userdata bool IsCooldownReady()

_G.CDOTABaseAbility.FDesc.IsCosmetic userdata bool IsCosmetic(handle hEntity)

_G.CDOTABaseAbility.FDesc.IsFullyCastable userdata bool IsFullyCastable()
Returns whether the ability can be cast.
_G.CDOTABaseAbility.FDesc.IsHidden userdata bool IsHidden()

_G.CDOTABaseAbility.FDesc.IsHiddenAsSecondaryAbility userdata bool IsHiddenAsSecondaryAbility()

_G.CDOTABaseAbility.FDesc.IsHiddenWhenStolen userdata bool IsHiddenWhenStolen()

_G.CDOTABaseAbility.FDesc.IsInAbilityPhase userdata bool IsInAbilityPhase()
Returns whether the ability is currently casting.
_G.CDOTABaseAbility.FDesc.IsItem userdata bool IsItem()

_G.CDOTABaseAbility.FDesc.IsOwnersGoldEnough userdata bool IsOwnersGoldEnough(int nIssuerPlayerID)

_G.CDOTABaseAbility.FDesc.IsOwnersGoldEnoughForUpgrade userdata bool IsOwnersGoldEnoughForUpgrade()

_G.CDOTABaseAbility.FDesc.IsOwnersManaEnough userdata bool IsOwnersManaEnough()

_G.CDOTABaseAbility.FDesc.IsPassive userdata bool IsPassive()

_G.CDOTABaseAbility.FDesc.IsRefreshable userdata bool IsRefreshable()

_G.CDOTABaseAbility.FDesc.IsSharedWithTeammates userdata bool IsSharedWithTeammates()

_G.CDOTABaseAbility.FDesc.IsStealable userdata bool IsStealable()

_G.CDOTABaseAbility.FDesc.IsStolen userdata bool IsStolen()

_G.CDOTABaseAbility.FDesc.IsToggle userdata bool IsToggle()

_G.CDOTABaseAbility.FDesc.IsTrained userdata bool IsTrained()

_G.CDOTABaseAbility.FDesc.MarkAbilityButtonDirty userdata void MarkAbilityButtonDirty()
Mark the ability button for this ability as needing a refresh.
_G.CDOTABaseAbility.FDesc.NumModifiersUsingAbility userdata int NumModifiersUsingAbility()

_G.CDOTABaseAbility.FDesc.OnAbilityPhaseInterrupted userdata void OnAbilityPhaseInterrupted()

_G.CDOTABaseAbility.FDesc.OnAbilityPhaseStart userdata bool OnAbilityPhaseStart()

_G.CDOTABaseAbility.FDesc.OnAbilityPinged userdata void OnAbilityPinged(int nPlayerID, bool bCtrlHeld)

_G.CDOTABaseAbility.FDesc.OnChannelFinish userdata void OnChannelFinish(bool bInterrupted)

_G.CDOTABaseAbility.FDesc.OnChannelThink userdata void OnChannelThink(float flInterval)

_G.CDOTABaseAbility.FDesc.OnHeroCalculateStatBonus userdata void OnHeroCalculateStatBonus()

_G.CDOTABaseAbility.FDesc.OnHeroLevelUp userdata void OnHeroLevelUp()

_G.CDOTABaseAbility.FDesc.OnOwnerDied userdata void OnOwnerDied()

_G.CDOTABaseAbility.FDesc.OnOwnerSpawned userdata void OnOwnerSpawned()

_G.CDOTABaseAbility.FDesc.OnSpellStart userdata void OnSpellStart()

_G.CDOTABaseAbility.FDesc.OnToggle userdata void OnToggle()

_G.CDOTABaseAbility.FDesc.OnUpgrade userdata void OnUpgrade()

_G.CDOTABaseAbility.FDesc.PayGoldCost userdata void PayGoldCost()

_G.CDOTABaseAbility.FDesc.PayGoldCostForUpgrade userdata void PayGoldCostForUpgrade()

_G.CDOTABaseAbility.FDesc.PayManaCost userdata void PayManaCost()

_G.CDOTABaseAbility.FDesc.PlaysDefaultAnimWhenStolen userdata bool PlaysDefaultAnimWhenStolen()

_G.CDOTABaseAbility.FDesc.ProcsMagicStick userdata bool ProcsMagicStick()

_G.CDOTABaseAbility.FDesc.RefCountsModifiers userdata bool RefCountsModifiers()

_G.CDOTABaseAbility.FDesc.RefreshCharges userdata void RefreshCharges()

_G.CDOTABaseAbility.FDesc.RefundManaCost userdata void RefundManaCost()

_G.CDOTABaseAbility.FDesc.ResetToggleOnRespawn userdata bool ResetToggleOnRespawn()

_G.CDOTABaseAbility.FDesc.SetAbilityIndex userdata void SetAbilityIndex(int iIndex)

_G.CDOTABaseAbility.FDesc.SetActivated userdata void SetActivated(bool bActivated)

_G.CDOTABaseAbility.FDesc.SetChanneling userdata void SetChanneling(bool bChanneling)

_G.CDOTABaseAbility.FDesc.SetFrozenCooldown userdata void SetFrozenCooldown(bool bFrozenCooldown)

_G.CDOTABaseAbility.FDesc.SetHidden userdata void SetHidden(bool bHidden)

_G.CDOTABaseAbility.FDesc.SetInAbilityPhase userdata void SetInAbilityPhase(bool bInAbilityPhase)

_G.CDOTABaseAbility.FDesc.SetLevel userdata void SetLevel(int iLevel)
Sets the level of this ability.
_G.CDOTABaseAbility.FDesc.SetOverrideCastPoint userdata void SetOverrideCastPoint(float flCastPoint)

_G.CDOTABaseAbility.FDesc.SetRefCountsModifiers userdata void SetRefCountsModifiers(bool bRefCounts)

_G.CDOTABaseAbility.FDesc.SetStealable userdata void SetStealable(bool bStealable)

_G.CDOTABaseAbility.FDesc.SetStolen userdata void SetStolen(bool bStolen)

_G.CDOTABaseAbility.FDesc.SetUpgradeRecommended userdata void SetUpgradeRecommended(bool bUpgradeRecommended)

_G.CDOTABaseAbility.FDesc.ShouldUseResources userdata bool ShouldUseResources()

_G.CDOTABaseAbility.FDesc.SpeakAbilityConcept userdata void SpeakAbilityConcept(int iConcept)

_G.CDOTABaseAbility.FDesc.SpeakTrigger userdata <unknown> SpeakTrigger()

_G.CDOTABaseAbility.FDesc.StartCooldown userdata void StartCooldown(float flCooldown)

_G.CDOTABaseAbility.FDesc.ToggleAbility userdata void ToggleAbility()

_G.CDOTABaseAbility.FDesc.ToggleAutoCast userdata void ToggleAutoCast()

_G.CDOTABaseAbility.FDesc.UpgradeAbility userdata void UpgradeAbility(bool bSupressSpeech)

_G.CDOTABaseAbility.FDesc.UseResources userdata void UseResources(bool bMana, bool bGold, bool bCooldown)

_G.CDOTABaseAbility.GetAOERadius function function: 0x0017c6a8
_G.CDOTABaseAbility.GetAbilityDamage function function: 0x0017d1d0
_G.CDOTABaseAbility.GetAbilityDamageType function function: 0x0017d650
_G.CDOTABaseAbility.GetAbilityIndex function function: 0x0017c228
_G.CDOTABaseAbility.GetAbilityKeyValues function function: 0x0012bf88
_G.CDOTABaseAbility.GetAbilityName function function: 0x0017bcf8
_G.CDOTABaseAbility.GetAbilityTargetFlags function function: 0x0017d5c8
_G.CDOTABaseAbility.GetAbilityTargetTeam function function: 0x0017d4b8
_G.CDOTABaseAbility.GetAbilityTargetType function function: 0x0017d540
_G.CDOTABaseAbility.GetAbilityType function function: 0x0017c2a8
_G.CDOTABaseAbility.GetAnimationIgnoresModelScale function function: 0x0017c7a8
_G.CDOTABaseAbility.GetAssociatedPrimaryAbilities function function: 0x00180830
_G.CDOTABaseAbility.GetAssociatedSecondaryAbilities function function: 0x001808c0
_G.CDOTABaseAbility.GetAutoCastState function function: 0x0017cd40
_G.CDOTABaseAbility.GetBackswingTime function function: 0x0017fe40
_G.CDOTABaseAbility.GetBehavior function function: 0x0017d438
_G.CDOTABaseAbility.GetCastPoint function function: 0x0017c628
_G.CDOTABaseAbility.GetCastRange function function: 0x001e1958
_G.CDOTABaseAbility.GetCastRange_Engine function function: 0x0017c5a8
_G.CDOTABaseAbility.GetCaster function function: 0x0012c078
_G.CDOTABaseAbility.GetChannelStartTime function function: 0x0017cea0
_G.CDOTABaseAbility.GetChannelTime function function: 0x0017ce20
_G.CDOTABaseAbility.GetChannelledManaCostPerSecond function function: 0x0017ff48
_G.CDOTABaseAbility.GetCloneSource function function: 0x0017d2b0
_G.CDOTABaseAbility.GetConceptRecipientType function function: 0x00180518
_G.CDOTABaseAbility.GetCooldown function function: 0x0017e028
_G.CDOTABaseAbility.GetCooldownTime function function: 0x0017e238
_G.CDOTABaseAbility.GetCooldownTimeRemaining function function: 0x0017e2b8
_G.CDOTABaseAbility.GetCursorPosition function function: 0x0012bf28
_G.CDOTABaseAbility.GetCursorTarget function function: 0x0012c0d0
_G.CDOTABaseAbility.GetCursorTargetingNothing function function: 0x0017bc90
_G.CDOTABaseAbility.GetDuration function function: 0x0017d258
_G.CDOTABaseAbility.GetEffectiveCooldown function function: 0x0017e0a8
_G.CDOTABaseAbility.GetGoldCost function function: 0x0017ffd8
_G.CDOTABaseAbility.GetGoldCostForUpgrade function function: 0x00180058
_G.CDOTABaseAbility.GetHeroLevelRequiredToUpgrade function function: 0x0017bef0
_G.CDOTABaseAbility.GetIntrinsicModifierName function function: 0x001800e0
_G.CDOTABaseAbility.GetLevel function function: 0x0012bfe8
_G.CDOTABaseAbility.GetLevelSpecialValueFor function function: 0x00180f18
_G.CDOTABaseAbility.GetManaCost function function: 0x0017fec8
_G.CDOTABaseAbility.GetMaxLevel function function: 0x0017d6d8
_G.CDOTABaseAbility.GetModifierValue function function: 0x0017c8c0
_G.CDOTABaseAbility.GetModifierValueBonus function function: 0x0017c948
_G.CDOTABaseAbility.GetPlaybackRateOverride function function: 0x0017bfc8
_G.CDOTABaseAbility.GetSharedCooldownName function function: 0x0017e1b0
_G.CDOTABaseAbility.GetSpecialValueFor function function: 0x00180fa0
_G.CDOTABaseAbility.GetStolenActivityModifier function function: 0x00180cf8
_G.CDOTABaseAbility.GetToggleState function function: 0x0017d3b8
_G.CDOTABaseAbility.GetUpgradeRecommended function function: 0x00180e90
_G.CDOTABaseAbility.HeroXPChange function function: 0x00180308
_G.CDOTABaseAbility.IncrementModifierRefCount function function: 0x0017dbf0
_G.CDOTABaseAbility.IsActivated function function: 0x0017c178
_G.CDOTABaseAbility.IsAttributeBonus function function: 0x0017de20
_G.CDOTABaseAbility.IsChanneling function function: 0x001807b0
_G.CDOTABaseAbility.IsCooldownReady function function: 0x0017e130
_G.CDOTABaseAbility.IsCosmetic function function: 0x001e1978
_G.CDOTABaseAbility.IsCosmetic_Engine function function: 0x0017cab8
_G.CDOTABaseAbility.IsFullyCastable function function: 0x0017dda0
_G.CDOTABaseAbility.IsHidden function function: 0x0017c120
_G.CDOTABaseAbility.IsHiddenAsSecondaryAbility function function: 0x00180ad8
_G.CDOTABaseAbility.IsHiddenWhenStolen function function: 0x00180a50
_G.CDOTABaseAbility.IsInAbilityPhase function function: 0x001806a8
_G.CDOTABaseAbility.IsItem function function: 0x0017cdc8
_G.CDOTABaseAbility.IsNull function function: 0x0012bf00
_G.CDOTABaseAbility.IsOwnersGoldEnough function function: 0x0017d030
_G.CDOTABaseAbility.IsOwnersGoldEnoughForUpgrade function function: 0x0017d140
_G.CDOTABaseAbility.IsOwnersManaEnough function function: 0x0017cf28
_G.CDOTABaseAbility.IsPassive function function: 0x0017bf80
_G.CDOTABaseAbility.IsRefreshable function function: 0x0017ca38
_G.CDOTABaseAbility.IsSharedWithTeammates function function: 0x0017cb38
_G.CDOTABaseAbility.IsStealable function function: 0x001809d0
_G.CDOTABaseAbility.IsStolen function function: 0x00180be8
_G.CDOTABaseAbility.IsToggle function function: 0x0017c0a0
_G.CDOTABaseAbility.IsTrained function function: 0x0017bbf0
_G.CDOTABaseAbility.MarkAbilityButtonDirty function function: 0x00180408
_G.CDOTABaseAbility.NumModifiersUsingAbility function function: 0x0017dd10
_G.CDOTABaseAbility.OnAbilityPhaseInterrupted function function: 0x0017d7e0
_G.CDOTABaseAbility.OnAbilityPhaseStart function function: 0x0017d758
_G.CDOTABaseAbility.OnAbilityPinged function function: 0x0017c3a8
_G.CDOTABaseAbility.OnChannelFinish function function: 0x0017d8f0
_G.CDOTABaseAbility.OnChannelThink function function: 0x00180388
_G.CDOTABaseAbility.OnHeroCalculateStatBonus function function: 0x00180278
_G.CDOTABaseAbility.OnHeroLevelUp function function: 0x001801f8
_G.CDOTABaseAbility.OnOwnerDied function function: 0x0017fdc0
_G.CDOTABaseAbility.OnOwnerSpawned function function: 0x0017d9f0
_G.CDOTABaseAbility.OnSpellStart function function: 0x0017d870
_G.CDOTABaseAbility.OnToggle function function: 0x0017da70
_G.CDOTABaseAbility.OnUpgrade function function: 0x0017d970
_G.CDOTABaseAbility.PayGoldCost function function: 0x0017cfb0
_G.CDOTABaseAbility.PayGoldCostForUpgrade function function: 0x0017d0b8
_G.CDOTABaseAbility.PayManaCost function function: 0x0017e4d8
_G.CDOTABaseAbility.PlaysDefaultAnimWhenStolen function function: 0x00180c68
_G.CDOTABaseAbility.ProcsMagicStick function function: 0x0017dea8
_G.CDOTABaseAbility.RefCountsModifiers function function: 0x0017db68
_G.CDOTABaseAbility.RefreshCharges function function: 0x00180d88
_G.CDOTABaseAbility.RefundManaCost function function: 0x0017e558
_G.CDOTABaseAbility.ResetToggleOnRespawn function function: 0x00180170
_G.CDOTABaseAbility.SetAbilityIndex function function: 0x0017bd78
_G.CDOTABaseAbility.SetActivated function function: 0x0017cc40
_G.CDOTABaseAbility.SetChanneling function function: 0x00180730
_G.CDOTABaseAbility.SetFrozenCooldown function function: 0x0017e348
_G.CDOTABaseAbility.SetHidden function function: 0x0017cbc0
_G.CDOTABaseAbility.SetInAbilityPhase function function: 0x00180620
_G.CDOTABaseAbility.SetLevel function function: 0x0017bde8
_G.CDOTABaseAbility.SetOverrideCastPoint function function: 0x0017c838
_G.CDOTABaseAbility.SetRefCountsModifiers function function: 0x0017c9d0
_G.CDOTABaseAbility.SetStealable function function: 0x00180950
_G.CDOTABaseAbility.SetStolen function function: 0x00180b68
_G.CDOTABaseAbility.SetUpgradeRecommended function function: 0x00180e08
_G.CDOTABaseAbility.ShouldUseResources function function: 0x0017e3d0
_G.CDOTABaseAbility.SpeakAbilityConcept function function: 0x00180490
_G.CDOTABaseAbility.SpeakTrigger function function: 0x001805a0
_G.CDOTABaseAbility.StartCooldown function function: 0x0017df28
_G.CDOTABaseAbility.ToggleAbility function function: 0x0017c4a8
_G.CDOTABaseAbility.ToggleAutoCast function function: 0x0017ccc0
_G.CDOTABaseAbility.UpgradeAbility function function: 0x0017c328
_G.CDOTABaseAbility.UseResources function function: 0x0017e458
_G.CDOTABaseGameMode table table: 0x00146b08
_G.CDOTABaseGameMode.AddRealTimeCombatAnalyzerQuery function function: 0x001a4bf8
_G.CDOTABaseGameMode.AreWeatherEffectsDisabled function function: 0x00147f50
_G.CDOTABaseGameMode.ClearBountyRunePickupFilter function function: 0x001a4440
_G.CDOTABaseGameMode.ClearDamageFilter function function: 0x001a4218
_G.CDOTABaseGameMode.ClearExecuteOrderFilter function function: 0x001a4110
_G.CDOTABaseGameMode.ClearHealingFilter function function: 0x001a4328
_G.CDOTABaseGameMode.ClearItemAddedToInventoryFilter function function: 0x001a4938
_G.CDOTABaseGameMode.ClearModifierGainedFilter function function: 0x001a4818
_G.CDOTABaseGameMode.ClearModifyExperienceFilter function function: 0x001a4670
_G.CDOTABaseGameMode.ClearModifyGoldFilter function function: 0x001a4558
_G.CDOTABaseGameMode.ClearRuneSpawnFilter function function: 0x001a4000
_G.CDOTABaseGameMode.ClearTrackingProjectileFilter function function: 0x001a3ee8
_G.CDOTABaseGameMode.DisableHudFlip function function: 0x001a2138
_G.CDOTABaseGameMode.FDesc table table: 0x00146b90
_G.CDOTABaseGameMode.FDesc.AddRealTimeCombatAnalyzerQuery userdata int AddRealTimeCombatAnalyzerQuery(handle hQueryTable, handle hPlayer, string pszQueryName)
Begin tracking a sequence of events using the real time combat analyzer.
_G.CDOTABaseGameMode.FDesc.AreWeatherEffectsDisabled userdata bool AreWeatherEffectsDisabled()
Get if weather effects are disabled on the client.
_G.CDOTABaseGameMode.FDesc.ClearBountyRunePickupFilter userdata void ClearBountyRunePickupFilter()
Clear the script filter that controls bounty rune pickup behavior.
_G.CDOTABaseGameMode.FDesc.ClearDamageFilter userdata void ClearDamageFilter()
Clear the script filter that controls how a unit takes damage.
_G.CDOTABaseGameMode.FDesc.ClearExecuteOrderFilter userdata void ClearExecuteOrderFilter()
Clear the script filter that controls when a unit picks up an item.
_G.CDOTABaseGameMode.FDesc.ClearHealingFilter userdata void ClearHealingFilter()
Clear the script filter that controls how a unit heals.
_G.CDOTABaseGameMode.FDesc.ClearItemAddedToInventoryFilter userdata void ClearItemAddedToInventoryFilter()
Clear the script filter that controls the item added to inventory filter.
_G.CDOTABaseGameMode.FDesc.ClearModifierGainedFilter userdata void ClearModifierGainedFilter()
Clear the script filter that controls the modifier filter.
_G.CDOTABaseGameMode.FDesc.ClearModifyExperienceFilter userdata void ClearModifyExperienceFilter()
Clear the script filter that controls how hero experience is modified.
_G.CDOTABaseGameMode.FDesc.ClearModifyGoldFilter userdata void ClearModifyGoldFilter()
Clear the script filter that controls how hero gold is modified.
_G.CDOTABaseGameMode.FDesc.ClearRuneSpawnFilter userdata void ClearRuneSpawnFilter()
Clear the script filter that controls what rune spawns.
_G.CDOTABaseGameMode.FDesc.ClearTrackingProjectileFilter userdata void ClearTrackingProjectileFilter()
Clear the script filter that controls when tracking projectiles are launched.
_G.CDOTABaseGameMode.FDesc.DisableHudFlip userdata void DisableHudFlip(bool bDisable)
Use to disable hud flip for this mod
_G.CDOTABaseGameMode.FDesc.GetAlwaysShowPlayerInventory userdata bool GetAlwaysShowPlayerInventory()
Show the player hero's inventory in the HUD, regardless of what unit is selected.
_G.CDOTABaseGameMode.FDesc.GetAlwaysShowPlayerNames userdata bool GetAlwaysShowPlayerNames()
Get whether player names are always shown, regardless of client setting.
_G.CDOTABaseGameMode.FDesc.GetAnnouncerDisabled userdata bool GetAnnouncerDisabled()
Are in-game announcers disabled?
_G.CDOTABaseGameMode.FDesc.GetCameraDistanceOverride userdata float GetCameraDistanceOverride()
Set a different camera distance; dota default is 1134.
_G.CDOTABaseGameMode.FDesc.GetCustomAttributeDerivedStatValue userdata float GetCustomAttributeDerivedStatValue(int nDerivedStatType, handle hHero)
Get current derived stat value constant.
_G.CDOTABaseGameMode.FDesc.GetCustomBackpackCooldownPercent userdata float GetCustomBackpackCooldownPercent()
Get the current rate cooldown ticks down for items in the backpack.
_G.CDOTABaseGameMode.FDesc.GetCustomBackpackSwapCooldown userdata float GetCustomBackpackSwapCooldown()
Get the current custom backpack swap cooldown.
_G.CDOTABaseGameMode.FDesc.GetCustomBuybackCooldownEnabled userdata bool GetCustomBuybackCooldownEnabled()
Turns on capability to define custom buyback cooldowns.
_G.CDOTABaseGameMode.FDesc.GetCustomBuybackCostEnabled userdata bool GetCustomBuybackCostEnabled()
Turns on capability to define custom buyback costs.
_G.CDOTABaseGameMode.FDesc.GetCustomGlyphCooldown userdata float GetCustomGlyphCooldown()
Get the current custom glyph cooldown.
_G.CDOTABaseGameMode.FDesc.GetCustomHeroMaxLevel userdata int GetCustomHeroMaxLevel()
Allows definition of the max level heroes can achieve (default is 25).
_G.CDOTABaseGameMode.FDesc.GetCustomScanCooldown userdata float GetCustomScanCooldown()
Get the current custom scan cooldown.
_G.CDOTABaseGameMode.FDesc.GetFixedRespawnTime userdata float GetFixedRespawnTime()
Gets the fixed respawn time.
_G.CDOTABaseGameMode.FDesc.GetFogOfWarDisabled userdata bool GetFogOfWarDisabled()
Turn the fog of war on or off.
_G.CDOTABaseGameMode.FDesc.GetGoldSoundDisabled userdata bool GetGoldSoundDisabled()
Turn the sound when gold is acquired off/on.
_G.CDOTABaseGameMode.FDesc.GetHUDVisible userdata bool GetHUDVisible(int iElement)
Returns the HUD element visibility.
_G.CDOTABaseGameMode.FDesc.GetMaximumAttackSpeed userdata int GetMaximumAttackSpeed()
Get the maximum attack speed for units.
_G.CDOTABaseGameMode.FDesc.GetMinimumAttackSpeed userdata int GetMinimumAttackSpeed()
Get the minimum attack speed for units.
_G.CDOTABaseGameMode.FDesc.GetRecommendedItemsDisabled userdata bool GetRecommendedItemsDisabled()
Turn the panel for showing recommended items at the shop off/on.
_G.CDOTABaseGameMode.FDesc.GetRespawnTimeScale userdata float GetRespawnTimeScale()
Returns the scale applied to non-fixed respawn times.
_G.CDOTABaseGameMode.FDesc.GetStashPurchasingDisabled userdata bool GetStashPurchasingDisabled()
Turn purchasing items to the stash off/on. If purchasing to the stash is off the player must be at a shop to purchase items.
_G.CDOTABaseGameMode.FDesc.GetStickyItemDisabled userdata bool GetStickyItemDisabled()
Hide the sticky item in the quickbuy.
_G.CDOTABaseGameMode.FDesc.GetTopBarTeamValuesOverride userdata bool GetTopBarTeamValuesOverride()
Override the values of the team values on the top game bar.
_G.CDOTABaseGameMode.FDesc.GetTopBarTeamValuesVisible userdata bool GetTopBarTeamValuesVisible()
Turning on/off the team values on the top game bar.
_G.CDOTABaseGameMode.FDesc.GetTowerBackdoorProtectionEnabled userdata bool GetTowerBackdoorProtectionEnabled()
Gets whether tower backdoor protection is enabled or not.
_G.CDOTABaseGameMode.FDesc.GetUseCustomHeroLevels userdata bool GetUseCustomHeroLevels()
Are custom-defined XP values for hero level ups in use?
_G.CDOTABaseGameMode.FDesc.IsBuybackEnabled userdata bool IsBuybackEnabled()
Enables or disables buyback completely.
_G.CDOTABaseGameMode.FDesc.IsDaynightCycleDisabled userdata bool IsDaynightCycleDisabled()
Is the day/night cycle disabled?
_G.CDOTABaseGameMode.FDesc.ListenForQueryFailed userdata void ListenForQueryFailed(handle hFunction, handle hContext)
Set function and context for real time combat analyzer query failed.
_G.CDOTABaseGameMode.FDesc.ListenForQueryProgressChanged userdata void ListenForQueryProgressChanged(handle hFunction, handle hContext)
Set function and context for real time combat analyzer query progress changed.
_G.CDOTABaseGameMode.FDesc.ListenForQuerySucceeded userdata void ListenForQuerySucceeded(handle hFunction, handle hContext)
Set function and context for real time combat analyzer query succeeded.
_G.CDOTABaseGameMode.FDesc.RemoveRealTimeCombatAnalyzerQuery userdata void RemoveRealTimeCombatAnalyzerQuery(int nQueryID)
Stop tracking a combat analyzer query.
_G.CDOTABaseGameMode.FDesc.SetAbilityTuningValueFilter userdata void SetAbilityTuningValueFilter(handle hFunction, handle hContext)
Set a filter function to control the tuning values that abilities use. (Modify the table and Return true to use new values, return false to use the old values)
_G.CDOTABaseGameMode.FDesc.SetAlwaysShowPlayerInventory userdata void SetAlwaysShowPlayerInventory(bool bAlwaysShow)
Show the player hero's inventory in the HUD, regardless of what unit is selected.
_G.CDOTABaseGameMode.FDesc.SetAlwaysShowPlayerNames userdata void SetAlwaysShowPlayerNames(bool bEnabled)
Set whether player names are always shown, regardless of client setting.
_G.CDOTABaseGameMode.FDesc.SetAnnouncerDisabled userdata void SetAnnouncerDisabled(bool bDisabled)
Mutes the in-game announcer.
_G.CDOTABaseGameMode.FDesc.SetBotThinkingEnabled userdata void SetBotThinkingEnabled(bool bEnabled)
Enables/Disables bots in custom games. Note: this will only work with default heroes in the dota map.
_G.CDOTABaseGameMode.FDesc.SetBotsAlwaysPushWithHuman userdata void SetBotsAlwaysPushWithHuman(bool bAlwaysPush)
Set if the bots should try their best to push with a human player.
_G.CDOTABaseGameMode.FDesc.SetBotsInLateGame userdata void SetBotsInLateGame(bool bLateGame)
Set if bots should enable their late game behavior.
_G.CDOTABaseGameMode.FDesc.SetBotsMaxPushTier userdata void SetBotsMaxPushTier(int nMaxTier)
Set the max tier of tower that bots want to push. (-1 to disable)
_G.CDOTABaseGameMode.FDesc.SetBountyRunePickupFilter userdata void SetBountyRunePickupFilter(handle hFunction, handle hContext)
Set a filter function to control the behavior when a bounty rune is picked up. (Modify the table and Return true to use new values, return false to cancel the event)
_G.CDOTABaseGameMode.FDesc.SetBountyRuneSpawnInterval userdata void SetBountyRuneSpawnInterval(float flInterval)
Set bounty rune spawn rate
_G.CDOTABaseGameMode.FDesc.SetBuybackEnabled userdata void SetBuybackEnabled(bool bEnabled)
Enables or disables buyback completely.
_G.CDOTABaseGameMode.FDesc.SetCameraDistanceOverride userdata void SetCameraDistanceOverride(float flCameraDistanceOverride)
Set a different camera distance; dota default is 1134.
_G.CDOTABaseGameMode.FDesc.SetCameraSmoothCountOverride userdata void SetCameraSmoothCountOverride(int nSmoothCount)
Set a different camera smooth count; dota default is 8.
_G.CDOTABaseGameMode.FDesc.SetCustomAttributeDerivedStatValue userdata void SetCustomAttributeDerivedStatValue(int nStatType, float flNewValue)
Modify derived stat value constants. ( AttributeDerivedStat eStatType, float flNewValue.
_G.CDOTABaseGameMode.FDesc.SetCustomBackpackCooldownPercent userdata void SetCustomBackpackCooldownPercent(float flPercent)
Set the rate cooldown ticks down for items in the backpack.
_G.CDOTABaseGameMode.FDesc.SetCustomBackpackSwapCooldown userdata void SetCustomBackpackSwapCooldown(float flCooldown)
Set a custom cooldown for swapping items into the backpack.
_G.CDOTABaseGameMode.FDesc.SetCustomBuybackCooldownEnabled userdata void SetCustomBuybackCooldownEnabled(bool bEnabled)
Turns on capability to define custom buyback cooldowns.
_G.CDOTABaseGameMode.FDesc.SetCustomBuybackCostEnabled userdata void SetCustomBuybackCostEnabled(bool bEnabled)
Turns on capability to define custom buyback costs.
_G.CDOTABaseGameMode.FDesc.SetCustomGameForceHero userdata void SetCustomGameForceHero(string pHeroName)
Force all players to use the specified hero and disable the normal hero selection process. Must be used before hero selection.
_G.CDOTABaseGameMode.FDesc.SetCustomGlyphCooldown userdata void SetCustomGlyphCooldown(float flCooldown)
Set a custom cooldown for team Glyph ability.
_G.CDOTABaseGameMode.FDesc.SetCustomHeroMaxLevel userdata void SetCustomHeroMaxLevel(int)
Allows definition of the max level heroes can achieve (default is 25).
_G.CDOTABaseGameMode.FDesc.SetCustomScanCooldown userdata void SetCustomScanCooldown(float flCooldown)
Set a custom cooldown for team Scan ability.
_G.CDOTABaseGameMode.FDesc.SetCustomTerrainWeatherEffect userdata void SetCustomTerrainWeatherEffect(string pszEffectName)
Set the effect used as a custom weather effect, when units are on non-default terrain, in this mode.
_G.CDOTABaseGameMode.FDesc.SetCustomXPRequiredToReachNextLevel userdata void SetCustomXPRequiredToReachNextLevel(handle hTable)
Allows definition of a table of hero XP values.
_G.CDOTABaseGameMode.FDesc.SetDamageFilter userdata void SetDamageFilter(handle hFunction, handle hContext)
Set a filter function to control the behavior when a unit takes damage. (Modify the table and Return true to use new values, return false to cancel the event)
_G.CDOTABaseGameMode.FDesc.SetDaynightCycleDisabled userdata void SetDaynightCycleDisabled(bool bDisable)
Enable or disable the day/night cycle.
_G.CDOTABaseGameMode.FDesc.SetDeathOverlayDisabled userdata void SetDeathOverlayDisabled(bool bDisabled)
Specify whether the full screen death overlay effect plays when the selected hero dies.
_G.CDOTABaseGameMode.FDesc.SetDraftingBanningTimeOverride userdata void SetDraftingBanningTimeOverride(float flValue)
Set drafting hero banning time
_G.CDOTABaseGameMode.FDesc.SetDraftingHeroPickSelectTimeOverride userdata void SetDraftingHeroPickSelectTimeOverride(float flValue)
Set drafting hero pick time
_G.CDOTABaseGameMode.FDesc.SetExecuteOrderFilter userdata void SetExecuteOrderFilter(handle hFunction, handle hContext)
Set a filter function to control the behavior when a unit picks up an item. (Modify the table and Return true to use new values, return false to cancel the event)
_G.CDOTABaseGameMode.FDesc.SetFixedRespawnTime userdata void SetFixedRespawnTime(float flFixedRespawnTime)
Set a fixed delay for all players to respawn after.
_G.CDOTABaseGameMode.FDesc.SetFogOfWarDisabled userdata void SetFogOfWarDisabled(bool bDisabled)
Turn the fog of war on or off.
_G.CDOTABaseGameMode.FDesc.SetFountainConstantManaRegen userdata void SetFountainConstantManaRegen(float flConstantManaRegen)
Set the constant rate that the fountain will regen mana. (-1 for default)
_G.CDOTABaseGameMode.FDesc.SetFountainPercentageHealthRegen userdata void SetFountainPercentageHealthRegen(float flPercentageHealthRegen)
Set the percentage rate that the fountain will regen health. (-1 for default)
_G.CDOTABaseGameMode.FDesc.SetFountainPercentageManaRegen userdata void SetFountainPercentageManaRegen(float flPercentageManaRegen)
Set the percentage rate that the fountain will regen mana. (-1 for default)
_G.CDOTABaseGameMode.FDesc.SetFreeCourierModeEnabled userdata void SetFreeCourierModeEnabled(bool bEnabled)
If set to true, enable 7.23 free courier mode.
_G.CDOTABaseGameMode.FDesc.SetFriendlyBuildingMoveToEnabled userdata void SetFriendlyBuildingMoveToEnabled(bool bEnabled)
Allows clicks on friendly buildings to be handled normally.
_G.CDOTABaseGameMode.FDesc.SetGoldSoundDisabled userdata void SetGoldSoundDisabled(bool bDisabled)
Turn the sound when gold is acquired off/on.
_G.CDOTABaseGameMode.FDesc.SetHUDVisible userdata void SetHUDVisible(int iHUDElement, bool bVisible)
Set the HUD element visibility.
_G.CDOTABaseGameMode.FDesc.SetHealingFilter userdata void SetHealingFilter(handle hFunction, handle hContext)
Set a filter function to control the behavior when a unit heals. (Modify the table and Return true to use new values, return false to cancel the event)
_G.CDOTABaseGameMode.FDesc.SetHudCombatEventsDisabled userdata void SetHudCombatEventsDisabled(bool bDisabled)
Specify whether the default combat events will show in the HUD.
_G.CDOTABaseGameMode.FDesc.SetItemAddedToInventoryFilter userdata void SetItemAddedToInventoryFilter(handle hFunction, handle hContext)
Set a filter function to control what happens to items that are added to an inventory, return false to cancel the event
_G.CDOTABaseGameMode.FDesc.SetKillableTombstones userdata void SetKillableTombstones(bool bEnabled)
Set whether tombstones can be channeled to be removed by enemy heroes.
_G.CDOTABaseGameMode.FDesc.SetKillingSpreeAnnouncerDisabled userdata void SetKillingSpreeAnnouncerDisabled(bool bDisabled)
Mutes the in-game killing spree announcer.
_G.CDOTABaseGameMode.FDesc.SetLoseGoldOnDeath userdata void SetLoseGoldOnDeath(bool bEnabled)
Use to disable gold loss on death.
_G.CDOTABaseGameMode.FDesc.SetMaximumAttackSpeed userdata void SetMaximumAttackSpeed(int nMaxSpeed)
Set the maximum attack speed for units.
_G.CDOTABaseGameMode.FDesc.SetMinimumAttackSpeed userdata void SetMinimumAttackSpeed(int nMinSpeed)
Set the minimum attack speed for units.
_G.CDOTABaseGameMode.FDesc.SetModifierGainedFilter userdata void SetModifierGainedFilter(handle hFunction, handle hContext)
Set a filter function to control modifiers that are gained, return false to destroy modifier.
_G.CDOTABaseGameMode.FDesc.SetModifyExperienceFilter userdata void SetModifyExperienceFilter(handle hFunction, handle hContext)
Set a filter function to control the behavior when a hero's experience is modified. (Modify the table and Return true to use new values, return false to cancel the event)
_G.CDOTABaseGameMode.FDesc.SetModifyGoldFilter userdata void SetModifyGoldFilter(handle hFunction, handle hContext)
Set a filter function to control the behavior when a hero's gold is modified. (Modify the table and Return true to use new values, return false to cancel the event)
_G.CDOTABaseGameMode.FDesc.SetOverrideSelectionEntity userdata void SetOverrideSelectionEntity(handle hOverrideEntity)
Set an override for the default selection entity, instead of each player's hero.
_G.CDOTABaseGameMode.FDesc.SetPauseEnabled userdata void SetPauseEnabled(bool bEnabled)
Set pausing enabled/disabled
_G.CDOTABaseGameMode.FDesc.SetPowerRuneSpawnInterval userdata void SetPowerRuneSpawnInterval(float flInterval)
Set power rune spawn rate
_G.CDOTABaseGameMode.FDesc.SetRecommendedItemsDisabled userdata void SetRecommendedItemsDisabled(bool bDisabled)
Turn the panel for showing recommended items at the shop off/on.
_G.CDOTABaseGameMode.FDesc.SetRemoveIllusionsOnDeath userdata void SetRemoveIllusionsOnDeath(bool bRemove)
Make it so illusions are immediately removed upon death, rather than sticking around for a few seconds.
_G.CDOTABaseGameMode.FDesc.SetRespawnTimeScale userdata void SetRespawnTimeScale(float flValue)
Sets the scale applied to non-fixed respawn times. 1 = default DOTA respawn calculations.
_G.CDOTABaseGameMode.FDesc.SetRuneEnabled userdata void SetRuneEnabled(int nRune, bool bEnabled)
Set if a given type of rune is enabled.
_G.CDOTABaseGameMode.FDesc.SetRuneSpawnFilter userdata void SetRuneSpawnFilter(handle hFunction, handle hContext)
Set a filter function to control what rune spawns. (Modify the table and Return true to use new values, return false to cancel the event)
_G.CDOTABaseGameMode.FDesc.SetSelectionGoldPenaltyEnabled userdata void SetSelectionGoldPenaltyEnabled(bool bEnabled)
Enable/disable gold penalty for late picking.
_G.CDOTABaseGameMode.FDesc.SetStashPurchasingDisabled userdata void SetStashPurchasingDisabled(bool bDisabled)
Turn purchasing items to the stash off/on. If purchasing to the stash is off the player must be at a shop to purchase items.
_G.CDOTABaseGameMode.FDesc.SetStickyItemDisabled userdata void SetStickyItemDisabled(bool bDisabled)
Hide the sticky item in the quickbuy.
_G.CDOTABaseGameMode.FDesc.SetTopBarTeamValue userdata void SetTopBarTeamValue(int iTeam, int nValue)
Set the team values on the top game bar.
_G.CDOTABaseGameMode.FDesc.SetTopBarTeamValuesOverride userdata void SetTopBarTeamValuesOverride(bool bOverride)
Override the values of the team values on the top game bar.
_G.CDOTABaseGameMode.FDesc.SetTopBarTeamValuesVisible userdata void SetTopBarTeamValuesVisible(bool bVisible)
Turning on/off the team values on the top game bar.
_G.CDOTABaseGameMode.FDesc.SetTowerBackdoorProtectionEnabled userdata void SetTowerBackdoorProtectionEnabled(bool bEnabled)
Enables/Disables tower backdoor protection.
_G.CDOTABaseGameMode.FDesc.SetTrackingProjectileFilter userdata void SetTrackingProjectileFilter(handle hFunction, handle hContext)
Set a filter function to control when tracking projectiles are launched. (Modify the table and Return true to use new values, return false to cancel the event)
_G.CDOTABaseGameMode.FDesc.SetUnseenFogOfWarEnabled userdata void SetUnseenFogOfWarEnabled(bool bEnabled)
Enable or disable unseen fog of war. When enabled parts of the map the player has never seen will be completely hidden by fog of war.
_G.CDOTABaseGameMode.FDesc.SetUseCustomHeroLevels userdata void SetUseCustomHeroLevels(bool bEnabled)
Turn on custom-defined XP values for hero level ups.  The table should be defined before switching this on.
_G.CDOTABaseGameMode.FDesc.SetUseDefaultDOTARuneSpawnLogic userdata void SetUseDefaultDOTARuneSpawnLogic(bool bEnabled)
If set to true, use current rune spawn rules.  Either setting respects custom spawn intervals.
_G.CDOTABaseGameMode.FDesc.SetWeatherEffectsDisabled userdata void SetWeatherEffectsDisabled(bool bDisable)
Set if weather effects are disabled.
_G.CDOTABaseGameMode.GetAlwaysShowPlayerInventory function function: 0x00146bb8
_G.CDOTABaseGameMode.GetAlwaysShowPlayerNames function function: 0x00147270
_G.CDOTABaseGameMode.GetAnnouncerDisabled function function: 0x00147b08
_G.CDOTABaseGameMode.GetCameraDistanceOverride function function: 0x00147300
_G.CDOTABaseGameMode.GetCustomAttributeDerivedStatValue function function: 0x001480f0
_G.CDOTABaseGameMode.GetCustomBackpackCooldownPercent function function: 0x00146fd8
_G.CDOTABaseGameMode.GetCustomBackpackSwapCooldown function function: 0x00146c48
_G.CDOTABaseGameMode.GetCustomBuybackCooldownEnabled function function: 0x00147158
_G.CDOTABaseGameMode.GetCustomBuybackCostEnabled function function: 0x001470c8
_G.CDOTABaseGameMode.GetCustomGlyphCooldown function function: 0x00148210
_G.CDOTABaseGameMode.GetCustomHeroMaxLevel function function: 0x001479e8
_G.CDOTABaseGameMode.GetCustomScanCooldown function function: 0x00148188
_G.CDOTABaseGameMode.GetFixedRespawnTime function function: 0x00147b90
_G.CDOTABaseGameMode.GetFogOfWarDisabled function function: 0x00147040
_G.CDOTABaseGameMode.GetGoldSoundDisabled function function: 0x00146cb0
_G.CDOTABaseGameMode.GetHUDVisible function function: 0x00148070
_G.CDOTABaseGameMode.GetMaximumAttackSpeed function function: 0x00147db0
_G.CDOTABaseGameMode.GetMinimumAttackSpeed function function: 0x00147d28
_G.CDOTABaseGameMode.GetRecommendedItemsDisabled function function: 0x00146d38
_G.CDOTABaseGameMode.GetRespawnTimeScale function function: 0x00147ca0
_G.CDOTABaseGameMode.GetStashPurchasingDisabled function function: 0x00146b58
_G.CDOTABaseGameMode.GetStickyItemDisabled function function: 0x00146ef0
_G.CDOTABaseGameMode.GetTopBarTeamValuesOverride function function: 0x00147420
_G.CDOTABaseGameMode.GetTopBarTeamValuesVisible function function: 0x00147540
_G.CDOTABaseGameMode.GetTowerBackdoorProtectionEnabled function function: 0x00147a70
_G.CDOTABaseGameMode.GetUseCustomHeroLevels function function: 0x00147658
_G.CDOTABaseGameMode.IsBuybackEnabled function function: 0x001471e8
_G.CDOTABaseGameMode.IsDaynightCycleDisabled function function: 0x00147e38
_G.CDOTABaseGameMode.IsNull function function: 0x00146b30
_G.CDOTABaseGameMode.ListenForQueryFailed function function: 0x001a4ae8
_G.CDOTABaseGameMode.ListenForQueryProgressChanged function function: 0x001a4a58
_G.CDOTABaseGameMode.ListenForQuerySucceeded function function: 0x001a4b70
_G.CDOTABaseGameMode.RemoveRealTimeCombatAnalyzerQuery function function: 0x001a4c88
_G.CDOTABaseGameMode.SetAbilityTuningValueFilter function function: 0x001a4700
_G.CDOTABaseGameMode.SetAlwaysShowPlayerInventory function function: 0x00147008
_G.CDOTABaseGameMode.SetAlwaysShowPlayerNames function function: 0x00147798
_G.CDOTABaseGameMode.SetAnnouncerDisabled function function: 0x001a18a0
_G.CDOTABaseGameMode.SetBotThinkingEnabled function function: 0x001a15f0
_G.CDOTABaseGameMode.SetBotsAlwaysPushWithHuman function function: 0x001a1788
_G.CDOTABaseGameMode.SetBotsInLateGame function function: 0x001a1678
_G.CDOTABaseGameMode.SetBotsMaxPushTier function function: 0x001a1700
_G.CDOTABaseGameMode.SetBountyRunePickupFilter function function: 0x001a43b0
_G.CDOTABaseGameMode.SetBountyRuneSpawnInterval function function: 0x001a3dc8
_G.CDOTABaseGameMode.SetBuybackEnabled function function: 0x00178208
_G.CDOTABaseGameMode.SetCameraDistanceOverride function function: 0x00178290
_G.CDOTABaseGameMode.SetCameraSmoothCountOverride function function: 0x00178320
_G.CDOTABaseGameMode.SetCustomAttributeDerivedStatValue function function: 0x001a1e20
_G.CDOTABaseGameMode.SetCustomBackpackCooldownPercent function function: 0x001a1430
_G.CDOTABaseGameMode.SetCustomBackpackSwapCooldown function function: 0x001a1d90
_G.CDOTABaseGameMode.SetCustomBuybackCooldownEnabled function function: 0x00178178
_G.CDOTABaseGameMode.SetCustomBuybackCostEnabled function function: 0x001780e8
_G.CDOTABaseGameMode.SetCustomGameForceHero function function: 0x001a1818
_G.CDOTABaseGameMode.SetCustomGlyphCooldown function function: 0x001a13a8
_G.CDOTABaseGameMode.SetCustomHeroMaxLevel function function: 0x001478b0
_G.CDOTABaseGameMode.SetCustomScanCooldown function function: 0x001a1320
_G.CDOTABaseGameMode.SetCustomTerrainWeatherEffect function function: 0x001a49c8
_G.CDOTABaseGameMode.SetCustomXPRequiredToReachNextLevel function function: 0x00147938
_G.CDOTABaseGameMode.SetDamageFilter function function: 0x001a4198
_G.CDOTABaseGameMode.SetDaynightCycleDisabled function function: 0x00147ec0
_G.CDOTABaseGameMode.SetDeathOverlayDisabled function function: 0x001a2250
_G.CDOTABaseGameMode.SetDraftingBanningTimeOverride function function: 0x001a1f90
_G.CDOTABaseGameMode.SetDraftingHeroPickSelectTimeOverride function function: 0x001a2020
_G.CDOTABaseGameMode.SetExecuteOrderFilter function function: 0x001a4088
_G.CDOTABaseGameMode.SetFixedRespawnTime function function: 0x001a19c0
_G.CDOTABaseGameMode.SetFogOfWarDisabled function function: 0x001990d0
_G.CDOTABaseGameMode.SetFountainConstantManaRegen function function: 0x001a1b70
_G.CDOTABaseGameMode.SetFountainPercentageHealthRegen function function: 0x001a1a48
_G.CDOTABaseGameMode.SetFountainPercentageManaRegen function function: 0x001a1ae0
_G.CDOTABaseGameMode.SetFreeCourierModeEnabled function function: 0x001a1f00
_G.CDOTABaseGameMode.SetFriendlyBuildingMoveToEnabled function function: 0x001a21b8
_G.CDOTABaseGameMode.SetGoldSoundDisabled function function: 0x00198e18
_G.CDOTABaseGameMode.SetHUDVisible function function: 0x001a1c00
_G.CDOTABaseGameMode.SetHealingFilter function function: 0x001a42a0
_G.CDOTABaseGameMode.SetHudCombatEventsDisabled function function: 0x001a22d8
_G.CDOTABaseGameMode.SetItemAddedToInventoryFilter function function: 0x001a48a8
_G.CDOTABaseGameMode.SetKillableTombstones function function: 0x001a1298
_G.CDOTABaseGameMode.SetKillingSpreeAnnouncerDisabled function function: 0x001a1928
_G.CDOTABaseGameMode.SetLoseGoldOnDeath function function: 0x001a23f8
_G.CDOTABaseGameMode.SetMaximumAttackSpeed function function: 0x001a1d08
_G.CDOTABaseGameMode.SetMinimumAttackSpeed function function: 0x001a1c80
_G.CDOTABaseGameMode.SetModifierGainedFilter function function: 0x001a4790
_G.CDOTABaseGameMode.SetModifyExperienceFilter function function: 0x001a45e0
_G.CDOTABaseGameMode.SetModifyGoldFilter function function: 0x001a44d0
_G.CDOTABaseGameMode.SetOverrideSelectionEntity function function: 0x00147708
_G.CDOTABaseGameMode.SetPauseEnabled function function: 0x001a1e80
_G.CDOTABaseGameMode.SetPowerRuneSpawnInterval function function: 0x001a3d38
_G.CDOTABaseGameMode.SetRecommendedItemsDisabled function function: 0x00198ea0
_G.CDOTABaseGameMode.SetRemoveIllusionsOnDeath function function: 0x001a2368
_G.CDOTABaseGameMode.SetRespawnTimeScale function function: 0x00147c18
_G.CDOTABaseGameMode.SetRuneEnabled function function: 0x001a20b8
_G.CDOTABaseGameMode.SetRuneSpawnFilter function function: 0x001a3f78
_G.CDOTABaseGameMode.SetSelectionGoldPenaltyEnabled function function: 0x001a14c8
_G.CDOTABaseGameMode.SetStashPurchasingDisabled function function: 0x00198f30
_G.CDOTABaseGameMode.SetStickyItemDisabled function function: 0x00199048
_G.CDOTABaseGameMode.SetTopBarTeamValue function function: 0x001475d0
_G.CDOTABaseGameMode.SetTopBarTeamValuesOverride function function: 0x00147390
_G.CDOTABaseGameMode.SetTopBarTeamValuesVisible function function: 0x001474b0
_G.CDOTABaseGameMode.SetTowerBackdoorProtectionEnabled function function: 0x001a1558
_G.CDOTABaseGameMode.SetTrackingProjectileFilter function function: 0x001a3e58
_G.CDOTABaseGameMode.SetUnseenFogOfWarEnabled function function: 0x00199158
_G.CDOTABaseGameMode.SetUseCustomHeroLevels function function: 0x00147828
_G.CDOTABaseGameMode.SetUseDefaultDOTARuneSpawnLogic function function: 0x001a3ca8
_G.CDOTABaseGameMode.SetWeatherEffectsDisabled function function: 0x00147fe0
_G.CDOTAGameManager table table: 0x00133250
_G.CDOTAGameManager.FDesc table table: 0x001332d8
_G.CDOTAGameManager.FDesc.GetHeroDataByName_Script userdata table GetHeroDataByName_Script(string)
Get the hero unit 
_G.CDOTAGameManager.FDesc.GetHeroIDByName userdata int GetHeroIDByName(string)
Get the hero ID given the hero name.
_G.CDOTAGameManager.FDesc.GetHeroNameByID userdata string GetHeroNameByID(int)
Get the hero name given a hero ID.
_G.CDOTAGameManager.FDesc.GetHeroNameForUnitName userdata string GetHeroNameForUnitName(string)
Get the hero name given a unit name.
_G.CDOTAGameManager.FDesc.GetHeroUnitNameByID userdata string GetHeroUnitNameByID(int)
Get the hero unit name given the hero ID.
_G.CDOTAGameManager.GetHeroDataByName_Script function function: 0x001334e0
_G.CDOTAGameManager.GetHeroIDByName function function: 0x00133380
_G.CDOTAGameManager.GetHeroNameByID function function: 0x00133300
_G.CDOTAGameManager.GetHeroNameForUnitName function function: 0x00133400
_G.CDOTAGameManager.GetHeroUnitNameByID function function: 0x001332a0
_G.CDOTAGameManager.IsNull function function: 0x00133278
_G.CDOTAGamerules table table: 0x001e22d0
_G.CDOTAGamerules.AddBotPlayerWithEntityScript function function: 0x001eff98
_G.CDOTAGamerules.AddEventMetadataLeaderboardEntry function function: 0x001ed580
_G.CDOTAGamerules.AddItemToWhiteList function function: 0x001efbf8
_G.CDOTAGamerules.AddMinimapDebugPoint function function: 0x001ee150
_G.CDOTAGamerules.AddMinimapDebugPointForTeam function function: 0x001ee1d8
_G.CDOTAGamerules.BeginNightstalkerNight function function: 0x001ec3c0
_G.CDOTAGamerules.BeginTemporaryNight function function: 0x001ec2b0
_G.CDOTAGamerules.BotPopulate function function: 0x001ed6a8
_G.CDOTAGamerules.Defeated function function: 0x001e24e0
_G.CDOTAGamerules.DidMatchSignoutTimeOut function function: 0x001edbf8
_G.CDOTAGamerules.EnableCustomGameSetupAutoLaunch function function: 0x001ecd88
_G.CDOTAGamerules.FDesc table table: 0x001e2358
_G.CDOTAGamerules.FDesc.AddBotPlayerWithEntityScript userdata handle AddBotPlayerWithEntityScript(string, string, int, string)
Spawn a bot player of the passed hero name, player name, and team.
_G.CDOTAGamerules.FDesc.AddEventMetadataLeaderboardEntry userdata bool AddEventMetadataLeaderboardEntry(string, unsigned, unsigned, unsigned, unsigned, unsigned, unsigned, unsigned, unsigned)
Event-only ( string szNameSuffix, int nStars, int nMaxStars, int nExtraData1, int nExtraData2 )
_G.CDOTAGamerules.FDesc.AddItemToWhiteList userdata void AddItemToWhiteList(string)
Add an item to the whitelist
_G.CDOTAGamerules.FDesc.AddMinimapDebugPoint userdata void AddMinimapDebugPoint(int, Vector, int, int, int, int, float)
Add a point on the minimap.
_G.CDOTAGamerules.FDesc.AddMinimapDebugPointForTeam userdata void AddMinimapDebugPointForTeam(int, Vector, int, int, int, int, float, int)
Add a point on the minimap for a specific team.
_G.CDOTAGamerules.FDesc.BeginNightstalkerNight userdata void BeginNightstalkerNight(float)
Begin night stalker night.
_G.CDOTAGamerules.FDesc.BeginTemporaryNight userdata void BeginTemporaryNight(float)
Begin temporary night.
_G.CDOTAGamerules.FDesc.BotPopulate userdata void BotPopulate()
Fills all the teams with bots if cheat mode is enabled.
_G.CDOTAGamerules.FDesc.Defeated userdata void Defeated()
Kills the ancient, etc.
_G.CDOTAGamerules.FDesc.DidMatchSignoutTimeOut userdata bool DidMatchSignoutTimeOut()
true when we have waited some time after end of the game and not received signout
_G.CDOTAGamerules.FDesc.EnableCustomGameSetupAutoLaunch userdata void EnableCustomGameSetupAutoLaunch(bool)
Enabled (true) or disable (false) auto launch for custom game setup.
_G.CDOTAGamerules.FDesc.FinishCustomGameSetup userdata void FinishCustomGameSetup()
Indicate that the custom game setup phase is complete, and advance to the game.
_G.CDOTAGamerules.FDesc.ForceCreepSpawn userdata void ForceCreepSpawn()
Spawn the next wave of creeps.
_G.CDOTAGamerules.FDesc.ForceGameStart userdata void ForceGameStart()
Transition game state to DOTA_GAMERULES_STATE_GAME_IN_PROGRESS
_G.CDOTAGamerules.FDesc.GetCustomGameDifficulty userdata int GetCustomGameDifficulty()
Returns the difficulty level of the custom game mode
_G.CDOTAGamerules.FDesc.GetCustomGameTeamMaxPlayers userdata int GetCustomGameTeamMaxPlayers(int)
Get whether a team is selectable during game setup
_G.CDOTAGamerules.FDesc.GetDOTATime userdata float GetDOTATime(bool, bool)
(b IncludePregameTime b IncludeNegativeTime) Returns the actual DOTA in-game clock time.
_G.CDOTAGamerules.FDesc.GetDifficulty userdata int GetDifficulty()
Returns difficulty level of the custom game mode
_G.CDOTAGamerules.FDesc.GetDroppedItem userdata handle GetDroppedItem(int)
Gets the Xth dropped item
_G.CDOTAGamerules.FDesc.GetGameFrameTime userdata float GetGameFrameTime()
Returns the number of seconds elapsed since the last frame was renderered. This time doesn't count up when the game is paused
_G.CDOTAGamerules.FDesc.GetGameModeEntity userdata handle GetGameModeEntity()
Get the game mode entity
_G.CDOTAGamerules.FDesc.GetGameSessionConfigValue userdata string GetGameSessionConfigValue(string, string)
Get a string value from the game session config (map options)
_G.CDOTAGamerules.FDesc.GetGameTime userdata float GetGameTime()
Returns the number of seconds elapsed since map start. This time doesn't count up when the game is paused
_G.CDOTAGamerules.FDesc.GetMatchID userdata uint64 GetMatchID()
Get the MatchID for this game.
_G.CDOTAGamerules.FDesc.GetMatchSignoutComplete userdata bool GetMatchSignoutComplete()
Have we received the post match signout message that includes reward information
_G.CDOTAGamerules.FDesc.GetNianTotalDamageTaken userdata int GetNianTotalDamageTaken()
For New Bloom, get total damage taken by the Nian / Year Beast
_G.CDOTAGamerules.FDesc.GetPlayerCustomGameAccountRecord userdata table GetPlayerCustomGameAccountRecord(int)
(Preview/Unreleased) Gets the player's custom game account record, as it looked at the start of this session
_G.CDOTAGamerules.FDesc.GetStateTransitionTime userdata float GetStateTransitionTime()
Get time remaining between state changes.
_G.CDOTAGamerules.FDesc.GetTimeOfDay userdata float GetTimeOfDay()
Get the time of day
_G.CDOTAGamerules.FDesc.GetWeatherWindDirection userdata Vector GetWeatherWindDirection()
Get Weather Wind Direction Vector
_G.CDOTAGamerules.FDesc.IsCheatMode userdata bool IsCheatMode()
Are cheats enabled on the server
_G.CDOTAGamerules.FDesc.IsDaytime userdata bool IsDaytime()
Is it day time?
_G.CDOTAGamerules.FDesc.IsGamePaused userdata bool IsGamePaused()
Returns whether the game is paused.
_G.CDOTAGamerules.FDesc.IsHeroRespawnEnabled userdata bool IsHeroRespawnEnabled()
Returns whether hero respawn is enabled.
_G.CDOTAGamerules.FDesc.IsInBanPhase userdata bool IsInBanPhase()
Are we in the ban phase of hero pick?
_G.CDOTAGamerules.FDesc.IsItemInWhiteList userdata bool IsItemInWhiteList(string)
Query an item in the whitelist
_G.CDOTAGamerules.FDesc.IsNightstalkerNight userdata bool IsNightstalkerNight()
Is it night stalker night-time?
_G.CDOTAGamerules.FDesc.IsTemporaryNight userdata bool IsTemporaryNight()
Is it temporarily night-time?
_G.CDOTAGamerules.FDesc.LockCustomGameSetupTeamAssignment userdata void LockCustomGameSetupTeamAssignment(bool)
Lock (true) or unlock (false) team assignemnt. If team assignment is locked players cannot change teams.
_G.CDOTAGamerules.FDesc.MakeTeamLose userdata void MakeTeamLose(int)
Makes the specified team lose
_G.CDOTAGamerules.FDesc.NumDroppedItems userdata int NumDroppedItems()
Returns the number of items currently dropped on the ground
_G.CDOTAGamerules.FDesc.PlayerHasCustomGameHostPrivileges userdata bool PlayerHasCustomGameHostPrivileges(handle)
Whether a player has custom game host privileges (shuffle teams, etc.)
_G.CDOTAGamerules.FDesc.Playtesting_UpdateAddOnKeyValues userdata void Playtesting_UpdateAddOnKeyValues()
Updates custom hero, unit and ability KeyValues in memory with the latest values from disk
_G.CDOTAGamerules.FDesc.PrepareSpawners userdata void PrepareSpawners(float)
Prepare Dota lane style spawners with a given interval
_G.CDOTAGamerules.FDesc.RemoveItemFromWhiteList userdata void RemoveItemFromWhiteList(string)
Remove an item from the whitelist
_G.CDOTAGamerules.FDesc.ResetDefeated userdata void ResetDefeated()
Restart after killing the ancient, etc.
_G.CDOTAGamerules.FDesc.ResetGameTime userdata void ResetGameTime()
Restart gametime from 0
_G.CDOTAGamerules.FDesc.ResetToCustomGameSetup userdata void ResetToCustomGameSetup()
Restart at custom game setup.
_G.CDOTAGamerules.FDesc.ResetToHeroSelection userdata void ResetToHeroSelection()
Restart the game at hero selection
_G.CDOTAGamerules.FDesc.SendCustomMessage userdata void SendCustomMessage(string, int, int)
Sends a message on behalf of a player.
_G.CDOTAGamerules.FDesc.SendCustomMessageToTeam userdata void SendCustomMessageToTeam(string, int, int, int)
Sends a message on behalf of a player to the specified team.
_G.CDOTAGamerules.FDesc.SetCreepMinimapIconScale userdata void SetCreepMinimapIconScale(float)
(flMinimapCreepIconScale) - Scale the creep icons on the minimap.
_G.CDOTAGamerules.FDesc.SetCreepSpawningEnabled userdata void SetCreepSpawningEnabled(bool)
Sets whether the regular Dota creeps spawn.
_G.CDOTAGamerules.FDesc.SetCustomGameAccountRecordSaveFunction userdata void SetCustomGameAccountRecordSaveFunction(handle, handle)
(Preview/Unreleased) Sets a callback to handle saving custom game account records (callback is passed a Player ID and should return a flat simple table)
_G.CDOTAGamerules.FDesc.SetCustomGameAllowBattleMusic userdata void SetCustomGameAllowBattleMusic(bool)
Sets a flag to enable/disable the default music handling code for custom games
_G.CDOTAGamerules.FDesc.SetCustomGameAllowHeroPickMusic userdata void SetCustomGameAllowHeroPickMusic(bool)
Sets a flag to enable/disable the default music handling code for custom games
_G.CDOTAGamerules.FDesc.SetCustomGameAllowMusicAtGameStart userdata void SetCustomGameAllowMusicAtGameStart(bool)
Sets a flag to enable/disable the default music handling code for custom games
_G.CDOTAGamerules.FDesc.SetCustomGameDifficulty userdata void SetCustomGameDifficulty(int)
Set the difficulty level of the custom game mode
_G.CDOTAGamerules.FDesc.SetCustomGameEndDelay userdata void SetCustomGameEndDelay(float)
Sets the game end delay.
_G.CDOTAGamerules.FDesc.SetCustomGameSetupAutoLaunchDelay userdata void SetCustomGameSetupAutoLaunchDelay(float)
Set the amount of time to wait for auto launch.
_G.CDOTAGamerules.FDesc.SetCustomGameSetupRemainingTime userdata void SetCustomGameSetupRemainingTime(float)
Set the amount of remaining time, in seconds, for custom game setup. 0 = finish immediately, -1 = wait forever
_G.CDOTAGamerules.FDesc.SetCustomGameSetupTimeout userdata void SetCustomGameSetupTimeout(float)
Setup (pre-gameplay) phase timeout. 0 = instant, -1 = forever (until FinishCustomGameSetup is called)
_G.CDOTAGamerules.FDesc.SetCustomGameTeamMaxPlayers userdata void SetCustomGameTeamMaxPlayers(int, int)
Set whether a team is selectable during game setup
_G.CDOTAGamerules.FDesc.SetCustomVictoryMessage userdata void SetCustomVictoryMessage(string)
Sets the victory message.
_G.CDOTAGamerules.FDesc.SetCustomVictoryMessageDuration userdata void SetCustomVictoryMessageDuration(float)
Sets the victory message duration.
_G.CDOTAGamerules.FDesc.SetEventMetadataCustomTable userdata bool SetEventMetadataCustomTable(handle)
Event-only ( table hMetadataTable )
_G.CDOTAGamerules.FDesc.SetEventSignoutCustomTable userdata bool SetEventSignoutCustomTable(handle)
Event-only ( table hMetadataTable )
_G.CDOTAGamerules.FDesc.SetFirstBloodActive userdata void SetFirstBloodActive(bool)
Sets whether First Blood has been triggered.
_G.CDOTAGamerules.FDesc.SetGameWinner userdata void SetGameWinner(int)
Makes the specified team win
_G.CDOTAGamerules.FDesc.SetGoldPerTick userdata void SetGoldPerTick(int)
Set the auto gold increase per timed interval.
_G.CDOTAGamerules.FDesc.SetGoldTickTime userdata void SetGoldTickTime(float)
Set the time interval between auto gold increases.
_G.CDOTAGamerules.FDesc.SetHeroMinimapIconScale userdata void SetHeroMinimapIconScale(float)
(flMinimapHeroIconScale) - Scale the hero minimap icons on the minimap.
_G.CDOTAGamerules.FDesc.SetHeroRespawnEnabled userdata void SetHeroRespawnEnabled(bool)
Control if the normal DOTA hero respawn rules apply.
_G.CDOTAGamerules.FDesc.SetHeroSelectPenaltyTime userdata void SetHeroSelectPenaltyTime(float)
Sets amount of penalty time before randoming a hero
_G.CDOTAGamerules.FDesc.SetHeroSelectionTime userdata void SetHeroSelectionTime(float)
Sets the amount of time players have to pick their hero.
_G.CDOTAGamerules.FDesc.SetHideKillMessageHeaders userdata void SetHideKillMessageHeaders(bool)
Sets whether the multikill, streak, and first-blood banners appear at the top of the screen.
_G.CDOTAGamerules.FDesc.SetOverlayHealthBarUnit userdata void SetOverlayHealthBarUnit(handle, int)
Show this unit's health on the overlay health bar
_G.CDOTAGamerules.FDesc.SetPostGameTime userdata void SetPostGameTime(float)
Sets the amount of time players have between the game ending and the server disconnecting them.
_G.CDOTAGamerules.FDesc.SetPreGameTime userdata void SetPreGameTime(float)
Sets the amount of time players have between picking their hero and game start.
_G.CDOTAGamerules.FDesc.SetRuneMinimapIconScale userdata void SetRuneMinimapIconScale(float)
(flMinimapRuneIconScale) - Scale the rune icons on the minimap.
_G.CDOTAGamerules.FDesc.SetRuneSpawnTime userdata void SetRuneSpawnTime(float)
Sets the amount of time between rune spawns.
_G.CDOTAGamerules.FDesc.SetSafeToLeave userdata void SetSafeToLeave(bool)
(bSafeToLeave) - Mark this game as safe to leave.
_G.CDOTAGamerules.FDesc.SetSameHeroSelectionEnabled userdata void SetSameHeroSelectionEnabled(bool)
When true, players can repeatedly pick the same hero.
_G.CDOTAGamerules.FDesc.SetShowcaseTime userdata void SetShowcaseTime(float)
Sets the amount of time players have between the strategy phase and entering the pre-game phase.
_G.CDOTAGamerules.FDesc.SetStartingGold userdata void SetStartingGold(int)
Set the starting gold amount.
_G.CDOTAGamerules.FDesc.SetStrategyTime userdata void SetStrategyTime(float)
Sets the amount of time players have between the hero selection and entering the showcase phase.
_G.CDOTAGamerules.FDesc.SetTimeOfDay userdata void SetTimeOfDay(float)
Set the time of day.
_G.CDOTAGamerules.FDesc.SetTreeRegrowTime userdata void SetTreeRegrowTime(float)
Sets the tree regrow time in seconds.
_G.CDOTAGamerules.FDesc.SetUseBaseGoldBountyOnHeroes userdata void SetUseBaseGoldBountyOnHeroes(bool)
Heroes will use the basic NPC functionality for determining their bounty, rather than DOTA specific formulas.
_G.CDOTAGamerules.FDesc.SetUseCustomHeroXPValues userdata void SetUseCustomHeroXPValues(bool)
Allows heroes in the map to give a specific amount of XP (this value must be set).
_G.CDOTAGamerules.FDesc.SetUseUniversalShopMode userdata void SetUseUniversalShopMode(bool)
When true, all items are available at as long as any shop is in range.
_G.CDOTAGamerules.FDesc.SetWeatherWindDirection userdata void SetWeatherWindDirection(Vector)
Set Weather Wind Direction Vector
_G.CDOTAGamerules.FDesc.SetWhiteListEnabled userdata void SetWhiteListEnabled(bool)
Item whitelist functionality enable/disable
_G.CDOTAGamerules.FDesc.SpawnAndReleaseCreeps userdata void SpawnAndReleaseCreeps()
Spawn and release the next creep wave from Dota lane style spawners.
_G.CDOTAGamerules.FDesc.State_Get userdata int State_Get()
Get the current Gamerules state
_G.CDOTAGamerules.FinishCustomGameSetup function function: 0x001ee268
_G.CDOTAGamerules.ForceCreepSpawn function function: 0x001efe10
_G.CDOTAGamerules.ForceGameStart function function: 0x001efd90
_G.CDOTAGamerules.GetCustomGameDifficulty function function: 0x001e1e08
_G.CDOTAGamerules.GetCustomGameTeamMaxPlayers function function: 0x001ecf40
_G.CDOTAGamerules.GetDOTATime function function: 0x001e2320
_G.CDOTAGamerules.GetDifficulty function function: 0x001e1d88
_G.CDOTAGamerules.GetDroppedItem function function: 0x001ebbe0
_G.CDOTAGamerules.GetGameFrameTime function function: 0x001e2480
_G.CDOTAGamerules.GetGameModeEntity function function: 0x001edd08
_G.CDOTAGamerules.GetGameSessionConfigValue function function: 0x001ed218
_G.CDOTAGamerules.GetGameTime function function: 0x001e2400
_G.CDOTAGamerules.GetMatchID function function: 0x001ed470
_G.CDOTAGamerules.GetMatchSignoutComplete function function: 0x001edb70
_G.CDOTAGamerules.GetNianTotalDamageTaken function function: 0x001edc80
_G.CDOTAGamerules.GetPlayerCustomGameAccountRecord function function: 0x001ed340
_G.CDOTAGamerules.GetStateTransitionTime function function: 0x001ecc68
_G.CDOTAGamerules.GetTimeOfDay function function: 0x001ecb68
_G.CDOTAGamerules.GetWeatherWindDirection function function: 0x001f00a8
_G.CDOTAGamerules.IsCheatMode function function: 0x001f0028
_G.CDOTAGamerules.IsDaytime function function: 0x001ec1a8
_G.CDOTAGamerules.IsGamePaused function function: 0x001ee048
_G.CDOTAGamerules.IsHeroRespawnEnabled function function: 0x001ee0c8
_G.CDOTAGamerules.IsInBanPhase function function: 0x001ecbe8
_G.CDOTAGamerules.IsItemInWhiteList function function: 0x001efd08
_G.CDOTAGamerules.IsNightstalkerNight function function: 0x001ec338
_G.CDOTAGamerules.IsNull function function: 0x001e22f8
_G.CDOTAGamerules.IsTemporaryNight function function: 0x001ec228
_G.CDOTAGamerules.LockCustomGameSetupTeamAssignment function function: 0x001ece18
_G.CDOTAGamerules.MakeTeamLose function function: 0x001e1cc8
_G.CDOTAGamerules.NumDroppedItems function function: 0x001ebf90
_G.CDOTAGamerules.PlayerHasCustomGameHostPrivileges function function: 0x001ed2a8
_G.CDOTAGamerules.Playtesting_UpdateAddOnKeyValues function function: 0x001ebc60
_G.CDOTAGamerules.PrepareSpawners function function: 0x001efe90
_G.CDOTAGamerules.RemoveItemFromWhiteList function function: 0x001efc80
_G.CDOTAGamerules.ResetDefeated function function: 0x001c4998
_G.CDOTAGamerules.ResetGameTime function function: 0x001ed7b0
_G.CDOTAGamerules.ResetToCustomGameSetup function function: 0x001ed728
_G.CDOTAGamerules.ResetToHeroSelection function function: 0x001ebcf8
_G.CDOTAGamerules.SendCustomMessage function function: 0x001ec010
_G.CDOTAGamerules.SendCustomMessageToTeam function function: 0x001ec098
_G.CDOTAGamerules.SetCreepMinimapIconScale function function: 0x001ec558
_G.CDOTAGamerules.SetCreepSpawningEnabled function function: 0x001ec5e8
_G.CDOTAGamerules.SetCustomGameAccountRecordSaveFunction function function: 0x001ed3d8
_G.CDOTAGamerules.SetCustomGameAllowBattleMusic function function: 0x001ed0f0
_G.CDOTAGamerules.SetCustomGameAllowHeroPickMusic function function: 0x001ed060
_G.CDOTAGamerules.SetCustomGameAllowMusicAtGameStart function function: 0x001ed180
_G.CDOTAGamerules.SetCustomGameDifficulty function function: 0x001ed968
_G.CDOTAGamerules.SetCustomGameEndDelay function function: 0x001edf30
_G.CDOTAGamerules.SetCustomGameSetupAutoLaunchDelay function function: 0x001eccf0
_G.CDOTAGamerules.SetCustomGameSetupRemainingTime function function: 0x001ee380
_G.CDOTAGamerules.SetCustomGameSetupTimeout function function: 0x001ee2f0
_G.CDOTAGamerules.SetCustomGameTeamMaxPlayers function function: 0x001eceb0
_G.CDOTAGamerules.SetCustomVictoryMessage function function: 0x001edea8
_G.CDOTAGamerules.SetCustomVictoryMessageDuration function function: 0x001edfb8
_G.CDOTAGamerules.SetEventMetadataCustomTable function function: 0x001ed4f0
_G.CDOTAGamerules.SetEventSignoutCustomTable function function: 0x001ed618
_G.CDOTAGamerules.SetFirstBloodActive function function: 0x001edd90
_G.CDOTAGamerules.SetGameWinner function function: 0x001e1c48
_G.CDOTAGamerules.SetGoldPerTick function function: 0x001eda70
_G.CDOTAGamerules.SetGoldTickTime function function: 0x001ed9f0
_G.CDOTAGamerules.SetHeroMinimapIconScale function function: 0x001ec4d0
_G.CDOTAGamerules.SetHeroRespawnEnabled function function: 0x001ec120
_G.CDOTAGamerules.SetHeroSelectPenaltyTime function function: 0x001ecfd0
_G.CDOTAGamerules.SetHeroSelectionTime function function: 0x001ebe08
_G.CDOTAGamerules.SetHideKillMessageHeaders function function: 0x001ede18
_G.CDOTAGamerules.SetOverlayHealthBarUnit function function: 0x001ec448
_G.CDOTAGamerules.SetPostGameTime function function: 0x001ebf10
_G.CDOTAGamerules.SetPreGameTime function function: 0x001ebe90
_G.CDOTAGamerules.SetRuneMinimapIconScale function function: 0x001ec670
_G.CDOTAGamerules.SetRuneSpawnTime function function: 0x001ec8b8
_G.CDOTAGamerules.SetSafeToLeave function function: 0x001ec6f8
_G.CDOTAGamerules.SetSameHeroSelectionEnabled function function: 0x001ec940
_G.CDOTAGamerules.SetShowcaseTime function function: 0x001ec838
_G.CDOTAGamerules.SetStartingGold function function: 0x001edaf0
_G.CDOTAGamerules.SetStrategyTime function function: 0x001ec7b8
_G.CDOTAGamerules.SetTimeOfDay function function: 0x001ecae8
_G.CDOTAGamerules.SetTreeRegrowTime function function: 0x001ebd80
_G.CDOTAGamerules.SetUseBaseGoldBountyOnHeroes function function: 0x001eca58
_G.CDOTAGamerules.SetUseCustomHeroXPValues function function: 0x001ed8d8
_G.CDOTAGamerules.SetUseUniversalShopMode function function: 0x001ec9d0
_G.CDOTAGamerules.SetWeatherWindDirection function function: 0x001f0130
_G.CDOTAGamerules.SetWhiteListEnabled function function: 0x001ed830
_G.CDOTAGamerules.SpawnAndReleaseCreeps function function: 0x001eff10
_G.CDOTAGamerules.State_Get function function: 0x001e2380
_G.CDOTAPlayer table table: 0x001a90c0
_G.CDOTAPlayer.CheckForCourierSpawning function function: 0x001a92b0
_G.CDOTAPlayer.FDesc table table: 0x001a9148
_G.CDOTAPlayer.FDesc.CheckForCourierSpawning userdata void CheckForCourierSpawning(handle hHero)
Attempt to spawn the appropriate couriers for this mode.
_G.CDOTAPlayer.FDesc.GetAssignedHero userdata handle GetAssignedHero()
Get the player's hero.
_G.CDOTAPlayer.FDesc.GetPlayerID userdata int GetPlayerID()
Get the player's official PlayerID; notably is -1 when the player isn't yet on a team.
_G.CDOTAPlayer.FDesc.MakeRandomHeroSelection userdata void MakeRandomHeroSelection()
Randoms this player's hero.
_G.CDOTAPlayer.FDesc.SetAssignedHeroEntity userdata void SetAssignedHeroEntity(handle hHero)
Sets this player's hero .
_G.CDOTAPlayer.FDesc.SetKillCamUnit userdata void SetKillCamUnit(handle hEntity)
Set the kill cam unit for this hero.
_G.CDOTAPlayer.FDesc.SetMusicStatus userdata void SetMusicStatus(int nMusicStatus, float flIntensity)
(nMusicStatus, flIntensity) - Set the music status for this player, note this will only really apply if dota_music_battle_enable is off.
_G.CDOTAPlayer.FDesc.SetSelectedHero userdata void SetSelectedHero(string pszHeroName)
Sets this player's hero selection.
_G.CDOTAPlayer.GetAssignedHero function function: 0x001a9230
_G.CDOTAPlayer.GetPlayerID function function: 0x001a9170
_G.CDOTAPlayer.IsNull function function: 0x001a90e8
_G.CDOTAPlayer.MakeRandomHeroSelection function function: 0x001a9110
_G.CDOTAPlayer.SetAssignedHeroEntity function function: 0x001a95a0
_G.CDOTAPlayer.SetKillCamUnit function function: 0x001a9830
_G.CDOTAPlayer.SetMusicStatus function function: 0x001a9628
_G.CDOTAPlayer.SetSelectedHero function function: 0x001a9458
_G.CDOTATutorial table table: 0x001f0368
_G.CDOTATutorial.AddBot function function: 0x001f0920
_G.CDOTATutorial.AddQuest function function: 0x001f04a0
_G.CDOTATutorial.AddShopWhitelistItem function function: 0x001f09d0
_G.CDOTATutorial.CompleteQuest function function: 0x001f0750
_G.CDOTATutorial.CreateLocationTask function function: 0x001f06c0
_G.CDOTATutorial.EnableCreepAggroViz function function: 0x001f07a8
_G.CDOTATutorial.EnablePlayerOffscreenTip function function: 0x001f0a80
_G.CDOTATutorial.EnableTowerAggroViz function function: 0x001f0830
_G.CDOTATutorial.FDesc table table: 0x001f03f0
_G.CDOTATutorial.FDesc.AddBot userdata bool AddBot(string, string, string, bool)
Add a computer controlled bot.
_G.CDOTATutorial.FDesc.AddQuest userdata void AddQuest(string, int, string, string)
Add a quest to the quest log
_G.CDOTATutorial.FDesc.AddShopWhitelistItem userdata void AddShopWhitelistItem(string)
Add an item to the shop whitelist.
_G.CDOTATutorial.FDesc.CompleteQuest userdata void CompleteQuest(string)
Complete a quest,
_G.CDOTATutorial.FDesc.CreateLocationTask userdata void CreateLocationTask(Vector)
Add a task to move to a specific location
_G.CDOTATutorial.FDesc.EnableCreepAggroViz userdata void EnableCreepAggroViz(bool)
Alert the player when a creep becomes agro to their hero.
_G.CDOTATutorial.FDesc.EnablePlayerOffscreenTip userdata void EnablePlayerOffscreenTip(bool)
Enable the tip to alert players how to find their hero.
_G.CDOTATutorial.FDesc.EnableTowerAggroViz userdata void EnableTowerAggroViz(bool)
Alert the player when a tower becomes agro to their hero.
_G.CDOTATutorial.FDesc.FinishTutorial userdata void FinishTutorial()
End the tutorial.
_G.CDOTATutorial.FDesc.ForceGameStart userdata void ForceGameStart()
Force the start of the game.
_G.CDOTATutorial.FDesc.GetTimeFrozen userdata bool GetTimeFrozen()
Is our time frozen?
_G.CDOTATutorial.FDesc.IsItemInWhiteList userdata bool IsItemInWhiteList(string)
Is this item currently in the white list.
_G.CDOTATutorial.FDesc.RemoveShopWhitelistItem userdata void RemoveShopWhitelistItem(string)
Remove an item from the shop whitelist.
_G.CDOTATutorial.FDesc.SelectHero userdata void SelectHero(string)
Select a hero for the local player
_G.CDOTATutorial.FDesc.SelectPlayerTeam userdata void SelectPlayerTeam(string)
Select the team for the local player
_G.CDOTATutorial.FDesc.SetItemGuide userdata void SetItemGuide(string)
Set the current item guide.
_G.CDOTATutorial.FDesc.SetOrModifyPlayerGold userdata void SetOrModifyPlayerGold(int, bool)
Set gold amount for the tutorial player. (int) GoldAmount, (bool) true=Set, false=Modify
_G.CDOTATutorial.FDesc.SetQuickBuy userdata void SetQuickBuy(string)
Set players quick buy item.
_G.CDOTATutorial.FDesc.SetShopOpen userdata void SetShopOpen(bool)
Set the shop open or closed.
_G.CDOTATutorial.FDesc.SetTimeFrozen userdata void SetTimeFrozen(bool)
Set if we should freeze time or not.
_G.CDOTATutorial.FDesc.SetTutorialConvar userdata void SetTutorialConvar(string, string)
Set a tutorial convar
_G.CDOTATutorial.FDesc.SetTutorialUI userdata void SetTutorialUI(int)
Set the UI to use a reduced version to focus attention to specific elements.
_G.CDOTATutorial.FDesc.SetWhiteListEnabled userdata void SetWhiteListEnabled(bool)
Set if we should whitelist shop items.
_G.CDOTATutorial.FDesc.StartTutorialMode userdata void StartTutorialMode()
Initialize Tutorial Mode
_G.CDOTATutorial.FDesc.UpgradePlayerAbility userdata void UpgradePlayerAbility(string)
Upgrade a specific ability for the local hero
_G.CDOTATutorial.FinishTutorial function function: 0x001f0d48
_G.CDOTATutorial.ForceGameStart function function: 0x001f0cf0
_G.CDOTATutorial.GetTimeFrozen function function: 0x001f0e48
_G.CDOTATutorial.IsItemInWhiteList function function: 0x001f0b70
_G.CDOTATutorial.IsNull function function: 0x001f0390
_G.CDOTATutorial.RemoveShopWhitelistItem function function: 0x001f0b10
_G.CDOTATutorial.SelectHero function function: 0x001f0518
_G.CDOTATutorial.SelectPlayerTeam function function: 0x001f0418
_G.CDOTATutorial.SetItemGuide function function: 0x001f1500
_G.CDOTATutorial.SetOrModifyPlayerGold function function: 0x001f1600
_G.CDOTATutorial.SetQuickBuy function function: 0x001f1580
_G.CDOTATutorial.SetShopOpen function function: 0x001f0c48
_G.CDOTATutorial.SetTimeFrozen function function: 0x001f0dc8
_G.CDOTATutorial.SetTutorialConvar function function: 0x001f0620
_G.CDOTATutorial.SetTutorialUI function function: 0x001f0bc8
_G.CDOTATutorial.SetWhiteListEnabled function function: 0x001f0978
_G.CDOTATutorial.StartTutorialMode function function: 0x001f0898
_G.CDOTATutorial.UpgradePlayerAbility function function: 0x001f0598
_G.CDOTAVoteSystem table table: 0x001f1838
_G.CDOTAVoteSystem.FDesc table table: 0x001f18c0
_G.CDOTAVoteSystem.FDesc.StartVote userdata void StartVote(handle)
Starts a vote, based upon a table of parameters
_G.CDOTAVoteSystem.IsNull function function: 0x001f1860
_G.CDOTAVoteSystem.StartVote function function: 0x001f18e8
_G.CDOTA_Ability_Animation_Attack table table: 0x00198378
_G.CDOTA_Ability_Animation_Attack.FDesc table table: 0x00198400
_G.CDOTA_Ability_Animation_Attack.FDesc.SetPlaybackRate userdata void SetPlaybackRate(float flRate)
Override playbackrate
_G.CDOTA_Ability_Animation_Attack.IsNull function function: 0x001983a0
_G.CDOTA_Ability_Animation_Attack.SetPlaybackRate function function: 0x00198428
_G.CDOTA_Ability_Animation_TailSpin table table: 0x001985f8
_G.CDOTA_Ability_Animation_TailSpin.FDesc table table: 0x00198680
_G.CDOTA_Ability_Animation_TailSpin.FDesc.SetPlaybackRate userdata void SetPlaybackRate(float flRate)
Override playbackrate
_G.CDOTA_Ability_Animation_TailSpin.IsNull function function: 0x00198620
_G.CDOTA_Ability_Animation_TailSpin.SetPlaybackRate function function: 0x001986a8
_G.CDOTA_Ability_DataDriven table table: 0x001b2688
_G.CDOTA_Ability_DataDriven.ApplyDataDrivenModifier function function: 0x001b2738
_G.CDOTA_Ability_DataDriven.ApplyDataDrivenThinker function function: 0x001b2808
_G.CDOTA_Ability_DataDriven.FDesc table table: 0x001b2710
_G.CDOTA_Ability_DataDriven.FDesc.ApplyDataDrivenModifier userdata handle ApplyDataDrivenModifier(handle hCaster, handle hTarget, string pszModifierName, handle hModifierTable)
Applies a data driven modifier to the target
_G.CDOTA_Ability_DataDriven.FDesc.ApplyDataDrivenThinker userdata handle ApplyDataDrivenThinker(handle hCaster, Vector vLocation, string pszModifierName, handle hModifierTable)
Applies a data driven thinker at the location
_G.CDOTA_Ability_DataDriven.IsNull function function: 0x001b26b0
_G.CDOTA_Ability_Lua table table: 0x001b0568
_G.CDOTA_Ability_Lua.CastFilterResult function function: 0x001e1b18
_G.CDOTA_Ability_Lua.CastFilterResultLocation function function: 0x001b0950
_G.CDOTA_Ability_Lua.CastFilterResultTarget function function: 0x001b08f8
_G.CDOTA_Ability_Lua.CastFilterResult_Engine function function: 0x001b0d28
_G.CDOTA_Ability_Lua.FDesc table table: 0x001b05f0
_G.CDOTA_Ability_Lua.FDesc.CastFilterResult userdata int CastFilterResult()
Determine whether an issued command with no target is valid.
_G.CDOTA_Ability_Lua.FDesc.CastFilterResultLocation userdata int CastFilterResultLocation(Vector vLocation)
(Vector vLocation) Determine whether an issued command on a location is valid.
_G.CDOTA_Ability_Lua.FDesc.CastFilterResultTarget userdata int CastFilterResultTarget(handle hTarget)
(HSCRIPT hTarget) Determine whether an issued command on a target is valid.
_G.CDOTA_Ability_Lua.FDesc.GetAOERadius userdata float GetAOERadius()
Controls the size of the AOE casting cursor.
_G.CDOTA_Ability_Lua.FDesc.GetAssociatedPrimaryAbilities userdata string GetAssociatedPrimaryAbilities()
Returns abilities that are stolen simultaneously, or otherwise related in functionality.
_G.CDOTA_Ability_Lua.FDesc.GetAssociatedSecondaryAbilities userdata string GetAssociatedSecondaryAbilities()
Returns other abilities that are stolen simultaneously, or otherwise related in functionality.  Generally hidden abilities.
_G.CDOTA_Ability_Lua.FDesc.GetBehavior userdata int GetBehavior()
Return cast behavior type of this ability.
_G.CDOTA_Ability_Lua.FDesc.GetCastAnimation userdata int GetCastAnimation()
Return casting animation of this ability.
_G.CDOTA_Ability_Lua.FDesc.GetCastPoint userdata float GetCastPoint()
Return cast point of this ability.
_G.CDOTA_Ability_Lua.FDesc.GetCastRange userdata int GetCastRange(Vector vLocation, handle hTarget)
Return cast range of this ability.
_G.CDOTA_Ability_Lua.FDesc.GetChannelAnimation userdata int GetChannelAnimation()
Return channel animation of this ability.
_G.CDOTA_Ability_Lua.FDesc.GetChannelTime userdata float GetChannelTime()
Return the channel time of this ability.
_G.CDOTA_Ability_Lua.FDesc.GetChannelledManaCostPerSecond userdata int GetChannelledManaCostPerSecond(int iLevel)
Return mana cost at the given level per second while channeling (-1 is current).
_G.CDOTA_Ability_Lua.FDesc.GetConceptRecipientType userdata int GetConceptRecipientType()
Return who hears speech when this spell is cast.
_G.CDOTA_Ability_Lua.FDesc.GetCooldown userdata float GetCooldown(int iLevel)
Return cooldown of this ability.
_G.CDOTA_Ability_Lua.FDesc.GetCustomCastError userdata string GetCustomCastError()
Return the error string of a failed command with no target.
_G.CDOTA_Ability_Lua.FDesc.GetCustomCastErrorLocation userdata string GetCustomCastErrorLocation(Vector vLocation)
(Vector vLocation) Return the error string of a failed command on a location.
_G.CDOTA_Ability_Lua.FDesc.GetCustomCastErrorTarget userdata string GetCustomCastErrorTarget(handle hTarget)
(HSCRIPT hTarget) Return the error string of a failed command on a target.
_G.CDOTA_Ability_Lua.FDesc.GetGoldCost userdata int GetGoldCost(int iLevel)
Return gold cost at the given level (-1 is current).
_G.CDOTA_Ability_Lua.FDesc.GetIntrinsicModifierName userdata string GetIntrinsicModifierName()
Returns the name of the modifier applied passively by this ability.
_G.CDOTA_Ability_Lua.FDesc.GetManaCost userdata int GetManaCost(int iLevel)
Return mana cost at the given level (-1 is current).
_G.CDOTA_Ability_Lua.FDesc.GetPlaybackRateOverride userdata float GetPlaybackRateOverride()
Return the animation rate of the cast animation.
_G.CDOTA_Ability_Lua.FDesc.IsHiddenAbilityCastable userdata bool IsHiddenAbilityCastable()
Returns true if this ability can be used when not on the action panel.
_G.CDOTA_Ability_Lua.FDesc.IsHiddenWhenStolen userdata bool IsHiddenWhenStolen()
Returns true if this ability is hidden when stolen by Spell Steal.
_G.CDOTA_Ability_Lua.FDesc.IsRefreshable userdata bool IsRefreshable()
Returns true if this ability is refreshed by Refresher Orb.
_G.CDOTA_Ability_Lua.FDesc.IsStealable userdata bool IsStealable()
Returns true if this ability can be stolen by Spell Steal.
_G.CDOTA_Ability_Lua.FDesc.OnAbilityPhaseInterrupted userdata void OnAbilityPhaseInterrupted()
Cast time did not complete successfully.
_G.CDOTA_Ability_Lua.FDesc.OnAbilityPhaseStart userdata bool OnAbilityPhaseStart()
Cast time begins (return true for successful cast).
_G.CDOTA_Ability_Lua.FDesc.OnAbilityPinged userdata void OnAbilityPinged(int nPlayerID, bool bCtrlHeld)
The ability was pinged (nPlayerID, bCtrlHeld).
_G.CDOTA_Ability_Lua.FDesc.OnChannelFinish userdata void OnChannelFinish(bool bInterrupted)
(bool bInterrupted) Channel finished.
_G.CDOTA_Ability_Lua.FDesc.OnChannelThink userdata void OnChannelThink(float flInterval)
(float flInterval) Channeling is taking place.
_G.CDOTA_Ability_Lua.FDesc.OnHeroCalculateStatBonus userdata void OnHeroCalculateStatBonus()
Caster (hero only) gained a level, skilled an ability, or received a new stat bonus.
_G.CDOTA_Ability_Lua.FDesc.OnHeroDiedNearby userdata void OnHeroDiedNearby(handle unit, handle attacker, handle table)
A hero has died in the vicinity (ie Urn), takes table of params.
_G.CDOTA_Ability_Lua.FDesc.OnHeroLevelUp userdata void OnHeroLevelUp()
Caster gained a level.
_G.CDOTA_Ability_Lua.FDesc.OnInventoryContentsChanged userdata void OnInventoryContentsChanged()
Caster inventory changed.
_G.CDOTA_Ability_Lua.FDesc.OnItemEquipped userdata void OnItemEquipped(handle hItem)
( HSCRIPT hItem ) Caster equipped item.
_G.CDOTA_Ability_Lua.FDesc.OnOwnerDied userdata void OnOwnerDied()
Caster died.
_G.CDOTA_Ability_Lua.FDesc.OnOwnerSpawned userdata void OnOwnerSpawned()
Caster respawned or spawned for the first time.
_G.CDOTA_Ability_Lua.FDesc.OnProjectileHit userdata bool OnProjectileHit(handle hTarget, Vector vLocation)
(HSCRIPT hTarget, Vector vLocation) Projectile has collided with a given target or reached its destination (target is invalid).
_G.CDOTA_Ability_Lua.FDesc.OnProjectileHitHandle userdata bool OnProjectileHitHandle(handle hTarget, Vector vLocation, int iProjectileHandle)
(HSCRIPT hTarget, Vector vLocation, int nHandle) Projectile has collided with a given target or reached its destination (target is invalid).
_G.CDOTA_Ability_Lua.FDesc.OnProjectileHit_ExtraData userdata bool OnProjectileHit_ExtraData(handle hTarget, Vector vLocation, handle table)
(HSCRIPT hTarget, Vector vLocation, table kv) Projectile has collided with a given target or reached its destination (target is invalid).
_G.CDOTA_Ability_Lua.FDesc.OnProjectileThink userdata void OnProjectileThink(Vector vLocation)
(Vector vLocation) Projectile is actively moving.
_G.CDOTA_Ability_Lua.FDesc.OnProjectileThinkHandle userdata void OnProjectileThinkHandle(int iProjectileHandle)
(int nProjectileHandle) Projectile is actively moving.
_G.CDOTA_Ability_Lua.FDesc.OnProjectileThink_ExtraData userdata void OnProjectileThink_ExtraData(Vector vLocation, handle table)
(Vector vLocation, table kv ) Projectile is actively moving.
_G.CDOTA_Ability_Lua.FDesc.OnSpellStart userdata void OnSpellStart()
Cast time finished, spell effects begin.
_G.CDOTA_Ability_Lua.FDesc.OnStolen userdata void OnStolen(handle hSourceAbility)
( HSCRIPT hAbility ) Special behavior when stolen by Spell Steal.
_G.CDOTA_Ability_Lua.FDesc.OnToggle userdata void OnToggle()
Ability is toggled on/off.
_G.CDOTA_Ability_Lua.FDesc.OnUnStolen userdata void OnUnStolen()
Special behavior when lost by Spell Steal.
_G.CDOTA_Ability_Lua.FDesc.OnUpgrade userdata void OnUpgrade()
Ability gained a level.
_G.CDOTA_Ability_Lua.FDesc.ProcsMagicStick userdata bool ProcsMagicStick()
Returns true if this ability will generate magic stick charges for nearby enemies.
_G.CDOTA_Ability_Lua.FDesc.ResetToggleOnRespawn userdata bool ResetToggleOnRespawn()
Returns true if this ability should return to the default toggle state when its parent respawns.
_G.CDOTA_Ability_Lua.FDesc.SpeakTrigger userdata int SpeakTrigger()
Return the type of speech used.
_G.CDOTA_Ability_Lua.GetAOERadius function function: 0x001b0618
_G.CDOTA_Ability_Lua.GetAssociatedPrimaryAbilities function function: 0x001b1200
_G.CDOTA_Ability_Lua.GetAssociatedSecondaryAbilities function function: 0x001b1258
_G.CDOTA_Ability_Lua.GetBehavior function function: 0x001b06e8
_G.CDOTA_Ability_Lua.GetCastAnimation function function: 0x001b10f0
_G.CDOTA_Ability_Lua.GetCastPoint function function: 0x001b0740
_G.CDOTA_Ability_Lua.GetCastRange function function: 0x001b0670
_G.CDOTA_Ability_Lua.GetChannelAnimation function function: 0x001b1178
_G.CDOTA_Ability_Lua.GetChannelTime function function: 0x001b0838
_G.CDOTA_Ability_Lua.GetChannelledManaCostPerSecond function function: 0x001b09c0
_G.CDOTA_Ability_Lua.GetConceptRecipientType function function: 0x001b2488
_G.CDOTA_Ability_Lua.GetCooldown function function: 0x001b07f0
_G.CDOTA_Ability_Lua.GetCustomCastError function function: 0x001e1b38
_G.CDOTA_Ability_Lua.GetCustomCastErrorLocation function function: 0x001b0dd8
_G.CDOTA_Ability_Lua.GetCustomCastErrorTarget function function: 0x001b0d80
_G.CDOTA_Ability_Lua.GetCustomCastError_Engine function function: 0x001b0e30
_G.CDOTA_Ability_Lua.GetGoldCost function function: 0x001b0798
_G.CDOTA_Ability_Lua.GetIntrinsicModifierName function function: 0x001b12b0
_G.CDOTA_Ability_Lua.GetManaCost function function: 0x001b08a0
_G.CDOTA_Ability_Lua.GetPlaybackRateOverride function function: 0x001b2538
_G.CDOTA_Ability_Lua.IsHiddenAbilityCastable function function: 0x001b1410
_G.CDOTA_Ability_Lua.IsHiddenWhenStolen function function: 0x001b1360
_G.CDOTA_Ability_Lua.IsNull function function: 0x001b0590
_G.CDOTA_Ability_Lua.IsRefreshable function function: 0x001b13b8
_G.CDOTA_Ability_Lua.IsStealable function function: 0x001b1308
_G.CDOTA_Ability_Lua.OnAbilityPhaseInterrupted function function: 0x001b0b20
_G.CDOTA_Ability_Lua.OnAbilityPhaseStart function function: 0x001b0ac8
_G.CDOTA_Ability_Lua.OnAbilityPinged function function: 0x001b1098
_G.CDOTA_Ability_Lua.OnChannelFinish function function: 0x001b0bf8
_G.CDOTA_Ability_Lua.OnChannelThink function function: 0x001b0ba0
_G.CDOTA_Ability_Lua.OnHeroCalculateStatBonus function function: 0x001b0f38
_G.CDOTA_Ability_Lua.OnHeroDiedNearby function function: 0x001b1040
_G.CDOTA_Ability_Lua.OnHeroLevelUp function function: 0x001b1798
_G.CDOTA_Ability_Lua.OnInventoryContentsChanged function function: 0x001b0e88
_G.CDOTA_Ability_Lua.OnItemEquipped function function: 0x001b0ee0
_G.CDOTA_Ability_Lua.OnOwnerDied function function: 0x001b16e8
_G.CDOTA_Ability_Lua.OnOwnerSpawned function function: 0x001b1690
_G.CDOTA_Ability_Lua.OnProjectileHit function function: 0x001b0c50
_G.CDOTA_Ability_Lua.OnProjectileHitHandle function function: 0x001b1498
_G.CDOTA_Ability_Lua.OnProjectileHit_ExtraData function function: 0x001b0ca8
_G.CDOTA_Ability_Lua.OnProjectileThink function function: 0x001b1520
_G.CDOTA_Ability_Lua.OnProjectileThinkHandle function function: 0x001b1578
_G.CDOTA_Ability_Lua.OnProjectileThink_ExtraData function function: 0x001b1600
_G.CDOTA_Ability_Lua.OnSpellStart function function: 0x001b0a70
_G.CDOTA_Ability_Lua.OnStolen function function: 0x001b0f90
_G.CDOTA_Ability_Lua.OnToggle function function: 0x001b0a18
_G.CDOTA_Ability_Lua.OnUnStolen function function: 0x001b0fe8
_G.CDOTA_Ability_Lua.OnUpgrade function function: 0x001b1740
_G.CDOTA_Ability_Lua.ProcsMagicStick function function: 0x001b23d8
_G.CDOTA_Ability_Lua.ResetToggleOnRespawn function function: 0x001b2430
_G.CDOTA_Ability_Lua.SpeakTrigger function function: 0x001b24e0
_G.CDOTA_Ability_Nian_Dive table table: 0x001453b0
_G.CDOTA_Ability_Nian_Dive.FDesc table table: 0x00145438
_G.CDOTA_Ability_Nian_Dive.FDesc.SetPlaybackRate userdata void SetPlaybackRate(float flRate)
Override playbackrate
_G.CDOTA_Ability_Nian_Dive.IsNull function function: 0x001453d8
_G.CDOTA_Ability_Nian_Dive.SetPlaybackRate function function: 0x00145a68
_G.CDOTA_Ability_Nian_Leap table table: 0x001980d8
_G.CDOTA_Ability_Nian_Leap.FDesc table table: 0x00198160
_G.CDOTA_Ability_Nian_Leap.FDesc.SetPlaybackRate userdata void SetPlaybackRate(float flRate)
Override playbackrate
_G.CDOTA_Ability_Nian_Leap.IsNull function function: 0x00198100
_G.CDOTA_Ability_Nian_Leap.SetPlaybackRate function function: 0x00198188
_G.CDOTA_Ability_Nian_Roar table table: 0x00145128
_G.CDOTA_Ability_Nian_Roar.FDesc table table: 0x001451b0
_G.CDOTA_Ability_Nian_Roar.FDesc.GetCastCount userdata int GetCastCount()
Number of times Nian has used the roar
_G.CDOTA_Ability_Nian_Roar.GetCastCount function function: 0x001451d8
_G.CDOTA_Ability_Nian_Roar.IsNull function function: 0x00145150
_G.CDOTA_BaseNPC table table: 0x00183c30
_G.CDOTA_BaseNPC.AddAbility function function: 0x00185fc0
_G.CDOTA_BaseNPC.AddActivityModifier function function: 0x00187250
_G.CDOTA_BaseNPC.AddItem function function: 0x00185f68
_G.CDOTA_BaseNPC.AddItemByName function function: 0x00185ee8
_G.CDOTA_BaseNPC.AddNewModifier function function: 0x00189888
_G.CDOTA_BaseNPC.AddNoDraw function function: 0x0018a8b8
_G.CDOTA_BaseNPC.AddSpeechBubble function function: 0x0018a438
_G.CDOTA_BaseNPC.AlertNearbyUnits function function: 0x0018e948
_G.CDOTA_BaseNPC.AngerNearbyUnits function function: 0x0018a7d8
_G.CDOTA_BaseNPC.AttackNoEarlierThan function function: 0x0018e420
_G.CDOTA_BaseNPC.AttackReady function function: 0x0018e3a0
_G.CDOTA_BaseNPC.BoundingRadius2D function function: 0x0018a190
_G.CDOTA_BaseNPC.CanEntityBeSeenByMyTeam function function: 0x00188180
_G.CDOTA_BaseNPC.CanSellItems function function: 0x00184d58
_G.CDOTA_BaseNPC.CastAbilityImmediately function function: 0x00187d48
_G.CDOTA_BaseNPC.CastAbilityNoTarget function function: 0x00187c38
_G.CDOTA_BaseNPC.CastAbilityOnPosition function function: 0x00187b28
_G.CDOTA_BaseNPC.CastAbilityOnTarget function function: 0x00187bb0
_G.CDOTA_BaseNPC.CastAbilityToggle function function: 0x00187cc0
_G.CDOTA_BaseNPC.ClearActivityModifiers function function: 0x001871c8
_G.CDOTA_BaseNPC.DestroyAllSpeechBubbles function function: 0x0018a4b8
_G.CDOTA_BaseNPC.DisassembleItem function function: 0x00184ad0
_G.CDOTA_BaseNPC.DropItemAtPosition function function: 0x00184838
_G.CDOTA_BaseNPC.DropItemAtPositionImmediate function function: 0x00189ee8
_G.CDOTA_BaseNPC.EjectItemFromStash function function: 0x00184b50
_G.CDOTA_BaseNPC.FDesc table table: 0x00183cb8
_G.CDOTA_BaseNPC.FDesc.AddAbility userdata handle AddAbility(string pszAbilityName)
Add an ability to this unit by name.
_G.CDOTA_BaseNPC.FDesc.AddActivityModifier userdata void AddActivityModifier(string szName)
Add an activity modifier that affects future StartGesture calls
_G.CDOTA_BaseNPC.FDesc.AddItem userdata handle AddItem(handle hItem)
Add an item to this unit's inventory.
_G.CDOTA_BaseNPC.FDesc.AddItemByName userdata handle AddItemByName(string pszItemName)
Add an item to this unit's inventory.
_G.CDOTA_BaseNPC.FDesc.AddNewModifier userdata handle AddNewModifier(handle hCaster, handle hAbility, string pszScriptName, handle hModifierTable)
Add a modifier to this unit.
_G.CDOTA_BaseNPC.FDesc.AddNoDraw userdata void AddNoDraw()
Adds the no draw flag.
_G.CDOTA_BaseNPC.FDesc.AddSpeechBubble userdata void AddSpeechBubble(int iBubble, string pszSpeech, float flDuration, unsigned unOffsetX, unsigned unOffsetY)
Add a speech bubble(1-4 live at a time) to this NPC.
_G.CDOTA_BaseNPC.FDesc.AlertNearbyUnits userdata void AlertNearbyUnits(handle hAttacker, handle hAbility)

_G.CDOTA_BaseNPC.FDesc.AngerNearbyUnits userdata void AngerNearbyUnits()

_G.CDOTA_BaseNPC.FDesc.AttackNoEarlierThan userdata void AttackNoEarlierThan(float flTime)

_G.CDOTA_BaseNPC.FDesc.AttackReady userdata bool AttackReady()

_G.CDOTA_BaseNPC.FDesc.BoundingRadius2D userdata float BoundingRadius2D()

_G.CDOTA_BaseNPC.FDesc.CanEntityBeSeenByMyTeam userdata bool CanEntityBeSeenByMyTeam(handle hEntity)
Check FoW to see if an entity is visible.
_G.CDOTA_BaseNPC.FDesc.CanSellItems userdata bool CanSellItems()
Query if this unit can sell items.
_G.CDOTA_BaseNPC.FDesc.CastAbilityImmediately userdata void CastAbilityImmediately(handle hAbility, int iPlayerIndex)
Cast an ability immediately.
_G.CDOTA_BaseNPC.FDesc.CastAbilityNoTarget userdata void CastAbilityNoTarget(handle hAbility, int iPlayerIndex)
Cast an ability with no target.
_G.CDOTA_BaseNPC.FDesc.CastAbilityOnPosition userdata void CastAbilityOnPosition(Vector vPosition, handle hAbility, int iPlayerIndex)
Cast an ability on a position.
_G.CDOTA_BaseNPC.FDesc.CastAbilityOnTarget userdata void CastAbilityOnTarget(handle hTarget, handle hAbility, int iPlayerIndex)
Cast an ability on a target entity.
_G.CDOTA_BaseNPC.FDesc.CastAbilityToggle userdata void CastAbilityToggle(handle hAbility, int iPlayerIndex)
Toggle an ability.
_G.CDOTA_BaseNPC.FDesc.ClearActivityModifiers userdata void ClearActivityModifiers()
Clear Activity modifiers
_G.CDOTA_BaseNPC.FDesc.DestroyAllSpeechBubbles userdata void DestroyAllSpeechBubbles()

_G.CDOTA_BaseNPC.FDesc.DisassembleItem userdata void DisassembleItem(handle hItem)
Disassemble the passed item in this unit's inventory.
_G.CDOTA_BaseNPC.FDesc.DropItemAtPosition userdata void DropItemAtPosition(Vector vDest, handle hItem)
Drop an item at a given point.
_G.CDOTA_BaseNPC.FDesc.DropItemAtPositionImmediate userdata void DropItemAtPositionImmediate(handle hItem, Vector vPosition)
Immediately drop a carried item at a given position.
_G.CDOTA_BaseNPC.FDesc.EjectItemFromStash userdata void EjectItemFromStash(handle hItem)
Drops the selected item out of this unit's stash.
_G.CDOTA_BaseNPC.FDesc.FaceTowards userdata void FaceTowards(Vector vTarget)
This unit will be set to face the target point.
_G.CDOTA_BaseNPC.FDesc.FadeGesture userdata void FadeGesture(int nActivity)
Fade and remove the given gesture activity.
_G.CDOTA_BaseNPC.FDesc.FindAbilityByName userdata handle FindAbilityByName(string pAbilityName)
Retrieve an ability by name from the unit.
_G.CDOTA_BaseNPC.FDesc.FindAllModifiers userdata table FindAllModifiers()
Returns a table of all of the modifiers on the NPC.
_G.CDOTA_BaseNPC.FDesc.FindAllModifiersByName userdata table FindAllModifiersByName(string pszScriptName)
Returns a table of all of the modifiers on the NPC with the passed name (modifierName)
_G.CDOTA_BaseNPC.FDesc.FindItemInInventory userdata handle FindItemInInventory(string pszItemName)
Get handle to first item in inventory, else nil.
_G.CDOTA_BaseNPC.FDesc.FindModifierByName userdata handle FindModifierByName(string pszScriptName)
Return a handle to the modifier of the given name if found, else nil (string Name )
_G.CDOTA_BaseNPC.FDesc.FindModifierByNameAndCaster userdata handle FindModifierByNameAndCaster(string pszScriptName, handle hCaster)
Return a handle to the modifier of the given name from the passed caster if found, else nil ( string Name, hCaster )
_G.CDOTA_BaseNPC.FDesc.ForceKill userdata void ForceKill(bool bReincarnate)
Kill this unit immediately.
_G.CDOTA_BaseNPC.FDesc.ForcePlayActivityOnce userdata void ForcePlayActivityOnce(int nActivity)
Play an activity once, and then go back to idle.
_G.CDOTA_BaseNPC.FDesc.GetAbilityByIndex userdata handle GetAbilityByIndex(int iIndex)
Retrieve an ability by index from the unit.
_G.CDOTA_BaseNPC.FDesc.GetAbilityCount userdata int GetAbilityCount()

_G.CDOTA_BaseNPC.FDesc.GetAcquisitionRange userdata float GetAcquisitionRange()
Gets the range at which this unit will auto-acquire.
_G.CDOTA_BaseNPC.FDesc.GetAdditionalBattleMusicWeight userdata float GetAdditionalBattleMusicWeight()
Combat involving this creature will have this weight added to the music calcuations.
_G.CDOTA_BaseNPC.FDesc.GetAggroTarget userdata handle GetAggroTarget()
Returns this unit's aggro target.
_G.CDOTA_BaseNPC.FDesc.GetAttackAnimationPoint userdata float GetAttackAnimationPoint()

_G.CDOTA_BaseNPC.FDesc.GetAttackCapability userdata int GetAttackCapability()

_G.CDOTA_BaseNPC.FDesc.GetAttackDamage userdata int GetAttackDamage()
Returns a random integer between the minimum and maximum base damage of the unit.
_G.CDOTA_BaseNPC.FDesc.GetAttackRangeBuffer userdata float GetAttackRangeBuffer()
Gets the attack range buffer.
_G.CDOTA_BaseNPC.FDesc.GetAttackSpeed userdata float GetAttackSpeed()

_G.CDOTA_BaseNPC.FDesc.GetAttackTarget userdata handle GetAttackTarget()

_G.CDOTA_BaseNPC.FDesc.GetAttacksPerSecond userdata float GetAttacksPerSecond()

_G.CDOTA_BaseNPC.FDesc.GetAverageTrueAttackDamage userdata int GetAverageTrueAttackDamage(handle hTarget)
Returns the average value of the minimum and maximum damage values.
_G.CDOTA_BaseNPC.FDesc.GetBaseAttackRange userdata int GetBaseAttackRange()

_G.CDOTA_BaseNPC.FDesc.GetBaseAttackTime userdata float GetBaseAttackTime()

_G.CDOTA_BaseNPC.FDesc.GetBaseDamageMax userdata int GetBaseDamageMax()
Get the maximum attack damage of this unit.
_G.CDOTA_BaseNPC.FDesc.GetBaseDamageMin userdata int GetBaseDamageMin()
Get the minimum attack damage of this unit.
_G.CDOTA_BaseNPC.FDesc.GetBaseDayTimeVisionRange userdata int GetBaseDayTimeVisionRange()
Returns the vision range before modifiers.
_G.CDOTA_BaseNPC.FDesc.GetBaseHealthRegen userdata float GetBaseHealthRegen()

_G.CDOTA_BaseNPC.FDesc.GetBaseMagicalResistanceValue userdata float GetBaseMagicalResistanceValue()
Returns base magical armor value.
_G.CDOTA_BaseNPC.FDesc.GetBaseMaxHealth userdata float GetBaseMaxHealth()
Gets the base max health value.
_G.CDOTA_BaseNPC.FDesc.GetBaseMoveSpeed userdata float GetBaseMoveSpeed()

_G.CDOTA_BaseNPC.FDesc.GetBaseNightTimeVisionRange userdata int GetBaseNightTimeVisionRange()
Returns the vision range after modifiers.
_G.CDOTA_BaseNPC.FDesc.GetBonusManaRegen userdata float GetBonusManaRegen()
This Mana regen is derived from constant bonuses like Basilius.
_G.CDOTA_BaseNPC.FDesc.GetCastPoint userdata float GetCastPoint(bool bAttack)

_G.CDOTA_BaseNPC.FDesc.GetCastRangeBonus userdata float GetCastRangeBonus()

_G.CDOTA_BaseNPC.FDesc.GetCloneSource userdata handle GetCloneSource()
Get clone source (Meepo Prime, if this is a Meepo)
_G.CDOTA_BaseNPC.FDesc.GetCollisionPadding userdata float GetCollisionPadding()
Returns the size of the collision padding around the hull.
_G.CDOTA_BaseNPC.FDesc.GetCooldownReduction userdata float GetCooldownReduction()

_G.CDOTA_BaseNPC.FDesc.GetCreationTime userdata float GetCreationTime()

_G.CDOTA_BaseNPC.FDesc.GetCurrentActiveAbility userdata handle GetCurrentActiveAbility()
Get the ability this unit is currently casting.
_G.CDOTA_BaseNPC.FDesc.GetCurrentVisionRange userdata int GetCurrentVisionRange()
Gets the current vision range.
_G.CDOTA_BaseNPC.FDesc.GetCursorCastTarget userdata handle GetCursorCastTarget()

_G.CDOTA_BaseNPC.FDesc.GetCursorPosition userdata Vector GetCursorPosition()

_G.CDOTA_BaseNPC.FDesc.GetCursorTargetingNothing userdata bool GetCursorTargetingNothing()

_G.CDOTA_BaseNPC.FDesc.GetDayTimeVisionRange userdata int GetDayTimeVisionRange()
Returns the vision range after modifiers.
_G.CDOTA_BaseNPC.FDesc.GetDeathXP userdata int GetDeathXP()
Get the XP bounty on this unit.
_G.CDOTA_BaseNPC.FDesc.GetDisplayAttackSpeed userdata float GetDisplayAttackSpeed()
Attack speed expressed as constant value
_G.CDOTA_BaseNPC.FDesc.GetEvasion userdata float GetEvasion()

_G.CDOTA_BaseNPC.FDesc.GetForceAttackTarget userdata handle GetForceAttackTarget()

_G.CDOTA_BaseNPC.FDesc.GetGoldBounty userdata int GetGoldBounty()
Get the gold bounty on this unit.
_G.CDOTA_BaseNPC.FDesc.GetHasteFactor userdata float GetHasteFactor()

_G.CDOTA_BaseNPC.FDesc.GetHealthDeficit userdata int GetHealthDeficit()
Returns integer amount of health missing from max.
_G.CDOTA_BaseNPC.FDesc.GetHealthPercent userdata int GetHealthPercent()
Get the current health percent of the unit.
_G.CDOTA_BaseNPC.FDesc.GetHealthRegen userdata float GetHealthRegen()

_G.CDOTA_BaseNPC.FDesc.GetHullRadius userdata float GetHullRadius()
Get the collision hull radius of this NPC.
_G.CDOTA_BaseNPC.FDesc.GetIdealSpeed userdata float GetIdealSpeed()
Returns speed after all modifiers.
_G.CDOTA_BaseNPC.FDesc.GetIdealSpeedNoSlows userdata float GetIdealSpeedNoSlows()
Returns speed after all modifiers, but excluding those that reduce speed.
_G.CDOTA_BaseNPC.FDesc.GetIncreasedAttackSpeed userdata float GetIncreasedAttackSpeed()

_G.CDOTA_BaseNPC.FDesc.GetInitialGoalEntity userdata handle GetInitialGoalEntity()
Returns the initial waypoint goal for this NPC.
_G.CDOTA_BaseNPC.FDesc.GetInitialGoalPosition userdata Vector GetInitialGoalPosition()
Get waypoint position for this NPC.
_G.CDOTA_BaseNPC.FDesc.GetItemInSlot userdata handle GetItemInSlot(int i)
Returns nth item in inventory slot (index is zero based).
_G.CDOTA_BaseNPC.FDesc.GetLastAttackTime userdata float GetLastAttackTime()

_G.CDOTA_BaseNPC.FDesc.GetLastDamageTime userdata float GetLastDamageTime()
Get the last time this NPC took damage
_G.CDOTA_BaseNPC.FDesc.GetLastIdleChangeTime userdata float GetLastIdleChangeTime()
Get the last game time that this unit switched to/from idle state.
_G.CDOTA_BaseNPC.FDesc.GetLevel userdata int GetLevel()
Returns the level of this unit.
_G.CDOTA_BaseNPC.FDesc.GetMagicalArmorValue userdata float GetMagicalArmorValue()
Returns current magical armor value.
_G.CDOTA_BaseNPC.FDesc.GetMainControllingPlayer userdata int GetMainControllingPlayer()
Returns the player ID of the controlling player.
_G.CDOTA_BaseNPC.FDesc.GetMana userdata float GetMana()
Get the mana on this unit.
_G.CDOTA_BaseNPC.FDesc.GetManaPercent userdata int GetManaPercent()
Get the percent of mana remaining.
_G.CDOTA_BaseNPC.FDesc.GetManaRegen userdata float GetManaRegen()

_G.CDOTA_BaseNPC.FDesc.GetMaxMana userdata float GetMaxMana()
Get the maximum mana of this unit.
_G.CDOTA_BaseNPC.FDesc.GetMaximumGoldBounty userdata int GetMaximumGoldBounty()
Get the maximum gold bounty for this unit.
_G.CDOTA_BaseNPC.FDesc.GetMinimumGoldBounty userdata int GetMinimumGoldBounty()
Get the minimum gold bounty for this unit.
_G.CDOTA_BaseNPC.FDesc.GetModelRadius userdata float GetModelRadius()

_G.CDOTA_BaseNPC.FDesc.GetModifierCount userdata int GetModifierCount()
How many modifiers does this unit have?
_G.CDOTA_BaseNPC.FDesc.GetModifierNameByIndex userdata string GetModifierNameByIndex(int nIndex)
Get a modifier name by index.
_G.CDOTA_BaseNPC.FDesc.GetModifierStackCount userdata int GetModifierStackCount(string pszScriptName, handle hCaster)
Gets the stack count of a given modifier.
_G.CDOTA_BaseNPC.FDesc.GetMoveSpeedModifier userdata float GetMoveSpeedModifier(float flBaseSpeed, bool bReturnUnslowed)

_G.CDOTA_BaseNPC.FDesc.GetMustReachEachGoalEntity userdata bool GetMustReachEachGoalEntity()
Set whether this NPC is required to reach each goal entity, rather than being allowed to unkink their path.
_G.CDOTA_BaseNPC.FDesc.GetNeverMoveToClearSpace userdata bool GetNeverMoveToClearSpace()
If set to true, we will never attempt to move this unit to clear space, even when it unphases.
_G.CDOTA_BaseNPC.FDesc.GetNightTimeVisionRange userdata int GetNightTimeVisionRange()
Returns the vision range after modifiers.
_G.CDOTA_BaseNPC.FDesc.GetOpposingTeamNumber userdata int GetOpposingTeamNumber()

_G.CDOTA_BaseNPC.FDesc.GetPaddedCollisionRadius userdata float GetPaddedCollisionRadius()
Get the collision hull radius (including padding) of this NPC.
_G.CDOTA_BaseNPC.FDesc.GetPhysicalArmorBaseValue userdata float GetPhysicalArmorBaseValue()
Returns base physical armor value.
_G.CDOTA_BaseNPC.FDesc.GetPhysicalArmorValue userdata float GetPhysicalArmorValue(bool bIgnoreBase)
Returns current physical armor value.
_G.CDOTA_BaseNPC.FDesc.GetPlayerOwner userdata handle GetPlayerOwner()
Returns the player that owns this unit.
_G.CDOTA_BaseNPC.FDesc.GetPlayerOwnerID userdata int GetPlayerOwnerID()
Get the owner player ID for this unit.
_G.CDOTA_BaseNPC.FDesc.GetProjectileSpeed userdata int GetProjectileSpeed()

_G.CDOTA_BaseNPC.FDesc.GetRangeToUnit userdata float GetRangeToUnit(handle hNPC)

_G.CDOTA_BaseNPC.FDesc.GetRangedProjectileName userdata string GetRangedProjectileName()

_G.CDOTA_BaseNPC.FDesc.GetSecondsPerAttack userdata float GetSecondsPerAttack()

_G.CDOTA_BaseNPC.FDesc.GetSpellAmplification userdata float GetSpellAmplification(bool bBaseOnly)

_G.CDOTA_BaseNPC.FDesc.GetStatusResistance userdata float GetStatusResistance()

_G.CDOTA_BaseNPC.FDesc.GetTotalPurchasedUpgradeGoldCost userdata int GetTotalPurchasedUpgradeGoldCost()
Get how much gold has been spent on ability upgrades.
_G.CDOTA_BaseNPC.FDesc.GetUnitLabel userdata string GetUnitLabel()

_G.CDOTA_BaseNPC.FDesc.GetUnitName userdata string GetUnitName()
Get the name of this unit.
_G.CDOTA_BaseNPC.FDesc.GiveMana userdata void GiveMana(float flMana)
Give mana to this unit, this can be used for mana gained by abilities or item usage.
_G.CDOTA_BaseNPC.FDesc.HasAbility userdata bool HasAbility(string pszAbilityName)
See whether this unit has an ability by name.
_G.CDOTA_BaseNPC.FDesc.HasAnyActiveAbilities userdata bool HasAnyActiveAbilities()

_G.CDOTA_BaseNPC.FDesc.HasAttackCapability userdata bool HasAttackCapability()

_G.CDOTA_BaseNPC.FDesc.HasFlyMovementCapability userdata bool HasFlyMovementCapability()

_G.CDOTA_BaseNPC.FDesc.HasFlyingVision userdata bool HasFlyingVision()

_G.CDOTA_BaseNPC.FDesc.HasGroundMovementCapability userdata bool HasGroundMovementCapability()

_G.CDOTA_BaseNPC.FDesc.HasInventory userdata bool HasInventory()
Does this unit have an inventory.
_G.CDOTA_BaseNPC.FDesc.HasItemInInventory userdata bool HasItemInInventory(string pItemName)
See whether this unit has an item by name.
_G.CDOTA_BaseNPC.FDesc.HasModifier userdata bool HasModifier(string pszScriptName)
Sees if this unit has a given modifier.
_G.CDOTA_BaseNPC.FDesc.HasMovementCapability userdata bool HasMovementCapability()

_G.CDOTA_BaseNPC.FDesc.HasScepter userdata bool HasScepter()

_G.CDOTA_BaseNPC.FDesc.Heal userdata void Heal(float flAmount, handle hInflictor)
Heal this unit.
_G.CDOTA_BaseNPC.FDesc.Hold userdata void Hold()
Hold position.
_G.CDOTA_BaseNPC.FDesc.Interrupt userdata void Interrupt()

_G.CDOTA_BaseNPC.FDesc.InterruptChannel userdata void InterruptChannel()

_G.CDOTA_BaseNPC.FDesc.InterruptMotionControllers userdata void InterruptMotionControllers(bool bFindClearSpace)

_G.CDOTA_BaseNPC.FDesc.IsAlive userdata bool IsAlive()
Is this unit alive?
_G.CDOTA_BaseNPC.FDesc.IsAncient userdata bool IsAncient()
Is this unit an Ancient?
_G.CDOTA_BaseNPC.FDesc.IsAttackImmune userdata bool IsAttackImmune()

_G.CDOTA_BaseNPC.FDesc.IsAttacking userdata bool IsAttacking()

_G.CDOTA_BaseNPC.FDesc.IsAttackingEntity userdata bool IsAttackingEntity(handle hEntity)

_G.CDOTA_BaseNPC.FDesc.IsBarracks userdata bool IsBarracks()
Is this unit a Barracks?
_G.CDOTA_BaseNPC.FDesc.IsBlind userdata bool IsBlind()

_G.CDOTA_BaseNPC.FDesc.IsBlockDisabled userdata bool IsBlockDisabled()

_G.CDOTA_BaseNPC.FDesc.IsBoss userdata bool IsBoss()
Is this unit a boss?
_G.CDOTA_BaseNPC.FDesc.IsBuilding userdata bool IsBuilding()
Is this unit a building?
_G.CDOTA_BaseNPC.FDesc.IsChanneling userdata bool IsChanneling()
Is this unit currently channeling a spell?
_G.CDOTA_BaseNPC.FDesc.IsClone userdata bool IsClone()
Is this unit a clone? (Meepo)
_G.CDOTA_BaseNPC.FDesc.IsCommandRestricted userdata bool IsCommandRestricted()

_G.CDOTA_BaseNPC.FDesc.IsConsideredHero userdata bool IsConsideredHero()
Is this unit a considered a hero for targeting purposes?
_G.CDOTA_BaseNPC.FDesc.IsControllableByAnyPlayer userdata bool IsControllableByAnyPlayer()
Is this unit controlled by any non-bot player?
_G.CDOTA_BaseNPC.FDesc.IsCourier userdata bool IsCourier()
Is this unit a courier?
_G.CDOTA_BaseNPC.FDesc.IsCreature userdata bool IsCreature()
Is this a Creature type NPC?
_G.CDOTA_BaseNPC.FDesc.IsCreep userdata bool IsCreep()
Is this unit a creep?
_G.CDOTA_BaseNPC.FDesc.IsDeniable userdata bool IsDeniable()

_G.CDOTA_BaseNPC.FDesc.IsDisarmed userdata bool IsDisarmed()

_G.CDOTA_BaseNPC.FDesc.IsDominated userdata bool IsDominated()

_G.CDOTA_BaseNPC.FDesc.IsEvadeDisabled userdata bool IsEvadeDisabled()

_G.CDOTA_BaseNPC.FDesc.IsFort userdata bool IsFort()
Is this unit an Ancient?
_G.CDOTA_BaseNPC.FDesc.IsFrozen userdata bool IsFrozen()

_G.CDOTA_BaseNPC.FDesc.IsHero userdata bool IsHero()
Is this a hero or hero illusion?
_G.CDOTA_BaseNPC.FDesc.IsHexed userdata bool IsHexed()

_G.CDOTA_BaseNPC.FDesc.IsIdle userdata bool IsIdle()
Is this creature currently idle?
_G.CDOTA_BaseNPC.FDesc.IsIllusion userdata bool IsIllusion()

_G.CDOTA_BaseNPC.FDesc.IsInRangeOfShop userdata bool IsInRangeOfShop(int nShopType, bool bPhysical)
Ask whether this unit is in range of the specified shop ( DOTA_SHOP_TYPE shop, bool bMustBePhysicallyNear
_G.CDOTA_BaseNPC.FDesc.IsInvisible userdata bool IsInvisible()

_G.CDOTA_BaseNPC.FDesc.IsInvulnerable userdata bool IsInvulnerable()

_G.CDOTA_BaseNPC.FDesc.IsLowAttackPriority userdata bool IsLowAttackPriority()

_G.CDOTA_BaseNPC.FDesc.IsMagicImmune userdata bool IsMagicImmune()

_G.CDOTA_BaseNPC.FDesc.IsMovementImpaired userdata bool IsMovementImpaired()

_G.CDOTA_BaseNPC.FDesc.IsMoving userdata bool IsMoving()
Is this unit moving?
_G.CDOTA_BaseNPC.FDesc.IsMuted userdata bool IsMuted()

_G.CDOTA_BaseNPC.FDesc.IsNeutralUnitType userdata bool IsNeutralUnitType()
Is this a neutral?
_G.CDOTA_BaseNPC.FDesc.IsNightmared userdata bool IsNightmared()

_G.CDOTA_BaseNPC.FDesc.IsOpposingTeam userdata bool IsOpposingTeam(int nTeam)

_G.CDOTA_BaseNPC.FDesc.IsOther userdata bool IsOther()
Is this unit a ward-type unit?
_G.CDOTA_BaseNPC.FDesc.IsOutOfGame userdata bool IsOutOfGame()

_G.CDOTA_BaseNPC.FDesc.IsOwnedByAnyPlayer userdata bool IsOwnedByAnyPlayer()
Is this unit owned by any non-bot player?
_G.CDOTA_BaseNPC.FDesc.IsPhantom userdata bool IsPhantom()
Is this a phantom unit?
_G.CDOTA_BaseNPC.FDesc.IsPhantomBlocker userdata bool IsPhantomBlocker()

_G.CDOTA_BaseNPC.FDesc.IsPhased userdata bool IsPhased()

_G.CDOTA_BaseNPC.FDesc.IsPositionInRange userdata bool IsPositionInRange(Vector vPosition, float flRange)

_G.CDOTA_BaseNPC.FDesc.IsRangedAttacker userdata bool IsRangedAttacker()
Is this unit a ranged attacker?
_G.CDOTA_BaseNPC.FDesc.IsRealHero userdata bool IsRealHero()
Is this a real hero?
_G.CDOTA_BaseNPC.FDesc.IsRooted userdata bool IsRooted()

_G.CDOTA_BaseNPC.FDesc.IsShrine userdata bool IsShrine()
Is this a shrine?
_G.CDOTA_BaseNPC.FDesc.IsSilenced userdata bool IsSilenced()

_G.CDOTA_BaseNPC.FDesc.IsSpeciallyDeniable userdata bool IsSpeciallyDeniable()

_G.CDOTA_BaseNPC.FDesc.IsStunned userdata bool IsStunned()

_G.CDOTA_BaseNPC.FDesc.IsSummoned userdata bool IsSummoned()
Is this unit summoned?
_G.CDOTA_BaseNPC.FDesc.IsTempestDouble userdata bool IsTempestDouble()

_G.CDOTA_BaseNPC.FDesc.IsTower userdata bool IsTower()
Is this a tower?
_G.CDOTA_BaseNPC.FDesc.IsUnableToMiss userdata bool IsUnableToMiss()

_G.CDOTA_BaseNPC.FDesc.IsUnselectable userdata bool IsUnselectable()

_G.CDOTA_BaseNPC.FDesc.IsUntargetable userdata bool IsUntargetable()

_G.CDOTA_BaseNPC.FDesc.Kill userdata void Kill(handle hAbility, handle hAttacker)
Kills this NPC, with the params Ability and Attacker.
_G.CDOTA_BaseNPC.FDesc.MakeIllusion userdata void MakeIllusion()

_G.CDOTA_BaseNPC.FDesc.MakePhantomBlocker userdata void MakePhantomBlocker()

_G.CDOTA_BaseNPC.FDesc.MakeVisibleDueToAttack userdata void MakeVisibleDueToAttack(int iTeam, float flRadius)

_G.CDOTA_BaseNPC.FDesc.MakeVisibleToTeam userdata void MakeVisibleToTeam(int iTeam, float flDuration)

_G.CDOTA_BaseNPC.FDesc.ManageModelChanges userdata void ManageModelChanges()

_G.CDOTA_BaseNPC.FDesc.ModifyHealth userdata void ModifyHealth(int iDesiredHealthValue, handle hAbility, bool bLethal, int iAdditionalFlags)
Sets the health to a specific value, with optional flags or inflictors.
_G.CDOTA_BaseNPC.FDesc.MoveToNPC userdata void MoveToNPC(handle hNPC)
Move to follow a unit.
_G.CDOTA_BaseNPC.FDesc.MoveToNPCToGiveItem userdata void MoveToNPCToGiveItem(handle hNPC, handle hItem)
Give an item to another unit.
_G.CDOTA_BaseNPC.FDesc.MoveToPosition userdata void MoveToPosition(Vector vDest)
Issue a Move-To command.
_G.CDOTA_BaseNPC.FDesc.MoveToPositionAggressive userdata void MoveToPositionAggressive(Vector vDest)
Issue an Attack-Move-To command.
_G.CDOTA_BaseNPC.FDesc.MoveToTargetToAttack userdata void MoveToTargetToAttack(handle hTarget)
Move to a target to attack.
_G.CDOTA_BaseNPC.FDesc.NoHealthBar userdata bool NoHealthBar()

_G.CDOTA_BaseNPC.FDesc.NoTeamMoveTo userdata bool NoTeamMoveTo()

_G.CDOTA_BaseNPC.FDesc.NoTeamSelect userdata bool NoTeamSelect()

_G.CDOTA_BaseNPC.FDesc.NoUnitCollision userdata bool NoUnitCollision()

_G.CDOTA_BaseNPC.FDesc.NotOnMinimap userdata bool NotOnMinimap()

_G.CDOTA_BaseNPC.FDesc.NotOnMinimapForEnemies userdata bool NotOnMinimapForEnemies()

_G.CDOTA_BaseNPC.FDesc.NotifyWearablesOfModelChange userdata void NotifyWearablesOfModelChange(bool bOriginalModel)

_G.CDOTA_BaseNPC.FDesc.PassivesDisabled userdata bool PassivesDisabled()

_G.CDOTA_BaseNPC.FDesc.PatrolToPosition userdata void PatrolToPosition(Vector vDest)
Issue a Patrol-To command.
_G.CDOTA_BaseNPC.FDesc.PerformAttack userdata void PerformAttack(handle hTarget, bool bUseCastAttackOrb, bool bProcessProcs, bool bSkipCooldown, bool bIgnoreInvis, bool bUseProjectile, bool bFakeAttack, bool bNeverMiss)
Performs an attack on a target.
_G.CDOTA_BaseNPC.FDesc.PickupDroppedItem userdata void PickupDroppedItem(handle hItem)
Pick up a dropped item.
_G.CDOTA_BaseNPC.FDesc.PickupRune userdata void PickupRune(handle hItem)
Pick up a rune.
_G.CDOTA_BaseNPC.FDesc.PlayVCD userdata void PlayVCD(string pVCD)
Play a VCD on the NPC.
_G.CDOTA_BaseNPC.FDesc.ProvidesVision userdata bool ProvidesVision()

_G.CDOTA_BaseNPC.FDesc.Purge userdata void Purge(bool bRemovePositiveBuffs, bool bRemoveDebuffs, bool bFrameOnly, bool bRemoveStuns, bool bRemoveExceptions)
(bool RemovePositiveBuffs, bool RemoveDebuffs, bool BuffsCreatedThisFrameOnly, bool RemoveStuns, bool RemoveExceptions
_G.CDOTA_BaseNPC.FDesc.ReduceMana userdata void ReduceMana(float flAmount)
Remove mana from this unit, this can be used for involuntary mana loss, not for mana that is spent.
_G.CDOTA_BaseNPC.FDesc.RemoveAbility userdata void RemoveAbility(string pszAbilityName)
Remove an ability from this unit by name.
_G.CDOTA_BaseNPC.FDesc.RemoveAbilityByHandle userdata void RemoveAbilityByHandle(handle hAbility)
Remove the passed ability from this unit.
_G.CDOTA_BaseNPC.FDesc.RemoveGesture userdata void RemoveGesture(int nActivity)
Remove the given gesture activity.
_G.CDOTA_BaseNPC.FDesc.RemoveHorizontalMotionController userdata void RemoveHorizontalMotionController(handle hBuff)

_G.CDOTA_BaseNPC.FDesc.RemoveItem userdata void RemoveItem(handle hItem)
Removes the passed item from this unit's inventory and deletes it.
_G.CDOTA_BaseNPC.FDesc.RemoveModifierByName userdata void RemoveModifierByName(string pszScriptName)
Removes a modifier.
_G.CDOTA_BaseNPC.FDesc.RemoveModifierByNameAndCaster userdata void RemoveModifierByNameAndCaster(string pszScriptName, handle hCaster)
Removes a modifier that was cast by the given caster.
_G.CDOTA_BaseNPC.FDesc.RemoveNoDraw userdata void RemoveNoDraw()
Remove the no draw flag.
_G.CDOTA_BaseNPC.FDesc.RemoveVerticalMotionController userdata void RemoveVerticalMotionController(handle hBuff)

_G.CDOTA_BaseNPC.FDesc.RespawnUnit userdata void RespawnUnit()
Respawns the target unit if it can be respawned.
_G.CDOTA_BaseNPC.FDesc.Script_GetAttackRange userdata float Script_GetAttackRange()
Gets this unit's attack range after all modifiers.
_G.CDOTA_BaseNPC.FDesc.SellItem userdata void SellItem(handle hItem)
Sells the passed item in this unit's inventory.
_G.CDOTA_BaseNPC.FDesc.SetAbilityByIndex userdata void SetAbilityByIndex(handle hAbility, int iIndex)
Set the ability by index.
_G.CDOTA_BaseNPC.FDesc.SetAcquisitionRange userdata void SetAcquisitionRange(int nRange)

_G.CDOTA_BaseNPC.FDesc.SetAdditionalBattleMusicWeight userdata void SetAdditionalBattleMusicWeight(float flWeight)
Combat involving this creature will have this weight added to the music calcuations.
_G.CDOTA_BaseNPC.FDesc.SetAggroTarget userdata void SetAggroTarget(handle hAggroTarget)
Set this unit's aggro target to a specified unit.
_G.CDOTA_BaseNPC.FDesc.SetAttackCapability userdata void SetAttackCapability(int iAttackCapabilities)

_G.CDOTA_BaseNPC.FDesc.SetAttacking userdata void SetAttacking(handle hAttackTarget)

_G.CDOTA_BaseNPC.FDesc.SetBaseAttackTime userdata void SetBaseAttackTime(float flBaseAttackTime)

_G.CDOTA_BaseNPC.FDesc.SetBaseDamageMax userdata void SetBaseDamageMax(int nMax)
Sets the maximum base damage.
_G.CDOTA_BaseNPC.FDesc.SetBaseDamageMin userdata void SetBaseDamageMin(int nMin)
Sets the minimum base damage.
_G.CDOTA_BaseNPC.FDesc.SetBaseHealthRegen userdata void SetBaseHealthRegen(float flHealthRegen)

_G.CDOTA_BaseNPC.FDesc.SetBaseMagicalResistanceValue userdata void SetBaseMagicalResistanceValue(float flMagicalResistanceValue)
Sets base magical armor value.
_G.CDOTA_BaseNPC.FDesc.SetBaseManaRegen userdata void SetBaseManaRegen(float flManaRegen)

_G.CDOTA_BaseNPC.FDesc.SetBaseMaxHealth userdata void SetBaseMaxHealth(float flBaseMaxHealth)
Set a new base max health value.
_G.CDOTA_BaseNPC.FDesc.SetBaseMoveSpeed userdata void SetBaseMoveSpeed(int iMoveSpeed)

_G.CDOTA_BaseNPC.FDesc.SetCanSellItems userdata void SetCanSellItems(bool bCanSell)
Set whether or not this unit is allowed to sell items (bCanSellItems)
_G.CDOTA_BaseNPC.FDesc.SetControllableByPlayer userdata void SetControllableByPlayer(int iIndex, bool bSkipAdjustingPosition)
Set this unit controllable by the player with the passed ID.
_G.CDOTA_BaseNPC.FDesc.SetCursorCastTarget userdata void SetCursorCastTarget(handle hEntity)

_G.CDOTA_BaseNPC.FDesc.SetCursorPosition userdata void SetCursorPosition(Vector vLocation)

_G.CDOTA_BaseNPC.FDesc.SetCursorTargetingNothing userdata void SetCursorTargetingNothing(bool bTargetingNothing)

_G.CDOTA_BaseNPC.FDesc.SetCustomHealthLabel userdata void SetCustomHealthLabel(string pLabel, int r, int g, int b)

_G.CDOTA_BaseNPC.FDesc.SetDayTimeVisionRange userdata void SetDayTimeVisionRange(int iRange)
Set the base vision range.
_G.CDOTA_BaseNPC.FDesc.SetDeathXP userdata void SetDeathXP(int iXPBounty)
Set the XP bounty on this unit.
_G.CDOTA_BaseNPC.FDesc.SetForceAttackTarget userdata void SetForceAttackTarget(handle hNPC)

_G.CDOTA_BaseNPC.FDesc.SetForceAttackTargetAlly userdata void SetForceAttackTargetAlly(handle hNPC)

_G.CDOTA_BaseNPC.FDesc.SetHasInventory userdata void SetHasInventory(bool bHasInventory)
Set if this unit has an inventory.
_G.CDOTA_BaseNPC.FDesc.SetHullRadius userdata void SetHullRadius(float flHullRadius)
Set the collision hull radius of this NPC.
_G.CDOTA_BaseNPC.FDesc.SetIdleAcquire userdata void SetIdleAcquire(bool bIdleAcquire)

_G.CDOTA_BaseNPC.FDesc.SetInitialGoalEntity userdata void SetInitialGoalEntity(handle hGoal)
Sets the initial waypoint goal for this NPC.
_G.CDOTA_BaseNPC.FDesc.SetInitialGoalPosition userdata void SetInitialGoalPosition(Vector vPosition)
Set waypoint position for this NPC.
_G.CDOTA_BaseNPC.FDesc.SetMana userdata void SetMana(float flMana)
Set the mana on this unit.
_G.CDOTA_BaseNPC.FDesc.SetMaxMana userdata void SetMaxMana(float flMaxMana)
Set the maximum mana of this unit.
_G.CDOTA_BaseNPC.FDesc.SetMaximumGoldBounty userdata void SetMaximumGoldBounty(int iGoldBountyMax)
Set the maximum gold bounty for this unit.
_G.CDOTA_BaseNPC.FDesc.SetMinimumGoldBounty userdata void SetMinimumGoldBounty(int iGoldBountyMin)
Set the minimum gold bounty for this unit.
_G.CDOTA_BaseNPC.FDesc.SetModifierStackCount userdata void SetModifierStackCount(string pszScriptName, handle hCaster, int nStackCount)
Sets the stack count of a given modifier.
_G.CDOTA_BaseNPC.FDesc.SetMoveCapability userdata void SetMoveCapability(int iMoveCapabilities)

_G.CDOTA_BaseNPC.FDesc.SetMustReachEachGoalEntity userdata void SetMustReachEachGoalEntity(bool must)
Set whether this NPC is required to reach each goal entity, rather than being allowed to unkink their path.
_G.CDOTA_BaseNPC.FDesc.SetNeverMoveToClearSpace userdata void SetNeverMoveToClearSpace(bool neverMoveToClearSpace)
If set to true, we will never attempt to move this unit to clear space, even when it unphases.
_G.CDOTA_BaseNPC.FDesc.SetNightTimeVisionRange userdata void SetNightTimeVisionRange(int iRange)
Returns the vision range after modifiers.
_G.CDOTA_BaseNPC.FDesc.SetOrigin userdata void SetOrigin(Vector vLocation)
Set the unit's origin.
_G.CDOTA_BaseNPC.FDesc.SetOriginalModel userdata void SetOriginalModel(string pszModelName)
Sets the original model of this entity, which it will tend to fall back to anytime its state changes.
_G.CDOTA_BaseNPC.FDesc.SetPhysicalArmorBaseValue userdata void SetPhysicalArmorBaseValue(float flPhysicalArmorValue)
Sets base physical armor value.
_G.CDOTA_BaseNPC.FDesc.SetRangedProjectileName userdata void SetRangedProjectileName(string pProjectileName)

_G.CDOTA_BaseNPC.FDesc.SetRevealRadius userdata void SetRevealRadius(float revealRadius)
sets the client side map reveal radius for this unit
_G.CDOTA_BaseNPC.FDesc.SetShouldDoFlyHeightVisual userdata void SetShouldDoFlyHeightVisual(bool bShouldVisuallyFly)

_G.CDOTA_BaseNPC.FDesc.SetStolenScepter userdata void SetStolenScepter(bool bStolenScepter)

_G.CDOTA_BaseNPC.FDesc.SetUnitCanRespawn userdata void SetUnitCanRespawn(bool bCanRespawn)

_G.CDOTA_BaseNPC.FDesc.SetUnitName userdata void SetUnitName(string pName)

_G.CDOTA_BaseNPC.FDesc.ShouldIdleAcquire userdata bool ShouldIdleAcquire()

_G.CDOTA_BaseNPC.FDesc.SpendMana userdata void SpendMana(float flManaSpent, handle hAbility)
Spend mana from this unit, this can be used for spending mana from abilities or item usage.
_G.CDOTA_BaseNPC.FDesc.StartGesture userdata void StartGesture(int nActivity)
Add the given gesture activity.
_G.CDOTA_BaseNPC.FDesc.StartGestureWithPlaybackRate userdata void StartGestureWithPlaybackRate(int nActivity, float flRate)
Add the given gesture activity with a playback rate override.
_G.CDOTA_BaseNPC.FDesc.Stop userdata void Stop()
Stop the current order.
_G.CDOTA_BaseNPC.FDesc.StopFacing userdata void StopFacing()

_G.CDOTA_BaseNPC.FDesc.SwapAbilities userdata void SwapAbilities(string pAbilityName1, string pAbilityName2, bool bEnable1, bool bEnable2)
Swaps the slots of the two passed abilities and sets them enabled/disabled.
_G.CDOTA_BaseNPC.FDesc.SwapItems userdata void SwapItems(int nSlot1, int nSlot2)
Swap the contents of two item slots (slot1, slot2)
_G.CDOTA_BaseNPC.FDesc.TakeItem userdata handle TakeItem(handle hItem)
Removed the passed item from this unit's inventory.
_G.CDOTA_BaseNPC.FDesc.TimeUntilNextAttack userdata float TimeUntilNextAttack()

_G.CDOTA_BaseNPC.FDesc.TriggerModifierDodge userdata bool TriggerModifierDodge()

_G.CDOTA_BaseNPC.FDesc.TriggerSpellAbsorb userdata bool TriggerSpellAbsorb(handle hAbility)

_G.CDOTA_BaseNPC.FDesc.TriggerSpellReflect userdata void TriggerSpellReflect(handle hAbility)
Trigger the Lotus Orb-like effect.(hAbility)
_G.CDOTA_BaseNPC.FDesc.UnHideAbilityToSlot userdata void UnHideAbilityToSlot(string pszAbilityName, string pszReplacedAbilityName)
Makes the first ability unhidden, and puts it where second ability currently is. Will do nothing if the first ability is already unhidden and in a valid slot.
_G.CDOTA_BaseNPC.FDesc.UnitCanRespawn userdata bool UnitCanRespawn()

_G.CDOTA_BaseNPC.FaceTowards function function: 0x00184000
_G.CDOTA_BaseNPC.FadeGesture function function: 0x00187468
_G.CDOTA_BaseNPC.FindAbilityByName function function: 0x00187888
_G.CDOTA_BaseNPC.FindAllModifiers function function: 0x00189c48
_G.CDOTA_BaseNPC.FindAllModifiersByName function function: 0x00189cd0
_G.CDOTA_BaseNPC.FindItemInInventory function function: 0x0018d920
_G.CDOTA_BaseNPC.FindModifierByName function function: 0x00189b30
_G.CDOTA_BaseNPC.FindModifierByNameAndCaster function function: 0x00189bb8
_G.CDOTA_BaseNPC.ForceKill function function: 0x0018e320
_G.CDOTA_BaseNPC.ForcePlayActivityOnce function function: 0x00187560
_G.CDOTA_BaseNPC.GetAbilityByIndex function function: 0x00187910
_G.CDOTA_BaseNPC.GetAbilityCount function function: 0x00187998
_G.CDOTA_BaseNPC.GetAcquisitionRange function function: 0x00185408
_G.CDOTA_BaseNPC.GetAdditionalBattleMusicWeight function function: 0x0018e9d0
_G.CDOTA_BaseNPC.GetAggroTarget function function: 0x0018e848
_G.CDOTA_BaseNPC.GetAttackAnimationPoint function function: 0x0018e5b8
_G.CDOTA_BaseNPC.GetAttackCapability function function: 0x0018dab0
_G.CDOTA_BaseNPC.GetAttackDamage function function: 0x001856b0
_G.CDOTA_BaseNPC.GetAttackRangeBuffer function function: 0x001855a0
_G.CDOTA_BaseNPC.GetAttackSpeed function function: 0x00186da8
_G.CDOTA_BaseNPC.GetAttackTarget function function: 0x0018e7c8
_G.CDOTA_BaseNPC.GetAttacksPerSecond function function: 0x00186bc0
_G.CDOTA_BaseNPC.GetAverageTrueAttackDamage function function: 0x00185730
_G.CDOTA_BaseNPC.GetBaseAttackRange function function: 0x00185628
_G.CDOTA_BaseNPC.GetBaseAttackTime function function: 0x00186ab0
_G.CDOTA_BaseNPC.GetBaseDamageMax function function: 0x00188dc8
_G.CDOTA_BaseNPC.GetBaseDamageMin function function: 0x00188d40
_G.CDOTA_BaseNPC.GetBaseDayTimeVisionRange function function: 0x00188290
_G.CDOTA_BaseNPC.GetBaseHealthRegen function function: 0x001894c8
_G.CDOTA_BaseNPC.GetBaseMagicalResistanceValue function function: 0x00189220
_G.CDOTA_BaseNPC.GetBaseMaxHealth function function: 0x001864e0
_G.CDOTA_BaseNPC.GetBaseMoveSpeed function function: 0x001869a0
_G.CDOTA_BaseNPC.GetBaseNightTimeVisionRange function function: 0x00188430
_G.CDOTA_BaseNPC.GetBonusManaRegen function function: 0x00189338
_G.CDOTA_BaseNPC.GetCastPoint function function: 0x00186d50
_G.CDOTA_BaseNPC.GetCastRangeBonus function function: 0x00186f38
_G.CDOTA_BaseNPC.GetCloneSource function function: 0x00184410
_G.CDOTA_BaseNPC.GetCollisionPadding function function: 0x00184540
_G.CDOTA_BaseNPC.GetCooldownReduction function function: 0x00186fc0
_G.CDOTA_BaseNPC.GetCreationTime function function: 0x0018a860
_G.CDOTA_BaseNPC.GetCurrentActiveAbility function function: 0x00187aa0
_G.CDOTA_BaseNPC.GetCurrentVisionRange function function: 0x00188548
_G.CDOTA_BaseNPC.GetCursorCastTarget function function: 0x00188030
_G.CDOTA_BaseNPC.GetCursorPosition function function: 0x0018c590
_G.CDOTA_BaseNPC.GetCursorTargetingNothing function function: 0x0018c5e8
_G.CDOTA_BaseNPC.GetDayTimeVisionRange function function: 0x00188208
_G.CDOTA_BaseNPC.GetDeathXP function function: 0x00188650
_G.CDOTA_BaseNPC.GetDisplayAttackSpeed function function: 0x00186e28
_G.CDOTA_BaseNPC.GetEvasion function function: 0x001862d0
_G.CDOTA_BaseNPC.GetForceAttackTarget function function: 0x0018eaf0
_G.CDOTA_BaseNPC.GetGoldBounty function function: 0x001888f0
_G.CDOTA_BaseNPC.GetHasteFactor function function: 0x00186cd0
_G.CDOTA_BaseNPC.GetHealthDeficit function function: 0x00184f88
_G.CDOTA_BaseNPC.GetHealthPercent function function: 0x00184f00
_G.CDOTA_BaseNPC.GetHealthRegen function function: 0x00186898
_G.CDOTA_BaseNPC.GetHullRadius function function: 0x001844c0
_G.CDOTA_BaseNPC.GetIdealSpeed function function: 0x00184650
_G.CDOTA_BaseNPC.GetIdealSpeedNoSlows function function: 0x001846d0
_G.CDOTA_BaseNPC.GetIncreasedAttackSpeed function function: 0x00186b38
_G.CDOTA_BaseNPC.GetInitialGoalEntity function function: 0x00183ed0
_G.CDOTA_BaseNPC.GetInitialGoalPosition function function: 0x001845c8
_G.CDOTA_BaseNPC.GetItemInSlot function function: 0x0018c740
_G.CDOTA_BaseNPC.GetLastAttackTime function function: 0x0018e530
_G.CDOTA_BaseNPC.GetLastDamageTime function function: 0x00185010
_G.CDOTA_BaseNPC.GetLastIdleChangeTime function function: 0x00183d70
_G.CDOTA_BaseNPC.GetLevel function function: 0x00184758
_G.CDOTA_BaseNPC.GetMagicalArmorValue function function: 0x00188fe8
_G.CDOTA_BaseNPC.GetMainControllingPlayer function function: 0x00188b20
_G.CDOTA_BaseNPC.GetMana function function: 0x001866c0
_G.CDOTA_BaseNPC.GetManaPercent function function: 0x00186798
_G.CDOTA_BaseNPC.GetManaRegen function function: 0x001893c0
_G.CDOTA_BaseNPC.GetMaxMana function function: 0x00186718
_G.CDOTA_BaseNPC.GetMaximumGoldBounty function function: 0x00188868
_G.CDOTA_BaseNPC.GetMinimumGoldBounty function function: 0x00188758
_G.CDOTA_BaseNPC.GetModelRadius function function: 0x0018a540
_G.CDOTA_BaseNPC.GetModifierCount function function: 0x00189908
_G.CDOTA_BaseNPC.GetModifierNameByIndex function function: 0x00189990
_G.CDOTA_BaseNPC.GetModifierStackCount function function: 0x00189dd8
_G.CDOTA_BaseNPC.GetMoveSpeedModifier function function: 0x00186eb0
_G.CDOTA_BaseNPC.GetMustReachEachGoalEntity function function: 0x00184080
_G.CDOTA_BaseNPC.GetNeverMoveToClearSpace function function: 0x00183de8
_G.CDOTA_BaseNPC.GetNightTimeVisionRange function function: 0x001883a8
_G.CDOTA_BaseNPC.GetOpposingTeamNumber function function: 0x00189ff8
_G.CDOTA_BaseNPC.GetPaddedCollisionRadius function function: 0x00184df0
_G.CDOTA_BaseNPC.GetPhysicalArmorBaseValue function function: 0x00189100
_G.CDOTA_BaseNPC.GetPhysicalArmorValue function function: 0x00188f60
_G.CDOTA_BaseNPC.GetPlayerOwner function function: 0x00188cc0
_G.CDOTA_BaseNPC.GetPlayerOwnerID function function: 0x00188c38
_G.CDOTA_BaseNPC.GetProjectileSpeed function function: 0x0018e008
_G.CDOTA_BaseNPC.GetRangeToUnit function function: 0x00189678
_G.CDOTA_BaseNPC.GetRangedProjectileName function function: 0x0018e118
_G.CDOTA_BaseNPC.GetSecondsPerAttack function function: 0x00186c48
_G.CDOTA_BaseNPC.GetSpellAmplification function function: 0x00186350
_G.CDOTA_BaseNPC.GetStatusResistance function function: 0x00186248
_G.CDOTA_BaseNPC.GetTotalPurchasedUpgradeGoldCost function function: 0x00188970
_G.CDOTA_BaseNPC.GetUnitLabel function function: 0x0018e2a0
_G.CDOTA_BaseNPC.GetUnitName function function: 0x0018e220
_G.CDOTA_BaseNPC.GiveMana function function: 0x001852b0
_G.CDOTA_BaseNPC.HasAbility function function: 0x00186140
_G.CDOTA_BaseNPC.HasAnyActiveAbilities function function: 0x0018de78
_G.CDOTA_BaseNPC.HasAttackCapability function function: 0x0018ddf0
_G.CDOTA_BaseNPC.HasFlyMovementCapability function function: 0x0018dcd8
_G.CDOTA_BaseNPC.HasFlyingVision function function: 0x0018df00
_G.CDOTA_BaseNPC.HasGroundMovementCapability function function: 0x0018dc48
_G.CDOTA_BaseNPC.HasInventory function function: 0x0018c640
_G.CDOTA_BaseNPC.HasItemInInventory function function: 0x0018d898
_G.CDOTA_BaseNPC.HasModifier function function: 0x00189d58
_G.CDOTA_BaseNPC.HasMovementCapability function function: 0x0018dd68
_G.CDOTA_BaseNPC.HasScepter function function: 0x0018d9a8
_G.CDOTA_BaseNPC.Heal function function: 0x001853b0
_G.CDOTA_BaseNPC.Hold function function: 0x00187e28
_G.CDOTA_BaseNPC.Interrupt function function: 0x0018ece8
_G.CDOTA_BaseNPC.InterruptChannel function function: 0x0018ed68
_G.CDOTA_BaseNPC.InterruptMotionControllers function function: 0x0018edf0
_G.CDOTA_BaseNPC.IsAlive function function: 0x00188128
_G.CDOTA_BaseNPC.IsAncient function function: 0x001841f8
_G.CDOTA_BaseNPC.IsAttackImmune function function: 0x0018c8c0
_G.CDOTA_BaseNPC.IsAttacking function function: 0x0018e6c8
_G.CDOTA_BaseNPC.IsAttackingEntity function function: 0x0018e640
_G.CDOTA_BaseNPC.IsBarracks function function: 0x00185bc0
_G.CDOTA_BaseNPC.IsBaseNPC function function: 0x001e19f8
_G.CDOTA_BaseNPC.IsBlind function function: 0x0018d498
_G.CDOTA_BaseNPC.IsBlockDisabled function function: 0x0018cdf0
_G.CDOTA_BaseNPC.IsBoss function function: 0x00185d38
_G.CDOTA_BaseNPC.IsBuilding function function: 0x00185ac8
_G.CDOTA_BaseNPC.IsChanneling function function: 0x0018ec90
_G.CDOTA_BaseNPC.IsClone function function: 0x00184468
_G.CDOTA_BaseNPC.IsCommandRestricted function function: 0x0018d078
_G.CDOTA_BaseNPC.IsConsideredHero function function: 0x00185970
_G.CDOTA_BaseNPC.IsControllableByAnyPlayer function function: 0x00188a08
_G.CDOTA_BaseNPC.IsCourier function function: 0x00185cb8
_G.CDOTA_BaseNPC.IsCreature function function: 0x00185db0
_G.CDOTA_BaseNPC.IsCreep function function: 0x00185c40
_G.CDOTA_BaseNPC.IsDeniable function function: 0x0018d790
_G.CDOTA_BaseNPC.IsDisarmed function function: 0x0018c840
_G.CDOTA_BaseNPC.IsDominated function function: 0x0018d418
_G.CDOTA_BaseNPC.IsEvadeDisabled function function: 0x0018ce70
_G.CDOTA_BaseNPC.IsFort function function: 0x00185b48
_G.CDOTA_BaseNPC.IsFrozen function function: 0x0018d610
_G.CDOTA_BaseNPC.IsHardDisarmed function function: 0x001e19b8
_G.CDOTA_BaseNPC.IsHero function function: 0x00185898
_G.CDOTA_BaseNPC.IsHexed function function: 0x0018ca98
_G.CDOTA_BaseNPC.IsIdle function function: 0x00183e78
_G.CDOTA_BaseNPC.IsIllusion function function: 0x00187048
_G.CDOTA_BaseNPC.IsInRangeOfShop function function: 0x001863d8
_G.CDOTA_BaseNPC.IsInvisible function function: 0x0018caf0
_G.CDOTA_BaseNPC.IsInvulnerable function function: 0x0018cb70
_G.CDOTA_BaseNPC.IsLowAttackPriority function function: 0x0018d208
_G.CDOTA_BaseNPC.IsMagicImmune function function: 0x0018cbf0
_G.CDOTA_BaseNPC.IsMovementImpaired function function: 0x0018d810
_G.CDOTA_BaseNPC.IsMoving function function: 0x0018aa30
_G.CDOTA_BaseNPC.IsMuted function function: 0x0018c9c0
_G.CDOTA_BaseNPC.IsNeutralUnitType function function: 0x00184278
_G.CDOTA_BaseNPC.IsNightmared function function: 0x0018cd70
_G.CDOTA_BaseNPC.IsNull function function: 0x00183c58
_G.CDOTA_BaseNPC.IsOpposingTeam function function: 0x00189f78
_G.CDOTA_BaseNPC.IsOther function function: 0x001859f8
_G.CDOTA_BaseNPC.IsOutOfGame function function: 0x0018d510
_G.CDOTA_BaseNPC.IsOwnedByAnyPlayer function function: 0x00188a98
_G.CDOTA_BaseNPC.IsPhantom function function: 0x001880a8
_G.CDOTA_BaseNPC.IsPhantomBlocker function function: 0x0018a2a0
_G.CDOTA_BaseNPC.IsPhased function function: 0x0018d710
_G.CDOTA_BaseNPC.IsPositionInRange function function: 0x001896f8
_G.CDOTA_BaseNPC.IsRangedAttacker function function: 0x0018df80
_G.CDOTA_BaseNPC.IsRealHero function function: 0x001858f0
_G.CDOTA_BaseNPC.IsRooted function function: 0x0018c7c0
_G.CDOTA_BaseNPC.IsShrine function function: 0x00185e30
_G.CDOTA_BaseNPC.IsSilenced function function: 0x0018c940
_G.CDOTA_BaseNPC.IsSoftDisarmed function function: 0x001e19d8
_G.CDOTA_BaseNPC.IsSpeciallyDeniable function function: 0x0018cff0
_G.CDOTA_BaseNPC.IsStunned function function: 0x0018ca18
_G.CDOTA_BaseNPC.IsSummoned function function: 0x00184300
_G.CDOTA_BaseNPC.IsTempestDouble function function: 0x00187148
_G.CDOTA_BaseNPC.IsTower function function: 0x00185a50
_G.CDOTA_BaseNPC.IsUnableToMiss function function: 0x0018cf70
_G.CDOTA_BaseNPC.IsUnselectable function function: 0x0018cef0
_G.CDOTA_BaseNPC.IsUntargetable function function: 0x0018d590
_G.CDOTA_BaseNPC.Kill function function: 0x00185840
_G.CDOTA_BaseNPC.MakeIllusion function function: 0x001870c8
_G.CDOTA_BaseNPC.MakePhantomBlocker function function: 0x0018a218
_G.CDOTA_BaseNPC.MakeVisibleDueToAttack function function: 0x0018a108
_G.CDOTA_BaseNPC.MakeVisibleToTeam function function: 0x0018a080
_G.CDOTA_BaseNPC.ManageModelChanges function function: 0x0018a328
_G.CDOTA_BaseNPC.ModifyHealth function function: 0x00186568
_G.CDOTA_BaseNPC.MoveToNPC function function: 0x001851a8
_G.CDOTA_BaseNPC.MoveToNPCToGiveItem function function: 0x001848c0
_G.CDOTA_BaseNPC.MoveToPosition function function: 0x00185098
_G.CDOTA_BaseNPC.MoveToPositionAggressive function function: 0x00185118
_G.CDOTA_BaseNPC.MoveToTargetToAttack function function: 0x00185228
_G.CDOTA_BaseNPC.NoHealthBar function function: 0x0018d290
_G.CDOTA_BaseNPC.NoTeamMoveTo function function: 0x0018d690
_G.CDOTA_BaseNPC.NoTeamSelect function function: 0x0018d310
_G.CDOTA_BaseNPC.NoUnitCollision function function: 0x0018cc70
_G.CDOTA_BaseNPC.NotOnMinimap function function: 0x0018d100
_G.CDOTA_BaseNPC.NotOnMinimapForEnemies function function: 0x0018d180
_G.CDOTA_BaseNPC.NotifyWearablesOfModelChange function function: 0x0018a5c0
_G.CDOTA_BaseNPC.PassivesDisabled function function: 0x0018d390
_G.CDOTA_BaseNPC.PatrolToPosition function function: 0x001847b0
_G.CDOTA_BaseNPC.PerformAttack function function: 0x001857c0
_G.CDOTA_BaseNPC.PickupDroppedItem function function: 0x00184948
_G.CDOTA_BaseNPC.PickupRune function function: 0x001849d0
_G.CDOTA_BaseNPC.PlayVCD function function: 0x001874e8
_G.CDOTA_BaseNPC.ProvidesVision function function: 0x0018ccf0
_G.CDOTA_BaseNPC.Purge function function: 0x0018a9b8
_G.CDOTA_BaseNPC.ReduceMana function function: 0x00186818
_G.CDOTA_BaseNPC.RemoveAbility function function: 0x001860c0
_G.CDOTA_BaseNPC.RemoveAbilityByHandle function function: 0x001861c0
_G.CDOTA_BaseNPC.RemoveGesture function function: 0x001873e8
_G.CDOTA_BaseNPC.RemoveHorizontalMotionController function function: 0x00189550
_G.CDOTA_BaseNPC.RemoveItem function function: 0x00184bd8
_G.CDOTA_BaseNPC.RemoveModifierByName function function: 0x00189aa8
_G.CDOTA_BaseNPC.RemoveModifierByNameAndCaster function function: 0x00189a18
_G.CDOTA_BaseNPC.RemoveNoDraw function function: 0x0018a938
_G.CDOTA_BaseNPC.RemoveVerticalMotionController function function: 0x001895e8
_G.CDOTA_BaseNPC.RespawnUnit function function: 0x0018a758
_G.CDOTA_BaseNPC.Script_GetAttackRange function function: 0x00185518
_G.CDOTA_BaseNPC.SellItem function function: 0x00184a50
_G.CDOTA_BaseNPC.SetAbilityByIndex function function: 0x00187a18
_G.CDOTA_BaseNPC.SetAcquisitionRange function function: 0x00185490
_G.CDOTA_BaseNPC.SetAdditionalBattleMusicWeight function function: 0x0018ea60
_G.CDOTA_BaseNPC.SetAggroTarget function function: 0x0018e8c8
_G.CDOTA_BaseNPC.SetAttackCapability function function: 0x0018db38
_G.CDOTA_BaseNPC.SetAttacking function function: 0x0018e748
_G.CDOTA_BaseNPC.SetBaseAttackTime function function: 0x00186a28
_G.CDOTA_BaseNPC.SetBaseDamageMax function function: 0x00188ed8
_G.CDOTA_BaseNPC.SetBaseDamageMin function function: 0x00188e50
_G.CDOTA_BaseNPC.SetBaseHealthRegen function function: 0x00189440
_G.CDOTA_BaseNPC.SetBaseMagicalResistanceValue function function: 0x00189190
_G.CDOTA_BaseNPC.SetBaseManaRegen function function: 0x001892b0
_G.CDOTA_BaseNPC.SetBaseMaxHealth function function: 0x00186458
_G.CDOTA_BaseNPC.SetBaseMoveSpeed function function: 0x00186918
_G.CDOTA_BaseNPC.SetCanSellItems function function: 0x00184cd8
_G.CDOTA_BaseNPC.SetControllableByPlayer function function: 0x00188bb0
_G.CDOTA_BaseNPC.SetCursorCastTarget function function: 0x0018ab30
_G.CDOTA_BaseNPC.SetCursorPosition function function: 0x00187f18
_G.CDOTA_BaseNPC.SetCursorTargetingNothing function function: 0x00187fa0
_G.CDOTA_BaseNPC.SetCustomHealthLabel function function: 0x0018ac48
_G.CDOTA_BaseNPC.SetDayTimeVisionRange function function: 0x00188320
_G.CDOTA_BaseNPC.SetDeathXP function function: 0x001885d0
_G.CDOTA_BaseNPC.SetForceAttackTarget function function: 0x0018eb78
_G.CDOTA_BaseNPC.SetForceAttackTargetAlly function function: 0x0018ec00
_G.CDOTA_BaseNPC.SetHasInventory function function: 0x0018c6c0
_G.CDOTA_BaseNPC.SetHullRadius function function: 0x00184e80
_G.CDOTA_BaseNPC.SetIdleAcquire function function: 0x00189808
_G.CDOTA_BaseNPC.SetInitialGoalEntity function function: 0x00184170
_G.CDOTA_BaseNPC.SetInitialGoalPosition function function: 0x00184110
_G.CDOTA_BaseNPC.SetMana function function: 0x001865e8
_G.CDOTA_BaseNPC.SetMaxMana function function: 0x00186640
_G.CDOTA_BaseNPC.SetMaximumGoldBounty function function: 0x001887e0
_G.CDOTA_BaseNPC.SetMinimumGoldBounty function function: 0x001886d0
_G.CDOTA_BaseNPC.SetModifierStackCount function function: 0x00189e60
_G.CDOTA_BaseNPC.SetMoveCapability function function: 0x0018dbc0
_G.CDOTA_BaseNPC.SetMustReachEachGoalEntity function function: 0x00184358
_G.CDOTA_BaseNPC.SetNeverMoveToClearSpace function function: 0x00183ce0
_G.CDOTA_BaseNPC.SetNightTimeVisionRange function function: 0x001884c0
_G.CDOTA_BaseNPC.SetOrigin function function: 0x00187dd0
_G.CDOTA_BaseNPC.SetOriginalModel function function: 0x0018a3b0
_G.CDOTA_BaseNPC.SetPhysicalArmorBaseValue function function: 0x00189070
_G.CDOTA_BaseNPC.SetRangedProjectileName function function: 0x0018e090
_G.CDOTA_BaseNPC.SetRevealRadius function function: 0x0018aab0
_G.CDOTA_BaseNPC.SetShouldDoFlyHeightVisual function function: 0x0018abb8
_G.CDOTA_BaseNPC.SetStolenScepter function function: 0x0018da28
_G.CDOTA_BaseNPC.SetUnitCanRespawn function function: 0x0018a6d0
_G.CDOTA_BaseNPC.SetUnitName function function: 0x0018e1a0
_G.CDOTA_BaseNPC.ShouldIdleAcquire function function: 0x00189780
_G.CDOTA_BaseNPC.SpendMana function function: 0x00185330
_G.CDOTA_BaseNPC.StartGesture function function: 0x001872d8
_G.CDOTA_BaseNPC.StartGestureWithPlaybackRate function function: 0x00187358
_G.CDOTA_BaseNPC.Stop function function: 0x00187ea0
_G.CDOTA_BaseNPC.StopFacing function function: 0x00183f70
_G.CDOTA_BaseNPC.SwapAbilities function function: 0x00187780
_G.CDOTA_BaseNPC.SwapItems function function: 0x00186040
_G.CDOTA_BaseNPC.TakeItem function function: 0x00184c58
_G.CDOTA_BaseNPC.TimeUntilNextAttack function function: 0x0018e4a8
_G.CDOTA_BaseNPC.TriggerModifierDodge function function: 0x00187670
_G.CDOTA_BaseNPC.TriggerSpellAbsorb function function: 0x001875e8
_G.CDOTA_BaseNPC.TriggerSpellReflect function function: 0x001876f8
_G.CDOTA_BaseNPC.UnHideAbilityToSlot function function: 0x00187800
_G.CDOTA_BaseNPC.UnitCanRespawn function function: 0x0018a650
_G.CDOTA_BaseNPC_Building table table: 0x00145c18
_G.CDOTA_BaseNPC_Building.FDesc table table: 0x00145ca0
_G.CDOTA_BaseNPC_Building.FDesc.GetInvulnCount userdata int GetInvulnCount()
Get the invulnerability count for a building.
_G.CDOTA_BaseNPC_Building.FDesc.SetInvulnCount userdata void SetInvulnCount(int nInvulnCount)
Set the invulnerability counter of this building.
_G.CDOTA_BaseNPC_Building.GetInvulnCount function function: 0x00145cc8
_G.CDOTA_BaseNPC_Building.IsNull function function: 0x00145c40
_G.CDOTA_BaseNPC_Building.SetInvulnCount function function: 0x00145db0
_G.CDOTA_BaseNPC_Creature table table: 0x00198868
_G.CDOTA_BaseNPC_Creature.AddItemDrop function function: 0x001447c0
_G.CDOTA_BaseNPC_Creature.CreatureLevelUp function function: 0x00198998
_G.CDOTA_BaseNPC_Creature.FDesc table table: 0x001988f0
_G.CDOTA_BaseNPC_Creature.FDesc.AddItemDrop userdata void AddItemDrop(handle hDropData)
Add the specified item drop to this creature.
_G.CDOTA_BaseNPC_Creature.FDesc.CreatureLevelUp userdata void CreatureLevelUp(int iLevels)
Level the creature up by the specified number of levels
_G.CDOTA_BaseNPC_Creature.FDesc.IsChampion userdata bool IsChampion()
Is this unit a champion?
_G.CDOTA_BaseNPC_Creature.FDesc.RemoveAllItemDrops userdata void RemoveAllItemDrops()
Remove all item drops from this creature.
_G.CDOTA_BaseNPC_Creature.FDesc.SetArmorGain userdata void SetArmorGain(float flArmorGain)
Set the armor gained per level on this creature.
_G.CDOTA_BaseNPC_Creature.FDesc.SetAttackTimeGain userdata void SetAttackTimeGain(float flAttackTimeGain)
Set the attack time gained per level on this creature.
_G.CDOTA_BaseNPC_Creature.FDesc.SetBountyGain userdata void SetBountyGain(int nBountyGain)
Set the bounty gold gained per level on this creature.
_G.CDOTA_BaseNPC_Creature.FDesc.SetChampion userdata void SetChampion(bool bIsChampion)
Flag this unit as a champion creature.
_G.CDOTA_BaseNPC_Creature.FDesc.SetDamageGain userdata void SetDamageGain(int nDamageGain)
Set the damage gained per level on this creature.
_G.CDOTA_BaseNPC_Creature.FDesc.SetDisableResistanceGain userdata void SetDisableResistanceGain(float flDisableResistanceGain)
Set the disable resistance gained per level on this creature.
_G.CDOTA_BaseNPC_Creature.FDesc.SetHPGain userdata void SetHPGain(int nHPGain)
Set the hit points gained per level on this creature.
_G.CDOTA_BaseNPC_Creature.FDesc.SetHPRegenGain userdata void SetHPRegenGain(float flHPRegenGain)
Set the hit points regen gained per level on this creature.
_G.CDOTA_BaseNPC_Creature.FDesc.SetMagicResistanceGain userdata void SetMagicResistanceGain(float flMagicResistanceGain)
Set the magic resistance gained per level on this creature.
_G.CDOTA_BaseNPC_Creature.FDesc.SetManaGain userdata void SetManaGain(int nManaGain)
Set the mana points gained per level on this creature.
_G.CDOTA_BaseNPC_Creature.FDesc.SetManaRegenGain userdata void SetManaRegenGain(float flManaRegenGain)
Set the mana points regen gained per level on this creature.
_G.CDOTA_BaseNPC_Creature.FDesc.SetMoveSpeedGain userdata void SetMoveSpeedGain(int nMoveSpeedGain)
Set the move speed gained per level on this creature.
_G.CDOTA_BaseNPC_Creature.FDesc.SetRequiresReachingEndPath userdata void SetRequiresReachingEndPath(bool bRequiresReachingEndPath)
Set whether creatures require reaching their end path before becoming idle
_G.CDOTA_BaseNPC_Creature.FDesc.SetXPGain userdata void SetXPGain(int nXPGain)
Set the XP gained per level on this creature.
_G.CDOTA_BaseNPC_Creature.IsChampion function function: 0x00198a10
_G.CDOTA_BaseNPC_Creature.IsNull function function: 0x00198890
_G.CDOTA_BaseNPC_Creature.RemoveAllItemDrops function function: 0x00144b48
_G.CDOTA_BaseNPC_Creature.SetArmorGain function function: 0x00198cd0
_G.CDOTA_BaseNPC_Creature.SetAttackTimeGain function function: 0x001442a8
_G.CDOTA_BaseNPC_Creature.SetBountyGain function function: 0x001443b8
_G.CDOTA_BaseNPC_Creature.SetChampion function function: 0x00198918
_G.CDOTA_BaseNPC_Creature.SetDamageGain function function: 0x00198fa0
_G.CDOTA_BaseNPC_Creature.SetDisableResistanceGain function function: 0x00199200
_G.CDOTA_BaseNPC_Creature.SetHPGain function function: 0x00198c50
_G.CDOTA_BaseNPC_Creature.SetHPRegenGain function function: 0x00198dc0
_G.CDOTA_BaseNPC_Creature.SetMagicResistanceGain function function: 0x00198d50
_G.CDOTA_BaseNPC_Creature.SetManaGain function function: 0x00198bc0
_G.CDOTA_BaseNPC_Creature.SetManaRegenGain function function: 0x00198b20
_G.CDOTA_BaseNPC_Creature.SetMoveSpeedGain function function: 0x00144330
_G.CDOTA_BaseNPC_Creature.SetRequiresReachingEndPath function function: 0x00198a90
_G.CDOTA_BaseNPC_Creature.SetXPGain function function: 0x00144740
_G.CDOTA_BaseNPC_Hero table table: 0x0018adc0
_G.CDOTA_BaseNPC_Hero.AddExperience function function: 0x001e1a18
_G.CDOTA_BaseNPC_Hero.AddExperience_Engine function function: 0x0018b5b8
_G.CDOTA_BaseNPC_Hero.Buyback function function: 0x0018c228
_G.CDOTA_BaseNPC_Hero.CalculateStatBonus function function: 0x0018ae70
_G.CDOTA_BaseNPC_Hero.CanEarnGold function function: 0x0018aef8
_G.CDOTA_BaseNPC_Hero.ClearLastHitMultikill function function: 0x00195f60
_G.CDOTA_BaseNPC_Hero.ClearLastHitStreak function function: 0x00195e48
_G.CDOTA_BaseNPC_Hero.ClearStreak function function: 0x001962e8
_G.CDOTA_BaseNPC_Hero.FDesc table table: 0x0018ae48
_G.CDOTA_BaseNPC_Hero.FDesc.AddExperience userdata bool AddExperience(float flXP, int nReason, bool bApplyBotDifficultyScaling, bool bIncrementTotal)
Params: Float XP, Bool applyBotDifficultyScaling
_G.CDOTA_BaseNPC_Hero.FDesc.Buyback userdata void Buyback()
Spend the gold and buyback with this hero.
_G.CDOTA_BaseNPC_Hero.FDesc.CalculateStatBonus userdata void CalculateStatBonus()
Recalculate all stats after the hero gains stats.
_G.CDOTA_BaseNPC_Hero.FDesc.CanEarnGold userdata bool CanEarnGold()
Returns boolean value result of buyback gold limit time less than game time.
_G.CDOTA_BaseNPC_Hero.FDesc.ClearLastHitMultikill userdata void ClearLastHitMultikill()
Value is stored in PlayerResource.
_G.CDOTA_BaseNPC_Hero.FDesc.ClearLastHitStreak userdata void ClearLastHitStreak()
Value is stored in PlayerResource.
_G.CDOTA_BaseNPC_Hero.FDesc.ClearStreak userdata void ClearStreak()
Value is stored in PlayerResource.
_G.CDOTA_BaseNPC_Hero.FDesc.GetAbilityPoints userdata int GetAbilityPoints()
Gets the current unspent ability points.
_G.CDOTA_BaseNPC_Hero.FDesc.GetAdditionalOwnedUnits userdata table GetAdditionalOwnedUnits()

_G.CDOTA_BaseNPC_Hero.FDesc.GetAgility userdata float GetAgility()

_G.CDOTA_BaseNPC_Hero.FDesc.GetAgilityGain userdata float GetAgilityGain()

_G.CDOTA_BaseNPC_Hero.FDesc.GetAssists userdata int GetAssists()
Value is stored in PlayerResource.
_G.CDOTA_BaseNPC_Hero.FDesc.GetAttacker userdata int GetAttacker(int nIndex)

_G.CDOTA_BaseNPC_Hero.FDesc.GetBaseAgility userdata float GetBaseAgility()

_G.CDOTA_BaseNPC_Hero.FDesc.GetBaseDamageMax userdata int GetBaseDamageMax()
Hero damage is also affected by attributes.
_G.CDOTA_BaseNPC_Hero.FDesc.GetBaseDamageMin userdata int GetBaseDamageMin()
Hero damage is also affected by attributes.
_G.CDOTA_BaseNPC_Hero.FDesc.GetBaseIntellect userdata float GetBaseIntellect()

_G.CDOTA_BaseNPC_Hero.FDesc.GetBaseManaRegen userdata float GetBaseManaRegen()
Returns the base mana regen.
_G.CDOTA_BaseNPC_Hero.FDesc.GetBaseStrength userdata float GetBaseStrength()

_G.CDOTA_BaseNPC_Hero.FDesc.GetBonusDamageFromPrimaryStat userdata int GetBonusDamageFromPrimaryStat()

_G.CDOTA_BaseNPC_Hero.FDesc.GetBuybackCooldownTime userdata float GetBuybackCooldownTime()
Return float value for the amount of time left on cooldown for this hero's buyback.
_G.CDOTA_BaseNPC_Hero.FDesc.GetBuybackCost userdata int GetBuybackCost(bool bReturnOldValues)
Return integer value for the gold cost of a buyback.
_G.CDOTA_BaseNPC_Hero.FDesc.GetBuybackGoldLimitTime userdata float GetBuybackGoldLimitTime()
Returns the amount of time gold gain is limited after buying back.
_G.CDOTA_BaseNPC_Hero.FDesc.GetCurrentXP userdata int GetCurrentXP()
Returns the amount of XP 
_G.CDOTA_BaseNPC_Hero.FDesc.GetDeathGoldCost userdata int GetDeathGoldCost()

_G.CDOTA_BaseNPC_Hero.FDesc.GetDeaths userdata int GetDeaths()
Value is stored in PlayerResource.
_G.CDOTA_BaseNPC_Hero.FDesc.GetDenies userdata int GetDenies()
Value is stored in PlayerResource.
_G.CDOTA_BaseNPC_Hero.FDesc.GetGold userdata int GetGold()
Returns gold amount for the player owning this hero
_G.CDOTA_BaseNPC_Hero.FDesc.GetGoldBounty userdata int GetGoldBounty()

_G.CDOTA_BaseNPC_Hero.FDesc.GetIncreasedAttackSpeed userdata float GetIncreasedAttackSpeed()
Hero attack speed is also affected by agility.
_G.CDOTA_BaseNPC_Hero.FDesc.GetIntellect userdata float GetIntellect()

_G.CDOTA_BaseNPC_Hero.FDesc.GetIntellectGain userdata float GetIntellectGain()

_G.CDOTA_BaseNPC_Hero.FDesc.GetKills userdata int GetKills()
Value is stored in PlayerResource.
_G.CDOTA_BaseNPC_Hero.FDesc.GetLastHits userdata int GetLastHits()
Value is stored in PlayerResource.
_G.CDOTA_BaseNPC_Hero.FDesc.GetMostRecentDamageTime userdata float GetMostRecentDamageTime()

_G.CDOTA_BaseNPC_Hero.FDesc.GetMultipleKillCount userdata int GetMultipleKillCount()

_G.CDOTA_BaseNPC_Hero.FDesc.GetNumAttackers userdata int GetNumAttackers()

_G.CDOTA_BaseNPC_Hero.FDesc.GetNumItemsInInventory userdata int GetNumItemsInInventory()

_G.CDOTA_BaseNPC_Hero.FDesc.GetNumItemsInStash userdata int GetNumItemsInStash()

_G.CDOTA_BaseNPC_Hero.FDesc.GetPhysicalArmorBaseValue userdata float GetPhysicalArmorBaseValue()
Hero armor is affected by attributes.
_G.CDOTA_BaseNPC_Hero.FDesc.GetPlayerID userdata int GetPlayerID()
Returns player ID of the player owning this hero
_G.CDOTA_BaseNPC_Hero.FDesc.GetPrimaryAttribute userdata int GetPrimaryAttribute()
0 = strength, 1 = agility, 2 = intelligence.
_G.CDOTA_BaseNPC_Hero.FDesc.GetPrimaryStatValue userdata float GetPrimaryStatValue()

_G.CDOTA_BaseNPC_Hero.FDesc.GetRespawnTime userdata float GetRespawnTime()

_G.CDOTA_BaseNPC_Hero.FDesc.GetRespawnsDisabled userdata bool GetRespawnsDisabled()
Is this hero prevented from respawning?
_G.CDOTA_BaseNPC_Hero.FDesc.GetStreak userdata int GetStreak()
Value is stored in PlayerResource.
_G.CDOTA_BaseNPC_Hero.FDesc.GetStrength userdata float GetStrength()

_G.CDOTA_BaseNPC_Hero.FDesc.GetStrengthGain userdata float GetStrengthGain()

_G.CDOTA_BaseNPC_Hero.FDesc.GetTimeUntilRespawn userdata float GetTimeUntilRespawn()

_G.CDOTA_BaseNPC_Hero.FDesc.GetTogglableWearable userdata handle GetTogglableWearable(int nSlotType)
Get wearable entity in slot (slot)
_G.CDOTA_BaseNPC_Hero.FDesc.HasAnyAvailableInventorySpace userdata bool HasAnyAvailableInventorySpace()

_G.CDOTA_BaseNPC_Hero.FDesc.HasFlyingVision userdata bool HasFlyingVision()

_G.CDOTA_BaseNPC_Hero.FDesc.HasOwnerAbandoned userdata bool HasOwnerAbandoned()

_G.CDOTA_BaseNPC_Hero.FDesc.HasRoomForItem userdata int HasRoomForItem(string pItemName, bool bIncludeStashCombines, bool bAllowSelling)
Args: const char* pItemName, bool bIncludeStashCombines, bool bAllowSelling
_G.CDOTA_BaseNPC_Hero.FDesc.HeroLevelUp userdata void HeroLevelUp(bool bPlayEffects)
Levels up the hero, true or false to play effects.
_G.CDOTA_BaseNPC_Hero.FDesc.IncrementAssists userdata void IncrementAssists(int iKillerID)
Value is stored in PlayerResource.
_G.CDOTA_BaseNPC_Hero.FDesc.IncrementDeaths userdata void IncrementDeaths(int iKillerID)
Value is stored in PlayerResource.
_G.CDOTA_BaseNPC_Hero.FDesc.IncrementDenies userdata void IncrementDenies()
Value is stored in PlayerResource.
_G.CDOTA_BaseNPC_Hero.FDesc.IncrementKills userdata void IncrementKills(int iVictimID)
Passed ID is for the victim, killer ID is ID of the current hero.  Value is stored in PlayerResource.
_G.CDOTA_BaseNPC_Hero.FDesc.IncrementLastHitMultikill userdata void IncrementLastHitMultikill()
Value is stored in PlayerResource.
_G.CDOTA_BaseNPC_Hero.FDesc.IncrementLastHitStreak userdata void IncrementLastHitStreak()
Value is stored in PlayerResource.
_G.CDOTA_BaseNPC_Hero.FDesc.IncrementLastHits userdata void IncrementLastHits()
Value is stored in PlayerResource.
_G.CDOTA_BaseNPC_Hero.FDesc.IncrementNearbyCreepDeaths userdata void IncrementNearbyCreepDeaths()
Value is stored in PlayerResource.
_G.CDOTA_BaseNPC_Hero.FDesc.IncrementStreak userdata void IncrementStreak()
Value is stored in PlayerResource.
_G.CDOTA_BaseNPC_Hero.FDesc.IsBuybackDisabledByReapersScythe userdata bool IsBuybackDisabledByReapersScythe()

_G.CDOTA_BaseNPC_Hero.FDesc.IsReincarnating userdata bool IsReincarnating()

_G.CDOTA_BaseNPC_Hero.FDesc.IsStashEnabled userdata bool IsStashEnabled()

_G.CDOTA_BaseNPC_Hero.FDesc.KilledHero userdata void KilledHero(handle hHero, handle hInflictor)
Args: Hero, Inflictor
_G.CDOTA_BaseNPC_Hero.FDesc.ModifyAgility userdata void ModifyAgility(float flNewAgility)
Adds passed value to base attribute value, then calls CalculateStatBonus.
_G.CDOTA_BaseNPC_Hero.FDesc.ModifyGold userdata int ModifyGold(int iGoldChange, bool bReliable, int iReason)
Gives this hero some gold.  Args: int nGoldChange, bool bReliable, int reason
_G.CDOTA_BaseNPC_Hero.FDesc.ModifyIntellect userdata void ModifyIntellect(float flNewIntellect)
Adds passed value to base attribute value, then calls CalculateStatBonus.
_G.CDOTA_BaseNPC_Hero.FDesc.ModifyStrength userdata void ModifyStrength(float flNewStrength)
Adds passed value to base attribute value, then calls CalculateStatBonus.
_G.CDOTA_BaseNPC_Hero.FDesc.PerformTaunt userdata void PerformTaunt()

_G.CDOTA_BaseNPC_Hero.FDesc.RecordLastHit userdata void RecordLastHit()

_G.CDOTA_BaseNPC_Hero.FDesc.RespawnHero userdata void RespawnHero(bool bBuyBack, bool bRespawnPenalty)
Respawn this hero.
_G.CDOTA_BaseNPC_Hero.FDesc.SetAbilityPoints userdata void SetAbilityPoints(int iPoints)
Sets the current unspent ability points.
_G.CDOTA_BaseNPC_Hero.FDesc.SetBaseAgility userdata void SetBaseAgility(float flAgility)

_G.CDOTA_BaseNPC_Hero.FDesc.SetBaseIntellect userdata void SetBaseIntellect(float flIntellect)

_G.CDOTA_BaseNPC_Hero.FDesc.SetBaseStrength userdata void SetBaseStrength(float flStrength)

_G.CDOTA_BaseNPC_Hero.FDesc.SetBotDifficulty userdata void SetBotDifficulty(int nDifficulty)

_G.CDOTA_BaseNPC_Hero.FDesc.SetBuyBackDisabledByReapersScythe userdata void SetBuyBackDisabledByReapersScythe(bool bBuybackDisabled)

_G.CDOTA_BaseNPC_Hero.FDesc.SetBuybackCooldownTime userdata void SetBuybackCooldownTime(float flTime)
Sets the buyback cooldown time.
_G.CDOTA_BaseNPC_Hero.FDesc.SetBuybackGoldLimitTime userdata void SetBuybackGoldLimitTime(float flTime)
Set the amount of time gold gain is limited after buying back.
_G.CDOTA_BaseNPC_Hero.FDesc.SetCustomDeathXP userdata void SetCustomDeathXP(int iValue)
Sets a custom experience value for this hero.  Note, GameRules boolean must be set for this to work!
_G.CDOTA_BaseNPC_Hero.FDesc.SetGold userdata void SetGold(int iGold, bool bReliable)
Sets the gold amount for the player owning this hero
_G.CDOTA_BaseNPC_Hero.FDesc.SetPlayerID userdata void SetPlayerID(int iPlayerID)

_G.CDOTA_BaseNPC_Hero.FDesc.SetPrimaryAttribute userdata void SetPrimaryAttribute(int nPrimaryAttribute)
Set this hero's primary attribute value.
_G.CDOTA_BaseNPC_Hero.FDesc.SetRespawnPosition userdata void SetRespawnPosition(Vector vOrigin)

_G.CDOTA_BaseNPC_Hero.FDesc.SetRespawnsDisabled userdata void SetRespawnsDisabled(bool bDisableRespawns)
Prevent this hero from respawning.
_G.CDOTA_BaseNPC_Hero.FDesc.SetStashEnabled userdata void SetStashEnabled(bool bEnabled)

_G.CDOTA_BaseNPC_Hero.FDesc.SetTimeUntilRespawn userdata void SetTimeUntilRespawn(float time)

_G.CDOTA_BaseNPC_Hero.FDesc.ShouldDoFlyHeightVisual userdata bool ShouldDoFlyHeightVisual()

_G.CDOTA_BaseNPC_Hero.FDesc.SpendGold userdata void SpendGold(int iCost, int iReason)
Args: int nGold, int nReason
_G.CDOTA_BaseNPC_Hero.FDesc.UnitCanRespawn userdata bool UnitCanRespawn()

_G.CDOTA_BaseNPC_Hero.FDesc.UpgradeAbility userdata void UpgradeAbility(handle hAbility)
This upgrades the passed ability if it exists and the hero has enough ability points.
_G.CDOTA_BaseNPC_Hero.FDesc.WillReincarnate userdata bool WillReincarnate()

_G.CDOTA_BaseNPC_Hero.GetAbilityPoints function function: 0x0018b7c0
_G.CDOTA_BaseNPC_Hero.GetAdditionalOwnedUnits function function: 0x0018c098
_G.CDOTA_BaseNPC_Hero.GetAgility function function: 0x0018b408
_G.CDOTA_BaseNPC_Hero.GetAgilityGain function function: 0x0018bc68
_G.CDOTA_BaseNPC_Hero.GetAssists function function: 0x001960e8
_G.CDOTA_BaseNPC_Hero.GetAttacker function function: 0x001953b8
_G.CDOTA_BaseNPC_Hero.GetBaseAgility function function: 0x0018b6b8
_G.CDOTA_BaseNPC_Hero.GetBaseDamageMax function function: 0x0018ba30
_G.CDOTA_BaseNPC_Hero.GetBaseDamageMin function function: 0x0018b9d8
_G.CDOTA_BaseNPC_Hero.GetBaseIntellect function function: 0x0018b738
_G.CDOTA_BaseNPC_Hero.GetBaseManaRegen function function: 0x0018bde8
_G.CDOTA_BaseNPC_Hero.GetBaseStrength function function: 0x0018b638
_G.CDOTA_BaseNPC_Hero.GetBonusDamageFromPrimaryStat function function: 0x001951c8
_G.CDOTA_BaseNPC_Hero.GetBuybackCooldownTime function function: 0x0018c320
_G.CDOTA_BaseNPC_Hero.GetBuybackCost function function: 0x0018c2a0
_G.CDOTA_BaseNPC_Hero.GetBuybackGoldLimitTime function function: 0x0018c430
_G.CDOTA_BaseNPC_Hero.GetCurrentXP function function: 0x00197b78
_G.CDOTA_BaseNPC_Hero.GetDeathGoldCost function function: 0x0018b328
_G.CDOTA_BaseNPC_Hero.GetDeaths function function: 0x00196068
_G.CDOTA_BaseNPC_Hero.GetDenies function function: 0x001961e8
_G.CDOTA_BaseNPC_Hero.GetGold function function: 0x00195170
_G.CDOTA_BaseNPC_Hero.GetGoldBounty function function: 0x001952e0
_G.CDOTA_BaseNPC_Hero.GetIncreasedAttackSpeed function function: 0x0018c178
_G.CDOTA_BaseNPC_Hero.GetIntellect function function: 0x0018b488
_G.CDOTA_BaseNPC_Hero.GetIntellectGain function function: 0x0018bce8
_G.CDOTA_BaseNPC_Hero.GetKills function function: 0x00195fe8
_G.CDOTA_BaseNPC_Hero.GetLastHits function function: 0x00196168
_G.CDOTA_BaseNPC_Hero.GetMostRecentDamageTime function function: 0x00195438
_G.CDOTA_BaseNPC_Hero.GetMultipleKillCount function function: 0x00194f10
_G.CDOTA_BaseNPC_Hero.GetNumAttackers function function: 0x00195338
_G.CDOTA_BaseNPC_Hero.GetNumItemsInInventory function function: 0x00195878
_G.CDOTA_BaseNPC_Hero.GetNumItemsInStash function function: 0x001957f0
_G.CDOTA_BaseNPC_Hero.GetPhysicalArmorBaseValue function function: 0x0018bd90
_G.CDOTA_BaseNPC_Hero.GetPlayerID function function: 0x0018b160
_G.CDOTA_BaseNPC_Hero.GetPrimaryAttribute function function: 0x00195900
_G.CDOTA_BaseNPC_Hero.GetPrimaryStatValue function function: 0x00195258
_G.CDOTA_BaseNPC_Hero.GetRespawnTime function function: 0x0018c018
_G.CDOTA_BaseNPC_Hero.GetRespawnsDisabled function function: 0x001955d0
_G.CDOTA_BaseNPC_Hero.GetStreak function function: 0x00194e90
_G.CDOTA_BaseNPC_Hero.GetStrength function function: 0x0018b388
_G.CDOTA_BaseNPC_Hero.GetStrengthGain function function: 0x0018bbe8
_G.CDOTA_BaseNPC_Hero.GetTimeUntilRespawn function function: 0x001954c0
_G.CDOTA_BaseNPC_Hero.GetTogglableWearable function function: 0x0018ae10
_G.CDOTA_BaseNPC_Hero.HasAnyAvailableInventorySpace function function: 0x00195760
_G.CDOTA_BaseNPC_Hero.HasFlyingVision function function: 0x0018afe8
_G.CDOTA_BaseNPC_Hero.HasOwnerAbandoned function function: 0x00197d50
_G.CDOTA_BaseNPC_Hero.HasRoomForItem function function: 0x001956e0
_G.CDOTA_BaseNPC_Hero.HeroLevelUp function function: 0x0018b538
_G.CDOTA_BaseNPC_Hero.IncrementAssists function function: 0x00195b20
_G.CDOTA_BaseNPC_Hero.IncrementDeaths function function: 0x001e1a38
_G.CDOTA_BaseNPC_Hero.IncrementDeaths_Engine function function: 0x00195aa0
_G.CDOTA_BaseNPC_Hero.IncrementDenies function function: 0x00195c30
_G.CDOTA_BaseNPC_Hero.IncrementKills function function: 0x0018c120
_G.CDOTA_BaseNPC_Hero.IncrementLastHitMultikill function function: 0x00195ed0
_G.CDOTA_BaseNPC_Hero.IncrementLastHitStreak function function: 0x00195dc0
_G.CDOTA_BaseNPC_Hero.IncrementLastHits function function: 0x00195ba8
_G.CDOTA_BaseNPC_Hero.IncrementNearbyCreepDeaths function function: 0x00195cb0
_G.CDOTA_BaseNPC_Hero.IncrementStreak function function: 0x00196268
_G.CDOTA_BaseNPC_Hero.IsBuybackDisabledByReapersScythe function function: 0x0018b040
_G.CDOTA_BaseNPC_Hero.IsNull function function: 0x0018ade8
_G.CDOTA_BaseNPC_Hero.IsReincarnating function function: 0x00197bf8
_G.CDOTA_BaseNPC_Hero.IsStashEnabled function function: 0x00197f68
_G.CDOTA_BaseNPC_Hero.KilledHero function function: 0x00194f98
_G.CDOTA_BaseNPC_Hero.ModifyAgility function function: 0x0018bf18
_G.CDOTA_BaseNPC_Hero.ModifyGold function function: 0x00195018
_G.CDOTA_BaseNPC_Hero.ModifyIntellect function function: 0x0018bf98
_G.CDOTA_BaseNPC_Hero.ModifyStrength function function: 0x0018be98
_G.CDOTA_BaseNPC_Hero.PerformTaunt function function: 0x00195a10
_G.CDOTA_BaseNPC_Hero.RecordLastHit function function: 0x00195d40
_G.CDOTA_BaseNPC_Hero.RespawnHero function function: 0x0018b958
_G.CDOTA_BaseNPC_Hero.SetAbilityPoints function function: 0x0018b848
_G.CDOTA_BaseNPC_Hero.SetBaseAgility function function: 0x0018bae0
_G.CDOTA_BaseNPC_Hero.SetBaseIntellect function function: 0x0018bb60
_G.CDOTA_BaseNPC_Hero.SetBaseStrength function function: 0x0018ba60
_G.CDOTA_BaseNPC_Hero.SetBotDifficulty function function: 0x00197dd8
_G.CDOTA_BaseNPC_Hero.SetBuyBackDisabledByReapersScythe function function: 0x0018b230
_G.CDOTA_BaseNPC_Hero.SetBuybackCooldownTime function function: 0x0018c3a8
_G.CDOTA_BaseNPC_Hero.SetBuybackGoldLimitTime function function: 0x0018c4b8
_G.CDOTA_BaseNPC_Hero.SetCustomDeathXP function function: 0x0018b8d0
_G.CDOTA_BaseNPC_Hero.SetGold function function: 0x00195098
_G.CDOTA_BaseNPC_Hero.SetPlayerID function function: 0x0018b2a8
_G.CDOTA_BaseNPC_Hero.SetPrimaryAttribute function function: 0x00195988
_G.CDOTA_BaseNPC_Hero.SetRespawnPosition function function: 0x00197e60
_G.CDOTA_BaseNPC_Hero.SetRespawnsDisabled function function: 0x00195658
_G.CDOTA_BaseNPC_Hero.SetStashEnabled function function: 0x00197ee8
_G.CDOTA_BaseNPC_Hero.SetTimeUntilRespawn function function: 0x00195548
_G.CDOTA_BaseNPC_Hero.ShouldDoFlyHeightVisual function function: 0x0018af60
_G.CDOTA_BaseNPC_Hero.SpendGold function function: 0x001950f0
_G.CDOTA_BaseNPC_Hero.UnitCanRespawn function function: 0x00197cf8
_G.CDOTA_BaseNPC_Hero.UpgradeAbility function function: 0x0018c1d0
_G.CDOTA_BaseNPC_Hero.WillReincarnate function function: 0x00197c78
_G.CDOTA_BaseNPC_RotatableBuilding table table: 0x00146968
_G.CDOTA_BaseNPC_RotatableBuilding.FDesc table table: 0x001469f0
_G.CDOTA_BaseNPC_RotatableBuilding.IsNull function function: 0x00146990
_G.CDOTA_BaseNPC_Shop table table: 0x001463a0
_G.CDOTA_BaseNPC_Shop.FDesc table table: 0x00146428
_G.CDOTA_BaseNPC_Shop.FDesc.GetShopType userdata int GetShopType()
Get the DOTA_SHOP_TYPE
_G.CDOTA_BaseNPC_Shop.FDesc.SetShopType userdata void SetShopType(int eShopType)
Set the DOTA_SHOP_TYPE.
_G.CDOTA_BaseNPC_Shop.GetShopType function function: 0x00146538
_G.CDOTA_BaseNPC_Shop.IsNull function function: 0x001463c8
_G.CDOTA_BaseNPC_Shop.SetShopType function function: 0x00146450
_G.CDOTA_BaseNPC_Trap_Ward table table: 0x001460c0
_G.CDOTA_BaseNPC_Trap_Ward.FDesc table table: 0x00146148
_G.CDOTA_BaseNPC_Trap_Ward.FDesc.GetTrapTarget userdata Vector GetTrapTarget()
Get the trap target for this entity.
_G.CDOTA_BaseNPC_Trap_Ward.FDesc.SetAnimation userdata void SetAnimation(string pAnimation)
Set the animation sequence for this entity.
_G.CDOTA_BaseNPC_Trap_Ward.GetTrapTarget function function: 0x00146170
_G.CDOTA_BaseNPC_Trap_Ward.IsNull function function: 0x001460e8
_G.CDOTA_BaseNPC_Trap_Ward.SetAnimation function function: 0x00146258
_G.CDOTA_Buff table table: 0x00134248
_G.CDOTA_Buff.AddParticle function function: 0x00134f20
_G.CDOTA_Buff.DecrementStackCount function function: 0x00134680
_G.CDOTA_Buff.Destroy function function: 0x001343d0
_G.CDOTA_Buff.FDesc table table: 0x001342d0
_G.CDOTA_Buff.FDesc.AddParticle userdata void AddParticle(int i, bool bDestroyImmediately, bool bStatusEffect, int iPriority, bool bHeroEffect, bool bOverheadEffect)
(index, bDestroyImmediately, bStatusEffect, priority, bHeroEffect, bOverheadEffect
_G.CDOTA_Buff.FDesc.DecrementStackCount userdata void DecrementStackCount()
Decrease this modifier's stack count by 1.
_G.CDOTA_Buff.FDesc.Destroy userdata void Destroy()
Run all associated destroy functions, then remove the modifier.
_G.CDOTA_Buff.FDesc.ForceRefresh userdata void ForceRefresh()
Run all associated refresh functions on this modifier as if it was re-applied.
_G.CDOTA_Buff.FDesc.GetAbility userdata handle GetAbility()
Get the ability that generated the modifier.
_G.CDOTA_Buff.FDesc.GetAuraDuration userdata float GetAuraDuration()
Returns aura stickiness (default 0.5)
_G.CDOTA_Buff.FDesc.GetAuraOwner userdata handle GetAuraOwner()

_G.CDOTA_Buff.FDesc.GetCaster userdata handle GetCaster()
Get the owner of the ability responsible for the modifier.
_G.CDOTA_Buff.FDesc.GetClass userdata string GetClass()

_G.CDOTA_Buff.FDesc.GetCreationTime userdata float GetCreationTime()

_G.CDOTA_Buff.FDesc.GetDieTime userdata float GetDieTime()

_G.CDOTA_Buff.FDesc.GetDuration userdata float GetDuration()

_G.CDOTA_Buff.FDesc.GetElapsedTime userdata float GetElapsedTime()

_G.CDOTA_Buff.FDesc.GetLastAppliedTime userdata float GetLastAppliedTime()

_G.CDOTA_Buff.FDesc.GetName userdata string GetName()

_G.CDOTA_Buff.FDesc.GetParent userdata handle GetParent()
Get the unit the modifier is parented to.
_G.CDOTA_Buff.FDesc.GetRemainingTime userdata float GetRemainingTime()

_G.CDOTA_Buff.FDesc.GetSerialNumber userdata int GetSerialNumber()

_G.CDOTA_Buff.FDesc.GetStackCount userdata int GetStackCount()

_G.CDOTA_Buff.FDesc.HasFunction userdata bool HasFunction(int iFunction)

_G.CDOTA_Buff.FDesc.IncrementStackCount userdata void IncrementStackCount()
Increase this modifier's stack count by 1.
_G.CDOTA_Buff.FDesc.IsDebuff userdata bool IsDebuff()

_G.CDOTA_Buff.FDesc.IsHexDebuff userdata bool IsHexDebuff()

_G.CDOTA_Buff.FDesc.IsStunDebuff userdata bool IsStunDebuff()

_G.CDOTA_Buff.FDesc.SetDuration userdata void SetDuration(float flDuration, bool bInformClient)
(flTime, bInformClients)
_G.CDOTA_Buff.FDesc.SetStackCount userdata void SetStackCount(int iCount)

_G.CDOTA_Buff.FDesc.StartIntervalThink userdata void StartIntervalThink(float flInterval)
Start this modifier's think function (OnIntervalThink) with the given interval (float).  To stop, call with -1.
_G.CDOTA_Buff.ForceRefresh function function: 0x00134a10
_G.CDOTA_Buff.GetAbility function function: 0x001352a8
_G.CDOTA_Buff.GetAuraDuration function function: 0x001350a8
_G.CDOTA_Buff.GetAuraOwner function function: 0x00134a90
_G.CDOTA_Buff.GetCaster function function: 0x001351a8
_G.CDOTA_Buff.GetClass function function: 0x00134350
_G.CDOTA_Buff.GetCreationTime function function: 0x00134fa0
_G.CDOTA_Buff.GetDieTime function function: 0x00134808
_G.CDOTA_Buff.GetDuration function function: 0x00134888
_G.CDOTA_Buff.GetElapsedTime function function: 0x00134990
_G.CDOTA_Buff.GetLastAppliedTime function function: 0x00135020
_G.CDOTA_Buff.GetName function function: 0x001342f8
_G.CDOTA_Buff.GetParent function function: 0x00135228
_G.CDOTA_Buff.GetRemainingTime function function: 0x00134908
_G.CDOTA_Buff.GetSerialNumber function function: 0x00135128
_G.CDOTA_Buff.GetStackCount function function: 0x00134708
_G.CDOTA_Buff.HasFunction function function: 0x00134298
_G.CDOTA_Buff.IncrementStackCount function function: 0x001345f8
_G.CDOTA_Buff.IsDebuff function function: 0x00134478
_G.CDOTA_Buff.IsHexDebuff function function: 0x00134578
_G.CDOTA_Buff.IsNull function function: 0x00134270
_G.CDOTA_Buff.IsStunDebuff function function: 0x001344f8
_G.CDOTA_Buff.SetDuration function function: 0x00134ea0
_G.CDOTA_Buff.SetStackCount function function: 0x00134788
_G.CDOTA_Buff.StartIntervalThink function function: 0x00134e18
_G.CDOTA_CustomUIManager table table: 0x001f2628
_G.CDOTA_CustomUIManager.DynamicHud_Create function function: 0x001f26d8
_G.CDOTA_CustomUIManager.DynamicHud_Destroy function function: 0x001f2760
_G.CDOTA_CustomUIManager.DynamicHud_SetDialogVariables function function: 0x001f2860
_G.CDOTA_CustomUIManager.DynamicHud_SetVisible function function: 0x001f27d8
_G.CDOTA_CustomUIManager.FDesc table table: 0x001f26b0
_G.CDOTA_CustomUIManager.FDesc.DynamicHud_Create userdata void DynamicHud_Create(int, string, string, handle)
Create a new custom UI HUD element for the specified player(s). ( int PlayerID /*-1 means everyone*/, string ElementID /* should be unique */, string LayoutFileName, table DialogVariables /* can be nil */ )
_G.CDOTA_CustomUIManager.FDesc.DynamicHud_Destroy userdata void DynamicHud_Destroy(int, string)
Destroy a custom hud element ( int PlayerID /*-1 means everyone*/, string ElementID )
_G.CDOTA_CustomUIManager.FDesc.DynamicHud_SetDialogVariables userdata void DynamicHud_SetDialogVariables(int, string, handle)
Add or modify dialog variables for an existing custom hud element ( int PlayerID /*-1 means everyone*/, string ElementID, table DialogVariables )
_G.CDOTA_CustomUIManager.FDesc.DynamicHud_SetVisible userdata void DynamicHud_SetVisible(int, string, bool)
Toggle the visibility of an existing custom hud element ( int PlayerID /*-1 means everyone*/, string ElementID, bool Visible )
_G.CDOTA_CustomUIManager.IsNull function function: 0x001f2650
_G.CDOTA_Item table table: 0x00181110
_G.CDOTA_Item.CanBeUsedOutOfInventory function function: 0x00182170
_G.CDOTA_Item.FDesc table table: 0x00181198
_G.CDOTA_Item.FDesc.CanBeUsedOutOfInventory userdata bool CanBeUsedOutOfInventory()

_G.CDOTA_Item.FDesc.GetContainer userdata handle GetContainer()
Get the container for this item.
_G.CDOTA_Item.FDesc.GetCost userdata int GetCost()

_G.CDOTA_Item.FDesc.GetCurrentCharges userdata int GetCurrentCharges()
Get the number of charges this item currently has.
_G.CDOTA_Item.FDesc.GetInitialCharges userdata int GetInitialCharges()
Get the initial number of charges this item has.
_G.CDOTA_Item.FDesc.GetItemSlot userdata int GetItemSlot()

_G.CDOTA_Item.FDesc.GetItemState userdata int GetItemState()
Gets whether item is unequipped or ready.
_G.CDOTA_Item.FDesc.GetParent userdata handle GetParent()
Get the parent for this item.
_G.CDOTA_Item.FDesc.GetPurchaseTime userdata float GetPurchaseTime()
Get the purchase time of this item
_G.CDOTA_Item.FDesc.GetPurchaser userdata handle GetPurchaser()
Get the purchaser for this item.
_G.CDOTA_Item.FDesc.GetSecondaryCharges userdata int GetSecondaryCharges()
Get the number of secondary charges this item currently has.
_G.CDOTA_Item.FDesc.GetShareability userdata int GetShareability()

_G.CDOTA_Item.FDesc.IsAlertableItem userdata bool IsAlertableItem()

_G.CDOTA_Item.FDesc.IsCastOnPickup userdata bool IsCastOnPickup()

_G.CDOTA_Item.FDesc.IsCombinable userdata bool IsCombinable()

_G.CDOTA_Item.FDesc.IsDisassemblable userdata bool IsDisassemblable()

_G.CDOTA_Item.FDesc.IsDroppable userdata bool IsDroppable()

_G.CDOTA_Item.FDesc.IsInBackpack userdata bool IsInBackpack()

_G.CDOTA_Item.FDesc.IsItem userdata bool IsItem()

_G.CDOTA_Item.FDesc.IsKillable userdata bool IsKillable()

_G.CDOTA_Item.FDesc.IsMuted userdata bool IsMuted()

_G.CDOTA_Item.FDesc.IsPermanent userdata bool IsPermanent()

_G.CDOTA_Item.FDesc.IsPurchasable userdata bool IsPurchasable()

_G.CDOTA_Item.FDesc.IsRecipe userdata bool IsRecipe()

_G.CDOTA_Item.FDesc.IsRecipeGenerated userdata bool IsRecipeGenerated()

_G.CDOTA_Item.FDesc.IsSellable userdata bool IsSellable()

_G.CDOTA_Item.FDesc.IsStackable userdata bool IsStackable()

_G.CDOTA_Item.FDesc.LaunchLoot userdata void LaunchLoot(bool bAutoUse, float flHeight, float flDuration, Vector vEndPoint)

_G.CDOTA_Item.FDesc.LaunchLootInitialHeight userdata void LaunchLootInitialHeight(bool bAutoUse, float flInitialHeight, float flLaunchHeight, float flDuration, Vector vEndPoint)

_G.CDOTA_Item.FDesc.OnEquip userdata void OnEquip()

_G.CDOTA_Item.FDesc.OnUnequip userdata void OnUnequip()

_G.CDOTA_Item.FDesc.RequiresCharges userdata bool RequiresCharges()

_G.CDOTA_Item.FDesc.SetCanBeUsedOutOfInventory userdata void SetCanBeUsedOutOfInventory(bool bValue)

_G.CDOTA_Item.FDesc.SetCastOnPickup userdata void SetCastOnPickup(bool bCastOnPickUp)

_G.CDOTA_Item.FDesc.SetCurrentCharges userdata void SetCurrentCharges(int iCharges)
Set the number of charges on this item
_G.CDOTA_Item.FDesc.SetDroppable userdata void SetDroppable(bool bDroppable)

_G.CDOTA_Item.FDesc.SetItemState userdata void SetItemState(int iState)
Sets whether item is unequipped or ready.
_G.CDOTA_Item.FDesc.SetPurchaseTime userdata void SetPurchaseTime(float flTime)
Set the purchase time of this item
_G.CDOTA_Item.FDesc.SetPurchaser userdata void SetPurchaser(handle hPurchaser)
Set the purchaser of record for this item.
_G.CDOTA_Item.FDesc.SetSecondaryCharges userdata void SetSecondaryCharges(int iCharges)
Set the number of secondary charges on this item
_G.CDOTA_Item.FDesc.SetSellable userdata void SetSellable(bool bSellable)

_G.CDOTA_Item.FDesc.SetShareability userdata void SetShareability(int iShareability)

_G.CDOTA_Item.FDesc.SetStacksWithOtherOwners userdata void SetStacksWithOtherOwners(bool bStacksWithOtherOwners)

_G.CDOTA_Item.FDesc.SpendCharge userdata void SpendCharge()

_G.CDOTA_Item.FDesc.StacksWithOtherOwners userdata bool StacksWithOtherOwners()

_G.CDOTA_Item.FDesc.Think userdata void Think()
Think this item
_G.CDOTA_Item.GetContainer function function: 0x00181d58
_G.CDOTA_Item.GetCost function function: 0x00181c00
_G.CDOTA_Item.GetCurrentCharges function function: 0x00181608
_G.CDOTA_Item.GetInitialCharges function function: 0x00181408
_G.CDOTA_Item.GetItemSlot function function: 0x001833a0
_G.CDOTA_Item.GetItemState function function: 0x00181c58
_G.CDOTA_Item.GetParent function function: 0x00183420
_G.CDOTA_Item.GetPurchaseTime function function: 0x00181498
_G.CDOTA_Item.GetPurchaser function function: 0x00181e58
_G.CDOTA_Item.GetSecondaryCharges function function: 0x00181368
_G.CDOTA_Item.GetShareability function function: 0x00182370
_G.CDOTA_Item.IsAlertableItem function function: 0x00182270
_G.CDOTA_Item.IsCastOnPickup function function: 0x00182470
_G.CDOTA_Item.IsCombinable function function: 0x00181aa8
_G.CDOTA_Item.IsDisassemblable function function: 0x001821e8
_G.CDOTA_Item.IsDroppable function function: 0x00181768
_G.CDOTA_Item.IsInBackpack function function: 0x00183320
_G.CDOTA_Item.IsItem function function: 0x00181a50
_G.CDOTA_Item.IsKillable function function: 0x00181978
_G.CDOTA_Item.IsMuted function function: 0x00181710
_G.CDOTA_Item.IsNull function function: 0x00181138
_G.CDOTA_Item.IsPermanent function function: 0x00181b28
_G.CDOTA_Item.IsPurchasable function function: 0x00181878
_G.CDOTA_Item.IsRecipe function function: 0x00181690
_G.CDOTA_Item.IsRecipeGenerated function function: 0x00182570
_G.CDOTA_Item.IsSellable function function: 0x001818f8
_G.CDOTA_Item.IsStackable function function: 0x00181b80
_G.CDOTA_Item.LaunchLoot function function: 0x00181fd8
_G.CDOTA_Item.LaunchLootInitialHeight function function: 0x00182058
_G.CDOTA_Item.OnEquip function function: 0x00181290
_G.CDOTA_Item.OnUnequip function function: 0x001812e8
_G.CDOTA_Item.RequiresCharges function function: 0x001822f0
_G.CDOTA_Item.SetCanBeUsedOutOfInventory function function: 0x001820e0
_G.CDOTA_Item.SetCastOnPickup function function: 0x001824f0
_G.CDOTA_Item.SetCurrentCharges function function: 0x001817f0
_G.CDOTA_Item.SetDroppable function function: 0x00181ed8
_G.CDOTA_Item.SetItemState function function: 0x00181cd8
_G.CDOTA_Item.SetPurchaseTime function function: 0x00181218
_G.CDOTA_Item.SetPurchaser function function: 0x00181dd8
_G.CDOTA_Item.SetSecondaryCharges function function: 0x00181518
_G.CDOTA_Item.SetSellable function function: 0x00181f58
_G.CDOTA_Item.SetShareability function function: 0x001823f0
_G.CDOTA_Item.SetStacksWithOtherOwners function function: 0x00182680
_G.CDOTA_Item.SpendCharge function function: 0x001815a0
_G.CDOTA_Item.StacksWithOtherOwners function function: 0x001825f8
_G.CDOTA_Item.Think function function: 0x001811c0
_G.CDOTA_ItemSpawner table table: 0x001b02d0
_G.CDOTA_ItemSpawner.FDesc table table: 0x001b0358
_G.CDOTA_ItemSpawner.FDesc.GetItemName userdata string GetItemName()
Returns the item name
_G.CDOTA_ItemSpawner.GetItemName function function: 0x001b0380
_G.CDOTA_ItemSpawner.IsNull function function: 0x001b02f8
_G.CDOTA_Item_DataDriven table table: 0x001aefe0
_G.CDOTA_Item_DataDriven.ApplyDataDrivenModifier function function: 0x001b0058
_G.CDOTA_Item_DataDriven.ApplyDataDrivenThinker function function: 0x001b0158
_G.CDOTA_Item_DataDriven.FDesc table table: 0x001b0030
_G.CDOTA_Item_DataDriven.FDesc.ApplyDataDrivenModifier userdata void ApplyDataDrivenModifier(handle hCaster, handle hTarget, string pszModifierName, handle hModifierTable)
Applies a data driven modifier to the target
_G.CDOTA_Item_DataDriven.FDesc.ApplyDataDrivenThinker userdata handle ApplyDataDrivenThinker(handle hCaster, Vector vLocation, string pszModifierName, handle hModifierTable)
Applies a data driven thinker at the location
_G.CDOTA_Item_DataDriven.IsNull function function: 0x001affd0
_G.CDOTA_Item_Lua table table: 0x001a9c68
_G.CDOTA_Item_Lua.CanUnitPickUp function function: 0x001aeda0
_G.CDOTA_Item_Lua.CastFilterResult function function: 0x001aa3e8
_G.CDOTA_Item_Lua.CastFilterResultLocation function function: 0x001aa358
_G.CDOTA_Item_Lua.CastFilterResultTarget function function: 0x001aa2d0
_G.CDOTA_Item_Lua.FDesc table table: 0x001a9cf0
_G.CDOTA_Item_Lua.FDesc.CanUnitPickUp userdata bool CanUnitPickUp(handle hUnit)
Returns true if this item can be picked up by the target unit.
_G.CDOTA_Item_Lua.FDesc.CastFilterResult userdata int CastFilterResult()
Determine whether an issued command with no target is valid.
_G.CDOTA_Item_Lua.FDesc.CastFilterResultLocation userdata int CastFilterResultLocation(Vector vLocation)
(Vector vLocation) Determine whether an issued command on a location is valid.
_G.CDOTA_Item_Lua.FDesc.CastFilterResultTarget userdata int CastFilterResultTarget(handle hTarget)
(HSCRIPT hTarget) Determine whether an issued command on a target is valid.
_G.CDOTA_Item_Lua.FDesc.GetAssociatedPrimaryAbilities userdata string GetAssociatedPrimaryAbilities()
Returns abilities that are stolen simultaneously, or otherwise related in functionality.
_G.CDOTA_Item_Lua.FDesc.GetAssociatedSecondaryAbilities userdata string GetAssociatedSecondaryAbilities()
Returns other abilities that are stolen simultaneously, or otherwise related in functionality.  Generally hidden abilities.
_G.CDOTA_Item_Lua.FDesc.GetBehavior userdata int GetBehavior()
Return cast behavior type of this ability.
_G.CDOTA_Item_Lua.FDesc.GetCastRange userdata int GetCastRange(Vector vLocation, handle hTarget)
Return cast range of this ability.
_G.CDOTA_Item_Lua.FDesc.GetChannelTime userdata float GetChannelTime()
Return the channel time of this ability.
_G.CDOTA_Item_Lua.FDesc.GetChannelledManaCostPerSecond userdata int GetChannelledManaCostPerSecond(int iLevel)
Return mana cost at the given level per second while channeling (-1 is current).
_G.CDOTA_Item_Lua.FDesc.GetConceptRecipientType userdata int GetConceptRecipientType()
Return who hears speech when this spell is cast.
_G.CDOTA_Item_Lua.FDesc.GetCooldown userdata float GetCooldown(int iLevel)
Return cooldown of this ability.
_G.CDOTA_Item_Lua.FDesc.GetCustomCastError userdata string GetCustomCastError()
Return the error string of a failed command with no target.
_G.CDOTA_Item_Lua.FDesc.GetCustomCastErrorLocation userdata string GetCustomCastErrorLocation(Vector vLocation)
(Vector vLocation) Return the error string of a failed command on a location.
_G.CDOTA_Item_Lua.FDesc.GetCustomCastErrorTarget userdata string GetCustomCastErrorTarget(handle hTarget)
(HSCRIPT hTarget) Return the error string of a failed command on a target.
_G.CDOTA_Item_Lua.FDesc.GetGoldCost userdata int GetGoldCost(int iLevel)
Return gold cost at the given level (-1 is current).
_G.CDOTA_Item_Lua.FDesc.GetIntrinsicModifierName userdata string GetIntrinsicModifierName()
Returns the name of the modifier applied passively by this ability.
_G.CDOTA_Item_Lua.FDesc.GetManaCost userdata int GetManaCost(int iLevel)
Return mana cost at the given level (-1 is current).
_G.CDOTA_Item_Lua.FDesc.GetPlaybackRateOverride userdata float GetPlaybackRateOverride()
Return the animation rate of the cast animation.
_G.CDOTA_Item_Lua.FDesc.IsHiddenAbilityCastable userdata bool IsHiddenAbilityCastable()
Returns true if this ability can be used when not on the action panel.
_G.CDOTA_Item_Lua.FDesc.IsHiddenWhenStolen userdata bool IsHiddenWhenStolen()
Returns true if this ability is hidden when stolen by Spell Steal.
_G.CDOTA_Item_Lua.FDesc.IsMuted userdata bool IsMuted()
Returns whether this item is muted or not.
_G.CDOTA_Item_Lua.FDesc.IsRefreshable userdata bool IsRefreshable()
Returns true if this ability is refreshed by Refresher Orb.
_G.CDOTA_Item_Lua.FDesc.IsStealable userdata bool IsStealable()
Returns true if this ability can be stolen by Spell Steal.
_G.CDOTA_Item_Lua.FDesc.OnAbilityPhaseInterrupted userdata void OnAbilityPhaseInterrupted()
Cast time did not complete successfully.
_G.CDOTA_Item_Lua.FDesc.OnAbilityPhaseStart userdata bool OnAbilityPhaseStart()
Cast time begins (return true for successful cast).
_G.CDOTA_Item_Lua.FDesc.OnChannelFinish userdata void OnChannelFinish(bool bInterrupted)
(bool bInterrupted) Channel finished.
_G.CDOTA_Item_Lua.FDesc.OnChannelThink userdata void OnChannelThink(float flInterval)
(float flInterval) Channeling is taking place.
_G.CDOTA_Item_Lua.FDesc.OnHeroCalculateStatBonus userdata void OnHeroCalculateStatBonus()
Caster (hero only) gained a level, skilled an ability, or received a new stat bonus.
_G.CDOTA_Item_Lua.FDesc.OnHeroDiedNearby userdata void OnHeroDiedNearby(handle unit, handle attacker, handle table)
A hero has died in the vicinity (ie Urn), takes table of params.
_G.CDOTA_Item_Lua.FDesc.OnHeroLevelUp userdata void OnHeroLevelUp()
Caster gained a level.
_G.CDOTA_Item_Lua.FDesc.OnInventoryContentsChanged userdata void OnInventoryContentsChanged()
Caster inventory changed.
_G.CDOTA_Item_Lua.FDesc.OnItemEquipped userdata void OnItemEquipped(handle hItem)
( HSCRIPT hItem ) Caster equipped item.
_G.CDOTA_Item_Lua.FDesc.OnOwnerDied userdata void OnOwnerDied()
Caster died.
_G.CDOTA_Item_Lua.FDesc.OnOwnerSpawned userdata void OnOwnerSpawned()
Caster respawned or spawned for the first time.
_G.CDOTA_Item_Lua.FDesc.OnProjectileHit userdata bool OnProjectileHit(handle hTarget, Vector vLocation)
(HSCRIPT hTarget, Vector vLocation) Projectile has collided with a given target or reached its destination (target is invalid).
_G.CDOTA_Item_Lua.FDesc.OnProjectileThink userdata void OnProjectileThink(Vector vLocation)
(Vector vLocation) Projectile is actively moving.
_G.CDOTA_Item_Lua.FDesc.OnSpellStart userdata void OnSpellStart()
Cast time finished, spell effects begin.
_G.CDOTA_Item_Lua.FDesc.OnStolen userdata void OnStolen(handle hSourceAbility)
( HSCRIPT hAbility ) Special behavior when stolen by Spell Steal.
_G.CDOTA_Item_Lua.FDesc.OnToggle userdata void OnToggle()
Ability is toggled on/off.
_G.CDOTA_Item_Lua.FDesc.OnUnStolen userdata void OnUnStolen()
Special behavior when lost by Spell Steal.
_G.CDOTA_Item_Lua.FDesc.OnUpgrade userdata void OnUpgrade()
Ability gained a level.
_G.CDOTA_Item_Lua.FDesc.ProcsMagicStick userdata bool ProcsMagicStick()
Returns true if this ability will generate magic stick charges for nearby enemies.
_G.CDOTA_Item_Lua.FDesc.SpeakTrigger userdata int SpeakTrigger()
Return the type of speech used.
_G.CDOTA_Item_Lua.GetAssociatedPrimaryAbilities function function: 0x001aeab0
_G.CDOTA_Item_Lua.GetAssociatedSecondaryAbilities function function: 0x001aeb08
_G.CDOTA_Item_Lua.GetBehavior function function: 0x001a9d18
_G.CDOTA_Item_Lua.GetCastRange function function: 0x001a9dd8
_G.CDOTA_Item_Lua.GetChannelTime function function: 0x001a9cb8
_G.CDOTA_Item_Lua.GetChannelledManaCostPerSecond function function: 0x001a9f78
_G.CDOTA_Item_Lua.GetConceptRecipientType function function: 0x001aee20
_G.CDOTA_Item_Lua.GetCooldown function function: 0x001aa0f0
_G.CDOTA_Item_Lua.GetCustomCastError function function: 0x001aa060
_G.CDOTA_Item_Lua.GetCustomCastErrorLocation function function: 0x001a9fd0
_G.CDOTA_Item_Lua.GetCustomCastErrorTarget function function: 0x001aa470
_G.CDOTA_Item_Lua.GetGoldCost function function: 0x001aa098
_G.CDOTA_Item_Lua.GetIntrinsicModifierName function function: 0x001aeb60
_G.CDOTA_Item_Lua.GetManaCost function function: 0x001a9e30
_G.CDOTA_Item_Lua.GetPlaybackRateOverride function function: 0x001aeed0
_G.CDOTA_Item_Lua.IsHiddenAbilityCastable function function: 0x001aecc0
_G.CDOTA_Item_Lua.IsHiddenWhenStolen function function: 0x001aec10
_G.CDOTA_Item_Lua.IsMuted function function: 0x001a9eb8
_G.CDOTA_Item_Lua.IsNull function function: 0x001a9c90
_G.CDOTA_Item_Lua.IsRefreshable function function: 0x001aec68
_G.CDOTA_Item_Lua.IsStealable function function: 0x001aebb8
_G.CDOTA_Item_Lua.OnAbilityPhaseInterrupted function function: 0x001aa1f8
_G.CDOTA_Item_Lua.OnAbilityPhaseStart function function: 0x001aa1a0
_G.CDOTA_Item_Lua.OnChannelFinish function function: 0x001ae848
_G.CDOTA_Item_Lua.OnChannelThink function function: 0x001aa250
_G.CDOTA_Item_Lua.OnHeroCalculateStatBonus function function: 0x001af258
_G.CDOTA_Item_Lua.OnHeroDiedNearby function function: 0x001aea28
_G.CDOTA_Item_Lua.OnHeroLevelUp function function: 0x001af0f0
_G.CDOTA_Item_Lua.OnInventoryContentsChanged function function: 0x001af148
_G.CDOTA_Item_Lua.OnItemEquipped function function: 0x001af1d8
_G.CDOTA_Item_Lua.OnOwnerDied function function: 0x001af040
_G.CDOTA_Item_Lua.OnOwnerSpawned function function: 0x001af010
_G.CDOTA_Item_Lua.OnProjectileHit function function: 0x001ae8a0
_G.CDOTA_Item_Lua.OnProjectileThink function function: 0x001ae920
_G.CDOTA_Item_Lua.OnSpellStart function function: 0x001aa148
_G.CDOTA_Item_Lua.OnStolen function function: 0x001af2b0
_G.CDOTA_Item_Lua.OnToggle function function: 0x001ae9d0
_G.CDOTA_Item_Lua.OnUnStolen function function: 0x001af330
_G.CDOTA_Item_Lua.OnUpgrade function function: 0x001af098
_G.CDOTA_Item_Lua.ProcsMagicStick function function: 0x001aed48
_G.CDOTA_Item_Lua.SpeakTrigger function function: 0x001aee78
_G.CDOTA_Item_Physical table table: 0x001a99a0
_G.CDOTA_Item_Physical.FDesc table table: 0x001a9a28
_G.CDOTA_Item_Physical.FDesc.GetContainedItem userdata handle GetContainedItem()
Returned the contained item.
_G.CDOTA_Item_Physical.FDesc.GetCreationTime userdata float GetCreationTime()
Returns the game time when this item was created in the world
_G.CDOTA_Item_Physical.FDesc.SetContainedItem userdata void SetContainedItem(handle hItem)
Set the contained item.
_G.CDOTA_Item_Physical.GetContainedItem function function: 0x001a9ad8
_G.CDOTA_Item_Physical.GetCreationTime function function: 0x001a9b60
_G.CDOTA_Item_Physical.IsNull function function: 0x001a99c8
_G.CDOTA_Item_Physical.SetContainedItem function function: 0x001a9a50
_G.CDOTA_MapTree table table: 0x001a4e08
_G.CDOTA_MapTree.CutDown function function: 0x001a4fb0
_G.CDOTA_MapTree.CutDownRegrowAfter function function: 0x001a5008
_G.CDOTA_MapTree.FDesc table table: 0x001a4e90
_G.CDOTA_MapTree.FDesc.CutDown userdata void CutDown(int nTeamNumberKnownTo)
Cuts down this tree. Parameters: int nTeamNumberKnownTo (-1 = invalid team)
_G.CDOTA_MapTree.FDesc.CutDownRegrowAfter userdata void CutDownRegrowAfter(float flRegrowAfter, int nTeamNumberKnownTo)
Cuts down this tree. Parameters: float flRegrowAfter (-1 = never regrow), int nTeamNumberKnownTo (-1 = invalid team)
_G.CDOTA_MapTree.FDesc.GrowBack userdata void GrowBack()
Grows back the tree if it was cut down.
_G.CDOTA_MapTree.FDesc.IsStanding userdata bool IsStanding()
Returns true if the tree is standing, false if it has been cut down
_G.CDOTA_MapTree.GrowBack function function: 0x001a4eb8
_G.CDOTA_MapTree.IsNull function function: 0x001a4e30
_G.CDOTA_MapTree.IsStanding function function: 0x001a4f38
_G.CDOTA_Modifier_Lua table table: 0x001353e0
_G.CDOTA_Modifier_Lua.AllowIllusionDuplicate function function: 0x00135a18
_G.CDOTA_Modifier_Lua.CanParentBeAutoAttacked function function: 0x001362b8
_G.CDOTA_Modifier_Lua.DestroyOnExpire function function: 0x00135eb0
_G.CDOTA_Modifier_Lua.FDesc table table: 0x00135468
_G.CDOTA_Modifier_Lua.FDesc.AllowIllusionDuplicate userdata bool AllowIllusionDuplicate()
True/false if this modifier is active on illusions.
_G.CDOTA_Modifier_Lua.FDesc.CanParentBeAutoAttacked userdata bool CanParentBeAutoAttacked()

_G.CDOTA_Modifier_Lua.FDesc.DestroyOnExpire userdata bool DestroyOnExpire()
True/false if this buff is removed when the duration expires.
_G.CDOTA_Modifier_Lua.FDesc.GetAttributes userdata int GetAttributes()
Return the types of attributes applied to this modifier (enum value from DOTAModifierAttribute_t
_G.CDOTA_Modifier_Lua.FDesc.GetAuraDuration userdata float GetAuraDuration()
Returns aura stickiness
_G.CDOTA_Modifier_Lua.FDesc.GetAuraEntityReject userdata bool GetAuraEntityReject(handle hEntity)
Return true/false if this entity should receive the aura under specific conditions
_G.CDOTA_Modifier_Lua.FDesc.GetAuraRadius userdata int GetAuraRadius()
Return the range around the parent this aura tries to apply its buff.
_G.CDOTA_Modifier_Lua.FDesc.GetAuraSearchFlags userdata int GetAuraSearchFlags()
Return the unit flags this aura respects when placing buffs.
_G.CDOTA_Modifier_Lua.FDesc.GetAuraSearchTeam userdata int GetAuraSearchTeam()
Return the teams this aura applies its buff to.
_G.CDOTA_Modifier_Lua.FDesc.GetAuraSearchType userdata int GetAuraSearchType()
Return the unit classifications this aura applies its buff to.
_G.CDOTA_Modifier_Lua.FDesc.GetEffectAttachType userdata int GetEffectAttachType()
Return the attach type of the particle system from GetEffectName.
_G.CDOTA_Modifier_Lua.FDesc.GetEffectName userdata string GetEffectName()
Return the name of the particle system that is created while this modifier is active.
_G.CDOTA_Modifier_Lua.FDesc.GetHeroEffectName userdata string GetHeroEffectName()
Return the name of the hero effect particle system that is created while this modifier is active.
_G.CDOTA_Modifier_Lua.FDesc.GetModifierAura userdata string GetModifierAura()
The name of the secondary modifier that will be applied by this modifier (if it is an aura).
_G.CDOTA_Modifier_Lua.FDesc.GetPriority userdata int GetPriority()
Return the priority order this modifier will be applied over others.
_G.CDOTA_Modifier_Lua.FDesc.GetStatusEffectName userdata string GetStatusEffectName()
Return the name of the status effect particle system that is created while this modifier is active.
_G.CDOTA_Modifier_Lua.FDesc.GetTexture userdata string GetTexture()
Return the name of the buff icon to be shown for this modifier.
_G.CDOTA_Modifier_Lua.FDesc.HeroEffectPriority userdata int HeroEffectPriority()
Relationship of this hero effect with those from other buffs (higher is more likely to be shown).
_G.CDOTA_Modifier_Lua.FDesc.IsAura userdata bool IsAura()
True/false if this modifier is an aura.
_G.CDOTA_Modifier_Lua.FDesc.IsAuraActiveOnDeath userdata bool IsAuraActiveOnDeath()
True/false if this aura provides buffs when the parent is dead.
_G.CDOTA_Modifier_Lua.FDesc.IsDebuff userdata bool IsDebuff()
True/false if this modifier should be displayed as a debuff.
_G.CDOTA_Modifier_Lua.FDesc.IsHidden userdata bool IsHidden()
True/false if this modifier should be displayed on the buff bar.
_G.CDOTA_Modifier_Lua.FDesc.IsPermanent userdata bool IsPermanent()

_G.CDOTA_Modifier_Lua.FDesc.IsPurgable userdata bool IsPurgable()
True/false if this modifier can be purged.
_G.CDOTA_Modifier_Lua.FDesc.IsPurgeException userdata bool IsPurgeException()
True/false if this modifier can be purged by strong dispels.
_G.CDOTA_Modifier_Lua.FDesc.IsStunDebuff userdata bool IsStunDebuff()
True/false if this modifier is considered a stun for purge reasons.
_G.CDOTA_Modifier_Lua.FDesc.OnCreated userdata void OnCreated(handle table)
Runs when the modifier is created.
_G.CDOTA_Modifier_Lua.FDesc.OnDestroy userdata void OnDestroy()
Runs when the modifier is destroyed (after unit loses modifier).
_G.CDOTA_Modifier_Lua.FDesc.OnIntervalThink userdata void OnIntervalThink()
Runs when the think interval occurs.
_G.CDOTA_Modifier_Lua.FDesc.OnRefresh userdata void OnRefresh(handle table)
Runs when the modifier is refreshed.
_G.CDOTA_Modifier_Lua.FDesc.OnRemoved userdata void OnRemoved()
Runs when the modifier is destroyed (before unit loses modifier).
_G.CDOTA_Modifier_Lua.FDesc.OnStackCountChanged userdata void OnStackCountChanged(int iStackCount)
Runs when stack count changes (param is old count).
_G.CDOTA_Modifier_Lua.FDesc.RemoveOnDeath userdata bool RemoveOnDeath()
True/false if this modifier is removed when the parent dies.
_G.CDOTA_Modifier_Lua.FDesc.ShouldUseOverheadOffset userdata bool ShouldUseOverheadOffset()
Apply the overhead offset to the attached effect.
_G.CDOTA_Modifier_Lua.FDesc.StatusEffectPriority userdata int StatusEffectPriority()
Relationship of this status effect with those from other buffs (higher is more likely to be shown).
_G.CDOTA_Modifier_Lua.GetAttributes function function: 0x001365d0
_G.CDOTA_Modifier_Lua.GetAuraDuration function function: 0x001368f0
_G.CDOTA_Modifier_Lua.GetAuraEntityReject function function: 0x00137770
_G.CDOTA_Modifier_Lua.GetAuraRadius function function: 0x001376f0
_G.CDOTA_Modifier_Lua.GetAuraSearchFlags function function: 0x00137060
_G.CDOTA_Modifier_Lua.GetAuraSearchTeam function function: 0x00136948
_G.CDOTA_Modifier_Lua.GetAuraSearchType function function: 0x00136fd8
_G.CDOTA_Modifier_Lua.GetEffectAttachType function function: 0x00136440
_G.CDOTA_Modifier_Lua.GetEffectName function function: 0x001363c0
_G.CDOTA_Modifier_Lua.GetHeroEffectName function function: 0x001367e0
_G.CDOTA_Modifier_Lua.GetModifierAura function function: 0x00136340
_G.CDOTA_Modifier_Lua.GetPriority function function: 0x00136650
_G.CDOTA_Modifier_Lua.GetStatusEffectName function function: 0x001366d0
_G.CDOTA_Modifier_Lua.GetTexture function function: 0x00136550
_G.CDOTA_Modifier_Lua.HeroEffectPriority function function: 0x00136868
_G.CDOTA_Modifier_Lua.IsAura function function: 0x001359a0
_G.CDOTA_Modifier_Lua.IsAuraActiveOnDeath function function: 0x00135b20
_G.CDOTA_Modifier_Lua.IsDebuff function function: 0x00135768
_G.CDOTA_Modifier_Lua.IsHidden function function: 0x001357c0
_G.CDOTA_Modifier_Lua.IsNull function function: 0x00135408
_G.CDOTA_Modifier_Lua.IsPermanent function function: 0x00135f30
_G.CDOTA_Modifier_Lua.IsPurgable function function: 0x00135840
_G.CDOTA_Modifier_Lua.IsPurgeException function function: 0x001358c0
_G.CDOTA_Modifier_Lua.IsStunDebuff function function: 0x00135948
_G.CDOTA_Modifier_Lua.OnCreated function function: 0x00135510
_G.CDOTA_Modifier_Lua.OnDestroy function function: 0x00135430
_G.CDOTA_Modifier_Lua.OnIntervalThink function function: 0x00135490
_G.CDOTA_Modifier_Lua.OnRefresh function function: 0x00135590
_G.CDOTA_Modifier_Lua.OnRemoved function function: 0x00135660
_G.CDOTA_Modifier_Lua.OnStackCountChanged function function: 0x001356e0
_G.CDOTA_Modifier_Lua.RemoveOnDeath function function: 0x00135aa0
_G.CDOTA_Modifier_Lua.ShouldUseOverheadOffset function function: 0x001364c8
_G.CDOTA_Modifier_Lua.StatusEffectPriority function function: 0x00136758
_G.CDOTA_Modifier_Lua_Horizontal_Motion table table: 0x001378f8
_G.CDOTA_Modifier_Lua_Horizontal_Motion.ApplyHorizontalMotionController function function: 0x00133aa0
_G.CDOTA_Modifier_Lua_Horizontal_Motion.FDesc table table: 0x00137980
_G.CDOTA_Modifier_Lua_Horizontal_Motion.FDesc.ApplyHorizontalMotionController userdata bool ApplyHorizontalMotionController()
Starts the horizontal motion controller effects for this buff.  Returns true if successful.
_G.CDOTA_Modifier_Lua_Horizontal_Motion.FDesc.GetPriority userdata int GetPriority()
Get the priority
_G.CDOTA_Modifier_Lua_Horizontal_Motion.FDesc.OnHorizontalMotionInterrupted userdata void OnHorizontalMotionInterrupted()
Called when the motion gets interrupted.
_G.CDOTA_Modifier_Lua_Horizontal_Motion.FDesc.SetPriority userdata void SetPriority(int nMotionPriority)
Set the priority
_G.CDOTA_Modifier_Lua_Horizontal_Motion.FDesc.UpdateHorizontalMotion userdata void UpdateHorizontalMotion(handle me, float dt)
Perform any motion from the given interval on the NPC.
_G.CDOTA_Modifier_Lua_Horizontal_Motion.GetPriority function function: 0x00133a48
_G.CDOTA_Modifier_Lua_Horizontal_Motion.IsNull function function: 0x00137920
_G.CDOTA_Modifier_Lua_Horizontal_Motion.OnHorizontalMotionInterrupted function function: 0x0012d1d0
_G.CDOTA_Modifier_Lua_Horizontal_Motion.SetPriority function function: 0x001379a8
_G.CDOTA_Modifier_Lua_Horizontal_Motion.UpdateHorizontalMotion function function: 0x00137948
_G.CDOTA_Modifier_Lua_Motion_Both table table: 0x00136170
_G.CDOTA_Modifier_Lua_Motion_Both.ApplyHorizontalMotionController function function: 0x00167730
_G.CDOTA_Modifier_Lua_Motion_Both.ApplyVerticalMotionController function function: 0x001361c0
_G.CDOTA_Modifier_Lua_Motion_Both.FDesc table table: 0x001361f8
_G.CDOTA_Modifier_Lua_Motion_Both.FDesc.ApplyHorizontalMotionController userdata bool ApplyHorizontalMotionController()
Starts the horizontal motion controller effects for this buff.  Returns true if successful.
_G.CDOTA_Modifier_Lua_Motion_Both.FDesc.ApplyVerticalMotionController userdata bool ApplyVerticalMotionController()
Starts the vertical motion controller effects for this buff.  Returns true if successful.
_G.CDOTA_Modifier_Lua_Motion_Both.FDesc.GetPriority userdata int GetPriority()
Get the priority
_G.CDOTA_Modifier_Lua_Motion_Both.FDesc.OnHorizontalMotionInterrupted userdata void OnHorizontalMotionInterrupted()
Called when the motion gets interrupted.
_G.CDOTA_Modifier_Lua_Motion_Both.FDesc.OnVerticalMotionInterrupted userdata void OnVerticalMotionInterrupted()
Called when the motion gets interrupted.
_G.CDOTA_Modifier_Lua_Motion_Both.FDesc.SetPriority userdata void SetPriority(int nMotionPriority)
Set the priority
_G.CDOTA_Modifier_Lua_Motion_Both.FDesc.UpdateHorizontalMotion userdata void UpdateHorizontalMotion(handle me, float dt)
Perform any motion from the given interval on the NPC.
_G.CDOTA_Modifier_Lua_Motion_Both.FDesc.UpdateVerticalMotion userdata void UpdateVerticalMotion(handle me, float dt)
Perform any motion from the given interval on the NPC.
_G.CDOTA_Modifier_Lua_Motion_Both.GetPriority function function: 0x00136278
_G.CDOTA_Modifier_Lua_Motion_Both.IsNull function function: 0x00136198
_G.CDOTA_Modifier_Lua_Motion_Both.OnHorizontalMotionInterrupted function function: 0x00167828
_G.CDOTA_Modifier_Lua_Motion_Both.OnVerticalMotionInterrupted function function: 0x00167788
_G.CDOTA_Modifier_Lua_Motion_Both.SetPriority function function: 0x00136220
_G.CDOTA_Modifier_Lua_Motion_Both.UpdateHorizontalMotion function function: 0x00167890
_G.CDOTA_Modifier_Lua_Motion_Both.UpdateVerticalMotion function function: 0x001679b0
_G.CDOTA_Modifier_Lua_Vertical_Motion table table: 0x0012cc80
_G.CDOTA_Modifier_Lua_Vertical_Motion.ApplyVerticalMotionController function function: 0x00135c40
_G.CDOTA_Modifier_Lua_Vertical_Motion.FDesc table table: 0x0012cd08
_G.CDOTA_Modifier_Lua_Vertical_Motion.FDesc.ApplyVerticalMotionController userdata bool ApplyVerticalMotionController()
Starts the vertical motion controller effects for this buff.  Returns true if successful.
_G.CDOTA_Modifier_Lua_Vertical_Motion.FDesc.GetMotionPriority userdata int GetMotionPriority()
Get the priority
_G.CDOTA_Modifier_Lua_Vertical_Motion.FDesc.OnVerticalMotionInterrupted userdata void OnVerticalMotionInterrupted()
Called when the motion gets interrupted.
_G.CDOTA_Modifier_Lua_Vertical_Motion.FDesc.SetMotionPriority userdata void SetMotionPriority(int nMotionPriority)
Set the priority
_G.CDOTA_Modifier_Lua_Vertical_Motion.FDesc.UpdateVerticalMotion userdata void UpdateVerticalMotion(handle me, float dt)
Perform any motion from the given interval on the NPC.
_G.CDOTA_Modifier_Lua_Vertical_Motion.GetMotionPriority function function: 0x00135bb8
_G.CDOTA_Modifier_Lua_Vertical_Motion.IsNull function function: 0x0012cca8
_G.CDOTA_Modifier_Lua_Vertical_Motion.OnVerticalMotionInterrupted function function: 0x00135e58
_G.CDOTA_Modifier_Lua_Vertical_Motion.SetMotionPriority function function: 0x0012cd30
_G.CDOTA_Modifier_Lua_Vertical_Motion.UpdateVerticalMotion function function: 0x00135b80
_G.CDOTA_PlayerResource table table: 0x001a6150
_G.CDOTA_PlayerResource.AddAegisPickup function function: 0x001a8238
_G.CDOTA_PlayerResource.AddClaimedFarm function function: 0x001a8810
_G.CDOTA_PlayerResource.AddGoldSpentOnSupport function function: 0x001a6d90
_G.CDOTA_PlayerResource.AddRunePickup function function: 0x001a8338
_G.CDOTA_PlayerResource.AreUnitsSharedWithPlayerID function function: 0x001ab128
_G.CDOTA_PlayerResource.CanRepick function function: 0x001a76d8
_G.CDOTA_PlayerResource.ClearKillsMatrix function function: 0x001a8a28
_G.CDOTA_PlayerResource.ClearLastHitMultikill function function: 0x001a7eb8
_G.CDOTA_PlayerResource.ClearLastHitStreak function function: 0x001a7d80
_G.CDOTA_PlayerResource.ClearRawPlayerDamageMatrix function function: 0x001a8998
_G.CDOTA_PlayerResource.ClearStreak function function: 0x001a7238
_G.CDOTA_PlayerResource.FDesc table table: 0x001a61d8
_G.CDOTA_PlayerResource.FDesc.AddAegisPickup userdata void AddAegisPickup(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.AddClaimedFarm userdata void AddClaimedFarm(int iPlayerID, float flFarmValue, bool bEarnedValue)

_G.CDOTA_PlayerResource.FDesc.AddGoldSpentOnSupport userdata void AddGoldSpentOnSupport(int iPlayerID, int iCost)

_G.CDOTA_PlayerResource.FDesc.AddRunePickup userdata void AddRunePickup(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.AreUnitsSharedWithPlayerID userdata bool AreUnitsSharedWithPlayerID(int nUnitOwnerPlayerID, int nOtherPlayerID)

_G.CDOTA_PlayerResource.FDesc.CanRepick userdata bool CanRepick(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.ClearKillsMatrix userdata void ClearKillsMatrix(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.ClearLastHitMultikill userdata void ClearLastHitMultikill(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.ClearLastHitStreak userdata void ClearLastHitStreak(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.ClearRawPlayerDamageMatrix userdata void ClearRawPlayerDamageMatrix(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.ClearStreak userdata void ClearStreak(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetAegisPickups userdata int GetAegisPickups(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetAssists userdata int GetAssists(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetBroadcasterChannel userdata unsigned GetBroadcasterChannel(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetBroadcasterChannelSlot userdata unsigned GetBroadcasterChannelSlot(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetClaimedDenies userdata int GetClaimedDenies(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetClaimedFarm userdata float GetClaimedFarm(int iPlayerID, bool bOnlyEarned)

_G.CDOTA_PlayerResource.FDesc.GetClaimedMisses userdata int GetClaimedMisses(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetConnectionState userdata <unknown> GetConnectionState(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetCreepDamageTaken userdata int GetCreepDamageTaken(int iPlayerID, bool bTotal)

_G.CDOTA_PlayerResource.FDesc.GetCustomBuybackCooldown userdata float GetCustomBuybackCooldown(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetCustomBuybackCost userdata int GetCustomBuybackCost(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetCustomTeamAssignment userdata int GetCustomTeamAssignment(int iPlayerID)
Get the current custom team assignment for this player.
_G.CDOTA_PlayerResource.FDesc.GetDamageDoneToHero userdata int GetDamageDoneToHero(int iPlayerID, int iVictimID)

_G.CDOTA_PlayerResource.FDesc.GetDeaths userdata int GetDeaths(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetDenies userdata int GetDenies(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetEventPointsForPlayerID userdata unsigned GetEventPointsForPlayerID(int nPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetEventPremiumPoints userdata unsigned GetEventPremiumPoints(int nPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetEventRanks userdata <unknown> GetEventRanks(int nPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetGold userdata int GetGold(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetGoldLostToDeath userdata int GetGoldLostToDeath(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetGoldPerMin userdata float GetGoldPerMin(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetGoldSpentOnBuybacks userdata int GetGoldSpentOnBuybacks(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetGoldSpentOnConsumables userdata int GetGoldSpentOnConsumables(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetGoldSpentOnItems userdata int GetGoldSpentOnItems(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetGoldSpentOnSupport userdata int GetGoldSpentOnSupport(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetHealing userdata float GetHealing(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetHeroDamageTaken userdata int GetHeroDamageTaken(int iPlayerID, bool bTotal)

_G.CDOTA_PlayerResource.FDesc.GetKills userdata int GetKills(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetKillsDoneToHero userdata int GetKillsDoneToHero(int iPlayerID, int iVictimID)

_G.CDOTA_PlayerResource.FDesc.GetLastHitMultikill userdata int GetLastHitMultikill(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetLastHitStreak userdata int GetLastHitStreak(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetLastHits userdata int GetLastHits(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetLevel userdata int GetLevel(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetMisses userdata int GetMisses(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetNearbyCreepDeaths userdata int GetNearbyCreepDeaths(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetNetWorth userdata int GetNetWorth(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetNthCourierForTeam userdata handle GetNthCourierForTeam(int nCourierIndex, int nTeamNumber)

_G.CDOTA_PlayerResource.FDesc.GetNthPlayerIDOnTeam userdata int GetNthPlayerIDOnTeam(int iTeamNumber, int iNthPlayer)

_G.CDOTA_PlayerResource.FDesc.GetNumConsumablesPurchased userdata int GetNumConsumablesPurchased(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetNumCouriersForTeam userdata int GetNumCouriersForTeam(int nTeamNumber)

_G.CDOTA_PlayerResource.FDesc.GetNumItemsPurchased userdata int GetNumItemsPurchased(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetPartyID userdata uint64 GetPartyID(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetPlayer userdata handle GetPlayer(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetPlayerCount userdata int GetPlayerCount()
Includes spectators and players not assigned to a team
_G.CDOTA_PlayerResource.FDesc.GetPlayerCountForTeam userdata int GetPlayerCountForTeam(int iTeam)

_G.CDOTA_PlayerResource.FDesc.GetPlayerLoadedCompletely userdata bool GetPlayerLoadedCompletely(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetPlayerName userdata string GetPlayerName(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetRawPlayerDamage userdata int GetRawPlayerDamage(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetReliableGold userdata int GetReliableGold(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetRespawnSeconds userdata int GetRespawnSeconds(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetRoshanKills userdata int GetRoshanKills(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetRunePickups userdata int GetRunePickups(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetSelectedHeroEntity userdata handle GetSelectedHeroEntity(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetSelectedHeroID userdata int GetSelectedHeroID(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetSelectedHeroName userdata string GetSelectedHeroName(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetSteamAccountID userdata unsigned GetSteamAccountID(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetSteamID userdata uint64 GetSteamID(int iPlayerID)
Get the 64 bit steam ID for a given player.
_G.CDOTA_PlayerResource.FDesc.GetStreak userdata int GetStreak(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetStuns userdata float GetStuns(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetTeam userdata int GetTeam(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetTeamKills userdata int GetTeamKills(int iTeam)

_G.CDOTA_PlayerResource.FDesc.GetTeamPlayerCount userdata int GetTeamPlayerCount()
Players on a valid team (radiant, dire, or custom*) who haven't abandoned the game
_G.CDOTA_PlayerResource.FDesc.GetTimeOfLastConsumablePurchase userdata float GetTimeOfLastConsumablePurchase(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetTimeOfLastDeath userdata float GetTimeOfLastDeath(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetTimeOfLastItemPurchase userdata float GetTimeOfLastItemPurchase(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetTotalEarnedGold userdata int GetTotalEarnedGold(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetTotalEarnedXP userdata int GetTotalEarnedXP(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetTotalGoldSpent userdata int GetTotalGoldSpent(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetTowerDamageTaken userdata int GetTowerDamageTaken(int iPlayerID, bool bTotal)

_G.CDOTA_PlayerResource.FDesc.GetTowerKills userdata int GetTowerKills(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetUnitShareMaskForPlayer userdata int GetUnitShareMaskForPlayer(int nPlayerID, int nOtherPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetUnreliableGold userdata int GetUnreliableGold(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.GetXPPerMin userdata float GetXPPerMin(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.HasCustomGameTicketForPlayerID userdata bool HasCustomGameTicketForPlayerID(int iPlayerID)
Does this player have a custom game ticket for this game?
_G.CDOTA_PlayerResource.FDesc.HasRandomed userdata bool HasRandomed(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.HasSelectedHero userdata bool HasSelectedHero(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.HaveAllPlayersJoined userdata bool HaveAllPlayersJoined()

_G.CDOTA_PlayerResource.FDesc.IncrementAssists userdata void IncrementAssists(int iPlayerID, int iVictimID)

_G.CDOTA_PlayerResource.FDesc.IncrementClaimedDenies userdata void IncrementClaimedDenies(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.IncrementClaimedMisses userdata void IncrementClaimedMisses(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.IncrementDeaths userdata void IncrementDeaths(int iPlayerID, int iKillerID)

_G.CDOTA_PlayerResource.FDesc.IncrementDenies userdata void IncrementDenies(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.IncrementKills userdata void IncrementKills(int iPlayerID, int iVictimID)

_G.CDOTA_PlayerResource.FDesc.IncrementLastHitMultikill userdata void IncrementLastHitMultikill(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.IncrementLastHitStreak userdata void IncrementLastHitStreak(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.IncrementLastHits userdata void IncrementLastHits(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.IncrementMisses userdata void IncrementMisses(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.IncrementNearbyCreepDeaths userdata void IncrementNearbyCreepDeaths(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.IncrementStreak userdata void IncrementStreak(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.IncrementTotalEarnedXP userdata void IncrementTotalEarnedXP(int iPlayerID, int iXP, int nReason)

_G.CDOTA_PlayerResource.FDesc.IsBroadcaster userdata bool IsBroadcaster(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.IsDisableHelpSetForPlayerID userdata bool IsDisableHelpSetForPlayerID(int nPlayerID, int nOtherPlayerID)

_G.CDOTA_PlayerResource.FDesc.IsFakeClient userdata bool IsFakeClient(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.IsHeroSelected userdata bool IsHeroSelected(string pHeroname)

_G.CDOTA_PlayerResource.FDesc.IsHeroSharedWithPlayerID userdata bool IsHeroSharedWithPlayerID(int nUnitOwnerPlayerID, int nOtherPlayerID)

_G.CDOTA_PlayerResource.FDesc.IsValidPlayer userdata bool IsValidPlayer(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.IsValidPlayerID userdata bool IsValidPlayerID(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.IsValidTeamPlayer userdata bool IsValidTeamPlayer(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.IsValidTeamPlayerID userdata bool IsValidTeamPlayerID(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.ModifyGold userdata int ModifyGold(int iPlayerID, int iGoldChange, bool bReliable, int nReason)

_G.CDOTA_PlayerResource.FDesc.NumPlayers userdata int NumPlayers()

_G.CDOTA_PlayerResource.FDesc.NumTeamPlayers userdata int NumTeamPlayers()

_G.CDOTA_PlayerResource.FDesc.RecordConsumableAbilityChargeChange userdata void RecordConsumableAbilityChargeChange(int iPlayerID, int item_definition_index, int nChargeIncrementOrDecrement)
Increment or decrement consumable charges (nPlayerID, item_definition_index, nChargeIncrementOrDecrement)
_G.CDOTA_PlayerResource.FDesc.ReplaceHeroWith userdata handle ReplaceHeroWith(int iPlayerID, string pszHeroClass, int nGold, int nXP)
(playerID, heroClassName, gold, XP) - replaces the player's hero with a new one of the specified class, gold and XP
_G.CDOTA_PlayerResource.FDesc.ResetBuybackCostTime userdata void ResetBuybackCostTime(int nPlayerID)

_G.CDOTA_PlayerResource.FDesc.ResetTotalEarnedGold userdata void ResetTotalEarnedGold(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.SetBuybackCooldownTime userdata void SetBuybackCooldownTime(int nPlayerID, float flBuybackCooldown)

_G.CDOTA_PlayerResource.FDesc.SetBuybackGoldLimitTime userdata void SetBuybackGoldLimitTime(int nPlayerID, float flBuybackCooldown)

_G.CDOTA_PlayerResource.FDesc.SetCameraTarget userdata void SetCameraTarget(int nPlayerID, handle hTarget)
(playerID, entity) - force the given player's camera to follow the given entity
_G.CDOTA_PlayerResource.FDesc.SetCanRepick userdata void SetCanRepick(int iPlayerID, bool bCanRepick)

_G.CDOTA_PlayerResource.FDesc.SetCustomBuybackCooldown userdata void SetCustomBuybackCooldown(int iPlayerID, float flCooldownTime)
Set the buyback cooldown for this player.
_G.CDOTA_PlayerResource.FDesc.SetCustomBuybackCost userdata void SetCustomBuybackCost(int iPlayerID, int iGoldCost)
Set the buyback cost for this player.
_G.CDOTA_PlayerResource.FDesc.SetCustomPlayerColor userdata void SetCustomPlayerColor(int iPlayerID, int r, int g, int b)
Set custom color for player (minimap, scoreboard, etc)
_G.CDOTA_PlayerResource.FDesc.SetCustomTeamAssignment userdata void SetCustomTeamAssignment(int iPlayerID, int iTeamAssignment)
Set custom team assignment for this player.
_G.CDOTA_PlayerResource.FDesc.SetGold userdata void SetGold(int iPlayerID, int iGold, bool bReliable)

_G.CDOTA_PlayerResource.FDesc.SetHasRandomed userdata void SetHasRandomed(int iPlayerID)

_G.CDOTA_PlayerResource.FDesc.SetLastBuybackTime userdata void SetLastBuybackTime(int iPlayerID, int iLastBuybackTime)

_G.CDOTA_PlayerResource.FDesc.SetOverrideSelectionEntity userdata void SetOverrideSelectionEntity(int nPlayerID, handle hEntity)
Set the forced selection entity for a player.
_G.CDOTA_PlayerResource.FDesc.SetUnitShareMaskForPlayer userdata void SetUnitShareMaskForPlayer(int nPlayerID, int nOtherPlayerID, int nFlag, bool bState)

_G.CDOTA_PlayerResource.FDesc.SpendGold userdata void SpendGold(int iPlayerID, int iCost, int iReason)

_G.CDOTA_PlayerResource.FDesc.UpdateTeamSlot userdata void UpdateTeamSlot(int iPlayerID, int iTeamNumber, int desiredSlot)

_G.CDOTA_PlayerResource.FDesc.WhoSelectedHero userdata int WhoSelectedHero(string pHeroFilename)

_G.CDOTA_PlayerResource.GetAegisPickups function function: 0x001a81b8
_G.CDOTA_PlayerResource.GetAssists function function: 0x001a6ba0
_G.CDOTA_PlayerResource.GetBroadcasterChannel function function: 0x001aa8a8
_G.CDOTA_PlayerResource.GetBroadcasterChannelSlot function function: 0x001aa930
_G.CDOTA_PlayerResource.GetClaimedDenies function function: 0x001aa5c8
_G.CDOTA_PlayerResource.GetClaimedFarm function function: 0x001a8890
_G.CDOTA_PlayerResource.GetClaimedMisses function function: 0x001aa4b8
_G.CDOTA_PlayerResource.GetConnectionState function function: 0x001aace0
_G.CDOTA_PlayerResource.GetCreepDamageTaken function function: 0x001e1a58
_G.CDOTA_PlayerResource.GetCreepDamageTaken_Engine function function: 0x001a8b38
_G.CDOTA_PlayerResource.GetCustomBuybackCooldown function function: 0x001ab5b0
_G.CDOTA_PlayerResource.GetCustomBuybackCost function function: 0x001ab6c8
_G.CDOTA_PlayerResource.GetCustomTeamAssignment function function: 0x001ab7d8
_G.CDOTA_PlayerResource.GetDamageDoneToHero function function: 0x001a8c48
_G.CDOTA_PlayerResource.GetDeaths function function: 0x001a6730
_G.CDOTA_PlayerResource.GetDenies function function: 0x001a80d0
_G.CDOTA_PlayerResource.GetEventPointsForPlayerID function function: 0x001aae70
_G.CDOTA_PlayerResource.GetEventPremiumPoints function function: 0x001aaf00
_G.CDOTA_PlayerResource.GetEventPremiumPointsGranted function function: 0x001aaf00
_G.CDOTA_PlayerResource.GetEventRankGranted function function: 0x001aaf88
_G.CDOTA_PlayerResource.GetEventRanks function function: 0x001aaf88
_G.CDOTA_PlayerResource.GetGold function function: 0x001a73f0
_G.CDOTA_PlayerResource.GetGoldLostToDeath function function: 0x001a6fb8
_G.CDOTA_PlayerResource.GetGoldPerMin function function: 0x001a70c8
_G.CDOTA_PlayerResource.GetGoldSpentOnBuybacks function function: 0x001a7040
_G.CDOTA_PlayerResource.GetGoldSpentOnConsumables function function: 0x001a6ea0
_G.CDOTA_PlayerResource.GetGoldSpentOnItems function function: 0x001a6f30
_G.CDOTA_PlayerResource.GetGoldSpentOnSupport function function: 0x001a6e18
_G.CDOTA_PlayerResource.GetHealing function function: 0x001a6808
_G.CDOTA_PlayerResource.GetHeroDamageTaken function function: 0x001e1a78
_G.CDOTA_PlayerResource.GetHeroDamageTaken_Engine function function: 0x001a8bc0
_G.CDOTA_PlayerResource.GetKills function function: 0x001a6b48
_G.CDOTA_PlayerResource.GetKillsDoneToHero function function: 0x001a75d0
_G.CDOTA_PlayerResource.GetLastHitMultikill function function: 0x001a7f10
_G.CDOTA_PlayerResource.GetLastHitStreak function function: 0x001a7dd8
_G.CDOTA_PlayerResource.GetLastHits function function: 0x001a7cd0
_G.CDOTA_PlayerResource.GetLevel function function: 0x001a65b8
_G.CDOTA_PlayerResource.GetMisses function function: 0x001aa6d0
_G.CDOTA_PlayerResource.GetNearbyCreepDeaths function function: 0x001a7ff0
_G.CDOTA_PlayerResource.GetNetWorth function function: 0x001a7448
_G.CDOTA_PlayerResource.GetNthCourierForTeam function function: 0x001ab360
_G.CDOTA_PlayerResource.GetNthPlayerIDOnTeam function function: 0x001a7bf0
_G.CDOTA_PlayerResource.GetNumConsumablesPurchased function function: 0x001a83b8
_G.CDOTA_PlayerResource.GetNumCouriersForTeam function function: 0x001ab2d8
_G.CDOTA_PlayerResource.GetNumItemsPurchased function function: 0x001a8448
_G.CDOTA_PlayerResource.GetPartyID function function: 0x001aab48
_G.CDOTA_PlayerResource.GetPlayer function function: 0x001a7b70
_G.CDOTA_PlayerResource.GetPlayerCount function function: 0x001a6890
_G.CDOTA_PlayerResource.GetPlayerCountForTeam function function: 0x001a6408
_G.CDOTA_PlayerResource.GetPlayerLoadedCompletely function function: 0x001aac50
_G.CDOTA_PlayerResource.GetPlayerName function function: 0x001aadf0
_G.CDOTA_PlayerResource.GetRawPlayerDamage function function: 0x001a8910
_G.CDOTA_PlayerResource.GetReliableGold function function: 0x001a74c8
_G.CDOTA_PlayerResource.GetRespawnSeconds function function: 0x001a8678
_G.CDOTA_PlayerResource.GetRoshanKills function function: 0x001a6990
_G.CDOTA_PlayerResource.GetRunePickups function function: 0x001a82b8
_G.CDOTA_PlayerResource.GetSelectedHeroEntity function function: 0x001a7a68
_G.CDOTA_PlayerResource.GetSelectedHeroID function function: 0x001a78e0
_G.CDOTA_PlayerResource.GetSelectedHeroName function function: 0x001a7858
_G.CDOTA_PlayerResource.GetSteamAccountID function function: 0x001aaa40
_G.CDOTA_PlayerResource.GetSteamID function function: 0x001aa9c0
_G.CDOTA_PlayerResource.GetStreak function function: 0x001a7290
_G.CDOTA_PlayerResource.GetStuns function function: 0x001a6788
_G.CDOTA_PlayerResource.GetTeam function function: 0x001aa7d0
_G.CDOTA_PlayerResource.GetTeamKills function function: 0x001a6a10
_G.CDOTA_PlayerResource.GetTeamPlayerCount function function: 0x001a66a8
_G.CDOTA_PlayerResource.GetTimeOfLastConsumablePurchase function function: 0x001a8560
_G.CDOTA_PlayerResource.GetTimeOfLastDeath function function: 0x001a85f0
_G.CDOTA_PlayerResource.GetTimeOfLastItemPurchase function function: 0x001a84d0
_G.CDOTA_PlayerResource.GetTotalEarnedGold function function: 0x001a6c80
_G.CDOTA_PlayerResource.GetTotalEarnedXP function function: 0x001a8788
_G.CDOTA_PlayerResource.GetTotalGoldSpent function function: 0x001a6d08
_G.CDOTA_PlayerResource.GetTowerDamageTaken function function: 0x001e1a98
_G.CDOTA_PlayerResource.GetTowerDamageTaken_Engine function function: 0x001a8ab0
_G.CDOTA_PlayerResource.GetTowerKills function function: 0x001a6910
_G.CDOTA_PlayerResource.GetUnitShareMaskForPlayer function function: 0x001ab008
_G.CDOTA_PlayerResource.GetUnreliableGold function function: 0x001a7548
_G.CDOTA_PlayerResource.GetXPPerMin function function: 0x001a7148
_G.CDOTA_PlayerResource.HasCustomGameTicketForPlayerID function function: 0x001a8cd0
_G.CDOTA_PlayerResource.HasRandomed function function: 0x001a77d8
_G.CDOTA_PlayerResource.HasSelectedHero function function: 0x001a7af0
_G.CDOTA_PlayerResource.HaveAllPlayersJoined function function: 0x001aabc8
_G.CDOTA_PlayerResource.HeroLevelUp function function: 0x001e1af8
_G.CDOTA_PlayerResource.IncrementAssists function function: 0x001a6a98
_G.CDOTA_PlayerResource.IncrementClaimedDenies function function: 0x001aa540
_G.CDOTA_PlayerResource.IncrementClaimedMisses function function: 0x001a8128
_G.CDOTA_PlayerResource.IncrementDeaths function function: 0x001e1ab8
_G.CDOTA_PlayerResource.IncrementDeaths_Engine function function: 0x001a6af0
_G.CDOTA_PlayerResource.IncrementDenies function function: 0x001a8078
_G.CDOTA_PlayerResource.IncrementKills function function: 0x001a6610
_G.CDOTA_PlayerResource.IncrementLastHitMultikill function function: 0x001a7e60
_G.CDOTA_PlayerResource.IncrementLastHitStreak function function: 0x001a7d28
_G.CDOTA_PlayerResource.IncrementLastHits function function: 0x001a7c78
_G.CDOTA_PlayerResource.IncrementMisses function function: 0x001aa650
_G.CDOTA_PlayerResource.IncrementNearbyCreepDeaths function function: 0x001a7f98
_G.CDOTA_PlayerResource.IncrementStreak function function: 0x001a71e0
_G.CDOTA_PlayerResource.IncrementTotalEarnedXP function function: 0x001e1ad8
_G.CDOTA_PlayerResource.IncrementTotalEarnedXP_Engine function function: 0x001a8700
_G.CDOTA_PlayerResource.IsBroadcaster function function: 0x001aa828
_G.CDOTA_PlayerResource.IsDisableHelpSetForPlayerID function function: 0x001ab1b8
_G.CDOTA_PlayerResource.IsFakeClient function function: 0x001aaac8
_G.CDOTA_PlayerResource.IsHeroSelected function function: 0x001a7968
_G.CDOTA_PlayerResource.IsHeroSharedWithPlayerID function function: 0x001ab098
_G.CDOTA_PlayerResource.IsNull function function: 0x001a6178
_G.CDOTA_PlayerResource.IsValidPlayer function function: 0x001a6538
_G.CDOTA_PlayerResource.IsValidPlayerID function function: 0x001a6288
_G.CDOTA_PlayerResource.IsValidTeamPlayer function function: 0x001a6300
_G.CDOTA_PlayerResource.IsValidTeamPlayerID function function: 0x001a6200
_G.CDOTA_PlayerResource.ModifyGold function function: 0x001a72e8
_G.CDOTA_PlayerResource.NumPlayers function function: 0x001a64a8
_G.CDOTA_PlayerResource.NumTeamPlayers function function: 0x001a6388
_G.CDOTA_PlayerResource.RecordConsumableAbilityChargeChange function function: 0x001a8f40
_G.CDOTA_PlayerResource.ReplaceHeroWith function function: 0x001a8d60
_G.CDOTA_PlayerResource.ResetBuybackCostTime function function: 0x001ab498
_G.CDOTA_PlayerResource.ResetTotalEarnedGold function function: 0x001a6bf8
_G.CDOTA_PlayerResource.SetBuybackCooldownTime function function: 0x001ab3e8
_G.CDOTA_PlayerResource.SetBuybackGoldLimitTime function function: 0x001ab440
_G.CDOTA_PlayerResource.SetCameraTarget function function: 0x001a8de0
_G.CDOTA_PlayerResource.SetCanRepick function function: 0x001a7658
_G.CDOTA_PlayerResource.SetCustomBuybackCooldown function function: 0x001ab520
_G.CDOTA_PlayerResource.SetCustomBuybackCost function function: 0x001ab640
_G.CDOTA_PlayerResource.SetCustomPlayerColor function function: 0x001a8eb8
_G.CDOTA_PlayerResource.SetCustomTeamAssignment function function: 0x001ab750
_G.CDOTA_PlayerResource.SetGold function function: 0x001a7340
_G.CDOTA_PlayerResource.SetHasRandomed function function: 0x001a7758
_G.CDOTA_PlayerResource.SetLastBuybackTime function function: 0x001aad68
_G.CDOTA_PlayerResource.SetOverrideSelectionEntity function function: 0x001a8e60
_G.CDOTA_PlayerResource.SetUnitShareMaskForPlayer function function: 0x001ab248
_G.CDOTA_PlayerResource.SpendGold function function: 0x001a7398
_G.CDOTA_PlayerResource.UpdateTeamSlot function function: 0x001aa750
_G.CDOTA_PlayerResource.WhoSelectedHero function function: 0x001a79e8
_G.CDOTA_ShopTrigger table table: 0x001466a8
_G.CDOTA_ShopTrigger.FDesc table table: 0x00146730
_G.CDOTA_ShopTrigger.FDesc.GetShopType userdata int GetShopType()
Get the DOTA_SHOP_TYPE
_G.CDOTA_ShopTrigger.FDesc.SetShopType userdata void SetShopType(int eShopType)
Set the DOTA_SHOP_TYPE.
_G.CDOTA_ShopTrigger.GetShopType function function: 0x00146818
_G.CDOTA_ShopTrigger.IsNull function function: 0x001466d0
_G.CDOTA_ShopTrigger.SetShopType function function: 0x00146758
_G.CDOTA_SimpleObstruction table table: 0x001a52b0
_G.CDOTA_SimpleObstruction.FDesc table table: 0x001a5338
_G.CDOTA_SimpleObstruction.FDesc.IsEnabled userdata bool IsEnabled()
Returns whether the obstruction is currently active
_G.CDOTA_SimpleObstruction.FDesc.SetEnabled userdata void SetEnabled(bool bEnabled, bool bForce)
Enable or disable the obstruction
_G.CDOTA_SimpleObstruction.IsEnabled function function: 0x001a5360
_G.CDOTA_SimpleObstruction.IsNull function function: 0x001a52d8
_G.CDOTA_SimpleObstruction.SetEnabled function function: 0x001a5458
_G.CDOTA_Unit_Courier table table: 0x00145f20
_G.CDOTA_Unit_Courier.FDesc table table: 0x00145fa8
_G.CDOTA_Unit_Courier.IsNull function function: 0x00145f48
_G.CDOTA_Unit_Nian table table: 0x00144cb8
_G.CDOTA_Unit_Nian.FDesc table table: 0x00144d40
_G.CDOTA_Unit_Nian.FDesc.GetHorn userdata handle GetHorn()
Is the Nian horn?
_G.CDOTA_Unit_Nian.FDesc.GetTail userdata handle GetTail()
Is the Nian's tail broken?
_G.CDOTA_Unit_Nian.FDesc.IsHornAlive userdata bool IsHornAlive()
Is the Nian's horn broken?
_G.CDOTA_Unit_Nian.FDesc.IsTailAlive userdata bool IsTailAlive()
Is the Nian's tail broken?
_G.CDOTA_Unit_Nian.GetHorn function function: 0x00144ed0
_G.CDOTA_Unit_Nian.GetTail function function: 0x00144d08
_G.CDOTA_Unit_Nian.IsHornAlive function function: 0x00144d68
_G.CDOTA_Unit_Nian.IsNull function function: 0x00144ce0
_G.CDOTA_Unit_Nian.IsTailAlive function function: 0x00144e50
_G.CDebugOverlayScriptHelper table table: 0x0024c9c0
_G.CDebugOverlayScriptHelper.Axis function function: 0x0024ce50
_G.CDebugOverlayScriptHelper.Box function function: 0x0024cae8
_G.CDebugOverlayScriptHelper.BoxAngles function function: 0x0024cbd8
_G.CDebugOverlayScriptHelper.Capsule function function: 0x0024ccf8
_G.CDebugOverlayScriptHelper.Circle function function: 0x0024cf48
_G.CDebugOverlayScriptHelper.CircleScreenOriented function function: 0x0024cfc0
_G.CDebugOverlayScriptHelper.Cone function function: 0x0024d228
_G.CDebugOverlayScriptHelper.Cross function function: 0x0024d2b0
_G.CDebugOverlayScriptHelper.Cross3D function function: 0x0024d308
_G.CDebugOverlayScriptHelper.Cross3DOriented function function: 0x0024d380
_G.CDebugOverlayScriptHelper.DrawTickMarkedLine function function: 0x0024db10
_G.CDebugOverlayScriptHelper.EntityAttachments function function: 0x0024d580
_G.CDebugOverlayScriptHelper.EntityAxis function function: 0x0024d480
_G.CDebugOverlayScriptHelper.EntityBounds function function: 0x0024df50
_G.CDebugOverlayScriptHelper.EntitySkeleton function function: 0x0024d500
_G.CDebugOverlayScriptHelper.EntityText function function: 0x0024ded0
_G.CDebugOverlayScriptHelper.FDesc table table: 0x0024ca48
_G.CDebugOverlayScriptHelper.FDesc.Axis userdata void Axis(Vector, Quaternion, float, bool, float)
Draws an axis. Specify origin + orientation in world space.
_G.CDebugOverlayScriptHelper.FDesc.Box userdata void Box(Vector, Vector, int, int, int, int, bool, float)
Draws a world-space axis-aligned box. Specify bounds in world space.
_G.CDebugOverlayScriptHelper.FDesc.BoxAngles userdata void BoxAngles(Vector, Vector, Vector, Quaternion, int, int, int, int, bool, float)
Draws an oriented box at the origin. Specify bounds in local space.
_G.CDebugOverlayScriptHelper.FDesc.Capsule userdata void Capsule(Vector, Quaternion, float, float, int, int, int, int, bool, float)
Draws a capsule. Specify base in world space.
_G.CDebugOverlayScriptHelper.FDesc.Circle userdata void Circle(Vector, Quaternion, float, int, int, int, int, bool, float)
Draws a circle. Specify center in world space.
_G.CDebugOverlayScriptHelper.FDesc.CircleScreenOriented userdata void CircleScreenOriented(Vector, float, int, int, int, int, bool, float)
Draws a circle oriented to the screen. Specify center in world space.
_G.CDebugOverlayScriptHelper.FDesc.Cone userdata void Cone(Vector, Vector, float, float, int, int, int, int, bool, float)
Draws a wireframe cone. Specify endpoint and direction in world space.
_G.CDebugOverlayScriptHelper.FDesc.Cross userdata void Cross(Vector, float, int, int, int, int, bool, float)
Draws a screen-aligned cross. Specify origin in world space.
_G.CDebugOverlayScriptHelper.FDesc.Cross3D userdata void Cross3D(Vector, float, int, int, int, int, bool, float)
Draws a world-aligned cross. Specify origin in world space.
_G.CDebugOverlayScriptHelper.FDesc.Cross3DOriented userdata void Cross3DOriented(Vector, Quaternion, float, int, int, int, int, bool, float)
Draws an oriented cross. Specify origin in world space.
_G.CDebugOverlayScriptHelper.FDesc.DrawTickMarkedLine userdata void DrawTickMarkedLine(Vector, Vector, float, int, int, int, int, int, bool, float)
Draws a dashed line. Specify endpoints in world space.
_G.CDebugOverlayScriptHelper.FDesc.EntityAttachments userdata void EntityAttachments(ehandle, float, float)
Draws the attachments of the entity
_G.CDebugOverlayScriptHelper.FDesc.EntityAxis userdata void EntityAxis(ehandle, float, bool, float)
Draws the axis of the entity origin
_G.CDebugOverlayScriptHelper.FDesc.EntityBounds userdata void EntityBounds(ehandle, int, int, int, int, bool, float)
Draws bounds of an entity
_G.CDebugOverlayScriptHelper.FDesc.EntitySkeleton userdata void EntitySkeleton(ehandle, float)
Draws the skeleton of the entity
_G.CDebugOverlayScriptHelper.FDesc.EntityText userdata void EntityText(ehandle, int, string, int, int, int, int, float)
Draws text on an entity
_G.CDebugOverlayScriptHelper.FDesc.FilledRect2D userdata void FilledRect2D(Vector2D, Vector2D, int, int, int, int, float)
Draws a screen-space filled 2D rectangle. Coordinates are in pixels.
_G.CDebugOverlayScriptHelper.FDesc.HorzArrow userdata void HorzArrow(Vector, Vector, float, int, int, int, int, bool, float)
Draws a horizontal arrow. Specify endpoints in world space.
_G.CDebugOverlayScriptHelper.FDesc.Line userdata void Line(Vector, Vector, int, int, int, int, bool, float)
Draws a line between two points
_G.CDebugOverlayScriptHelper.FDesc.Line2D userdata void Line2D(Vector2D, Vector2D, int, int, int, int, float)
Draws a line between two points in screenspace
_G.CDebugOverlayScriptHelper.FDesc.PopDebugOverlayScope userdata void PopDebugOverlayScope()
Pops the identifier used to group overlays. Overlays marked with this identifier can be deleted in a big batch.
_G.CDebugOverlayScriptHelper.FDesc.PushAndClearDebugOverlayScope userdata void PushAndClearDebugOverlayScope(utlstringtoken)
Pushes an identifier used to group overlays. Deletes all existing overlays using this overlay id.
_G.CDebugOverlayScriptHelper.FDesc.PushDebugOverlayScope userdata void PushDebugOverlayScope(utlstringtoken)
Pushes an identifier used to group overlays. Overlays marked with this identifier can be deleted in a big batch.
_G.CDebugOverlayScriptHelper.FDesc.RemoveAllInScope userdata void RemoveAllInScope(utlstringtoken)
Removes all overlays marked with a specific identifier, regardless of their lifetime.
_G.CDebugOverlayScriptHelper.FDesc.SolidCone userdata void SolidCone(Vector, Vector, float, float, int, int, int, int, bool, float)
Draws a solid cone. Specify endpoint and direction in world space.
_G.CDebugOverlayScriptHelper.FDesc.Sphere userdata void Sphere(Vector, float, int, int, int, int, bool, float)
Draws a wireframe sphere. Specify center in world space.
_G.CDebugOverlayScriptHelper.FDesc.SweptBox userdata void SweptBox(Vector, Vector, Vector, Vector, Quaternion, int, int, int, int, float)
Draws a swept box. Specify endpoints in world space and the bounds in local space.
_G.CDebugOverlayScriptHelper.FDesc.Text userdata void Text(Vector, int, string, float, int, int, int, int, float)
Draws 2D text. Specify origin in world space.
_G.CDebugOverlayScriptHelper.FDesc.Texture userdata void Texture(string, Vector2D, Vector2D, int, int, int, int, Vector2D, Vector2D, float)
Draws a screen-space texture. Coordinates are in pixels.
_G.CDebugOverlayScriptHelper.FDesc.Triangle userdata void Triangle(Vector, Vector, Vector, int, int, int, int, bool, float)
Draws a filled triangle. Specify vertices in world space.
_G.CDebugOverlayScriptHelper.FDesc.UnitTestCycleOverlayRenderType userdata void UnitTestCycleOverlayRenderType()
Toggles the overlay render type, for unit tests
_G.CDebugOverlayScriptHelper.FDesc.VectorText3D userdata void VectorText3D(Vector, Quaternion, string, int, int, int, int, bool, float)
Draws 3D text. Specify origin + orientation in world space.
_G.CDebugOverlayScriptHelper.FDesc.VertArrow userdata void VertArrow(Vector, Vector, float, int, int, int, int, bool, float)
Draws a vertical arrow. Specify endpoints in world space.
_G.CDebugOverlayScriptHelper.FDesc.YawArrow userdata void YawArrow(Vector, float, float, float, int, int, int, int, bool, float)
Draws a arrow associated with a specific yaw. Specify endpoints in world space.
_G.CDebugOverlayScriptHelper.FilledRect2D function function: 0x0024cc58
_G.CDebugOverlayScriptHelper.HorzArrow function function: 0x0024d048
_G.CDebugOverlayScriptHelper.IsNull function function: 0x0024c9e8
_G.CDebugOverlayScriptHelper.Line function function: 0x0024ca70
_G.CDebugOverlayScriptHelper.Line2D function function: 0x0024cb60
_G.CDebugOverlayScriptHelper.PopDebugOverlayScope function function: 0x0024ddc0
_G.CDebugOverlayScriptHelper.PushAndClearDebugOverlayScope function function: 0x0024dca8
_G.CDebugOverlayScriptHelper.PushDebugOverlayScope function function: 0x0024dd38
_G.CDebugOverlayScriptHelper.RemoveAllInScope function function: 0x0024de48
_G.CDebugOverlayScriptHelper.SolidCone function function: 0x0024da90
_G.CDebugOverlayScriptHelper.Sphere function function: 0x0024cd60
_G.CDebugOverlayScriptHelper.SweptBox function function: 0x0024db98
_G.CDebugOverlayScriptHelper.Text function function: 0x0024cdd8
_G.CDebugOverlayScriptHelper.Texture function function: 0x0024d0a8
_G.CDebugOverlayScriptHelper.Triangle function function: 0x0024d400
_G.CDebugOverlayScriptHelper.UnitTestCycleOverlayRenderType function function: 0x0024dc18
_G.CDebugOverlayScriptHelper.VectorText3D function function: 0x0024cec8
_G.CDebugOverlayScriptHelper.VertArrow function function: 0x0024d1a8
_G.CDebugOverlayScriptHelper.YawArrow function function: 0x0024d128
_G.CDesc table table: 0x00117528
_G.CDesc.CBaseAnimating == _G.CBaseAnimating table table: 0x00179348
_G.CDesc.CBaseCombatCharacter == _G.CBaseCombatCharacter table table: 0x0017b3c0
_G.CDesc.CBaseEntity == _G.CBaseEntity table table: 0x00139950
_G.CDesc.CBaseFlex == _G.CBaseFlex table table: 0x0017af80
_G.CDesc.CBaseModelEntity == _G.CBaseModelEntity table table: 0x00178b68
_G.CDesc.CBasePlayer == _G.CBasePlayer table table: 0x001b5bb8
_G.CDesc.CBaseTrigger == _G.CBaseTrigger table table: 0x0017b920
_G.CDesc.CBodyComponent == _G.CBodyComponent table table: 0x00177fd8
_G.CDesc.CCustomGameEventManager == _G.CCustomGameEventManager table table: 0x001f1f78
_G.CDesc.CCustomNetTableManager == _G.CCustomNetTableManager table table: 0x001f1b98
_G.CDesc.CDOTABaseAbility == _G.CDOTABaseAbility table table: 0x00131d58
_G.CDesc.CDOTABaseGameMode == _G.CDOTABaseGameMode table table: 0x00146b08
_G.CDesc.CDOTAGameManager == _G.CDOTAGameManager table table: 0x00133250
_G.CDesc.CDOTAGamerules == _G.CDOTAGamerules table table: 0x001e22d0
_G.CDesc.CDOTAPlayer == _G.CDOTAPlayer table table: 0x001a90c0
_G.CDesc.CDOTATutorial == _G.CDOTATutorial table table: 0x001f0368
_G.CDesc.CDOTAVoteSystem == _G.CDOTAVoteSystem table table: 0x001f1838
_G.CDesc.CDOTA_Ability_Animation_Attack == _G.CDOTA_Ability_Animation_Attack table table: 0x00198378
_G.CDesc.CDOTA_Ability_Animation_TailSpin == _G.CDOTA_Ability_Animation_TailSpin table table: 0x001985f8
_G.CDesc.CDOTA_Ability_DataDriven == _G.CDOTA_Ability_DataDriven table table: 0x001b2688
_G.CDesc.CDOTA_Ability_Lua == _G.CDOTA_Ability_Lua table table: 0x001b0568
_G.CDesc.CDOTA_Ability_Nian_Dive == _G.CDOTA_Ability_Nian_Dive table table: 0x001453b0
_G.CDesc.CDOTA_Ability_Nian_Leap == _G.CDOTA_Ability_Nian_Leap table table: 0x001980d8
_G.CDesc.CDOTA_Ability_Nian_Roar == _G.CDOTA_Ability_Nian_Roar table table: 0x00145128
_G.CDesc.CDOTA_BaseNPC == _G.CDOTA_BaseNPC table table: 0x00183c30
_G.CDesc.CDOTA_BaseNPC_Building == _G.CDOTA_BaseNPC_Building table table: 0x00145c18
_G.CDesc.CDOTA_BaseNPC_Creature == _G.CDOTA_BaseNPC_Creature table table: 0x00198868
_G.CDesc.CDOTA_BaseNPC_Hero == _G.CDOTA_BaseNPC_Hero table table: 0x0018adc0
_G.CDesc.CDOTA_BaseNPC_RotatableBuilding == _G.CDOTA_BaseNPC_RotatableBuilding table table: 0x00146968
_G.CDesc.CDOTA_BaseNPC_Shop == _G.CDOTA_BaseNPC_Shop table table: 0x001463a0
_G.CDesc.CDOTA_BaseNPC_Trap_Ward == _G.CDOTA_BaseNPC_Trap_Ward table table: 0x001460c0
_G.CDesc.CDOTA_Buff == _G.CDOTA_Buff table table: 0x00134248
_G.CDesc.CDOTA_CustomUIManager == _G.CDOTA_CustomUIManager table table: 0x001f2628
_G.CDesc.CDOTA_Item == _G.CDOTA_Item table table: 0x00181110
_G.CDesc.CDOTA_ItemSpawner == _G.CDOTA_ItemSpawner table table: 0x001b02d0
_G.CDesc.CDOTA_Item_DataDriven == _G.CDOTA_Item_DataDriven table table: 0x001aefe0
_G.CDesc.CDOTA_Item_Lua == _G.CDOTA_Item_Lua table table: 0x001a9c68
_G.CDesc.CDOTA_Item_Physical == _G.CDOTA_Item_Physical table table: 0x001a99a0
_G.CDesc.CDOTA_MapTree == _G.CDOTA_MapTree table table: 0x001a4e08
_G.CDesc.CDOTA_Modifier_Lua == _G.CDOTA_Modifier_Lua table table: 0x001353e0
_G.CDesc.CDOTA_Modifier_Lua_Horizontal_Motion == _G.CDOTA_Modifier_Lua_Horizontal_Motion table table: 0x001378f8
_G.CDesc.CDOTA_Modifier_Lua_Motion_Both == _G.CDOTA_Modifier_Lua_Motion_Both table table: 0x00136170
_G.CDesc.CDOTA_Modifier_Lua_Vertical_Motion == _G.CDOTA_Modifier_Lua_Vertical_Motion table table: 0x0012cc80
_G.CDesc.CDOTA_PlayerResource == _G.CDOTA_PlayerResource table table: 0x001a6150
_G.CDesc.CDOTA_ShopTrigger == _G.CDOTA_ShopTrigger table table: 0x001466a8
_G.CDesc.CDOTA_SimpleObstruction == _G.CDOTA_SimpleObstruction table table: 0x001a52b0
_G.CDesc.CDOTA_Unit_Courier == _G.CDOTA_Unit_Courier table table: 0x00145f20
_G.CDesc.CDOTA_Unit_Nian == _G.CDOTA_Unit_Nian table table: 0x00144cb8
_G.CDesc.CDebugOverlayScriptHelper == _G.CDebugOverlayScriptHelper table table: 0x0024c9c0
_G.CDesc.CDotaQuest table table: 0x001a5a18
_G.CDesc.CDotaQuest.AddSubquest function function: 0x001a5bc0
_G.CDesc.CDotaQuest.CompleteQuest function function: 0x001a5ac8
_G.CDesc.CDotaQuest.FDesc table table: 0x001a5aa0
_G.CDesc.CDotaQuest.FDesc.AddSubquest userdata void AddSubquest(handle hSubquest)
Add a subquest to this quest
_G.CDesc.CDotaQuest.FDesc.CompleteQuest userdata void CompleteQuest()
Mark this quest complete
_G.CDesc.CDotaQuest.FDesc.GetSubquest userdata handle GetSubquest(int nIndex)
Finds a subquest from this quest by index
_G.CDesc.CDotaQuest.FDesc.GetSubquestByName userdata handle GetSubquestByName(string pszName)
Finds a subquest from this quest by name
_G.CDesc.CDotaQuest.FDesc.RemoveSubquest userdata void RemoveSubquest(handle hSubquest)
Remove a subquest from this quest
_G.CDesc.CDotaQuest.FDesc.SetTextReplaceString userdata void SetTextReplaceString(string pszString)
Set the text replace string for this quest
_G.CDesc.CDotaQuest.FDesc.SetTextReplaceValue userdata void SetTextReplaceValue(int valueSlot, int value)
Set a quest value
_G.CDesc.CDotaQuest.GetSubquest function function: 0x001a5df0
_G.CDesc.CDotaQuest.GetSubquestByName function function: 0x001a5b48
_G.CDesc.CDotaQuest.IsNull function function: 0x001a5a40
_G.CDesc.CDotaQuest.RemoveSubquest function function: 0x001a5c40
_G.CDesc.CDotaQuest.SetTextReplaceString function function: 0x001a5f38
_G.CDesc.CDotaQuest.SetTextReplaceValue function function: 0x001a5d60
_G.CDesc.CDotaSubquestBase table table: 0x001a55c8
_G.CDesc.CDotaSubquestBase.CompleteSubquest function function: 0x001a5678
_G.CDesc.CDotaSubquestBase.FDesc table table: 0x001a5650
_G.CDesc.CDotaSubquestBase.FDesc.CompleteSubquest userdata void CompleteSubquest()
Mark this subquest complete
_G.CDesc.CDotaSubquestBase.FDesc.SetTextReplaceString userdata void SetTextReplaceString(string pszString)
Set the text replace string for this subquest
_G.CDesc.CDotaSubquestBase.FDesc.SetTextReplaceValue userdata void SetTextReplaceValue(int valueSlot, int value)
Set a subquest value
_G.CDesc.CDotaSubquestBase.IsNull function function: 0x001a55f0
_G.CDesc.CDotaSubquestBase.SetTextReplaceString function function: 0x001a5800
_G.CDesc.CDotaSubquestBase.SetTextReplaceValue function function: 0x001a5778
_G.CDesc.CEntities table table: 0x001429f0
_G.CDesc.CEntities.CreateByClassname function function: 0x00142c40
_G.CDesc.CEntities.FDesc table table: 0x00142a78
_G.CDesc.CEntities.FDesc.CreateByClassname userdata handle CreateByClassname(string)
Creates an entity by classname
_G.CDesc.CEntities.FDesc.FindAllByClassname userdata table FindAllByClassname(string)
Finds all entities by class name. Returns an array containing all the found entities.
_G.CDesc.CEntities.FDesc.FindAllByClassnameWithin userdata table FindAllByClassnameWithin(string, Vector, float)
Find entities by class name within a radius.
_G.CDesc.CEntities.FDesc.FindAllByModel userdata table FindAllByModel(string)
Find entities by model name.
_G.CDesc.CEntities.FDesc.FindAllByName userdata table FindAllByName(string)
Find all entities by name. Returns an array containing all the found entities in it.
_G.CDesc.CEntities.FDesc.FindAllByNameWithin userdata table FindAllByNameWithin(string, Vector, float)
Find entities by name within a radius.
_G.CDesc.CEntities.FDesc.FindAllByTarget userdata table FindAllByTarget(string)
Find entities by targetname.
_G.CDesc.CEntities.FDesc.FindAllInSphere userdata table FindAllInSphere(Vector, float)
Find entities within a radius.
_G.CDesc.CEntities.FDesc.FindByClassname userdata handle FindByClassname(handle, string)
Find entities by class name. Pass 'null' to start an iteration, or reference to a previously found entity to continue a search
_G.CDesc.CEntities.FDesc.FindByClassnameNearest userdata handle FindByClassnameNearest(string, Vector, float)
Find entities by class name nearest to a point.
_G.CDesc.CEntities.FDesc.FindByClassnameWithin userdata handle FindByClassnameWithin(handle, string, Vector, float)
Find entities by class name within a radius. Pass 'null' to start an iteration, or reference to a previously found entity to continue a search
_G.CDesc.CEntities.FDesc.FindByModel userdata handle FindByModel(handle, string)
Find entities by model name. Pass 'null' to start an iteration, or reference to a previously found entity to continue a search
_G.CDesc.CEntities.FDesc.FindByModelWithin userdata handle FindByModelWithin(handle, string, Vector, float)
Find entities by model name within a radius. Pass 'null' to start an iteration, or reference to a previously found entity to continue a search
_G.CDesc.CEntities.FDesc.FindByName userdata handle FindByName(handle, string)
Find entities by name. Pass 'null' to start an iteration, or reference to a previously found entity to continue a search
_G.CDesc.CEntities.FDesc.FindByNameNearest userdata handle FindByNameNearest(string, Vector, float)
Find entities by name nearest to a point.
_G.CDesc.CEntities.FDesc.FindByNameWithin userdata handle FindByNameWithin(handle, string, Vector, float)
Find entities by name within a radius. Pass 'null' to start an iteration, or reference to a previously found entity to continue a search
_G.CDesc.CEntities.FDesc.FindByTarget userdata handle FindByTarget(handle, string)
Find entities by targetname. Pass 'null' to start an iteration, or reference to a previously found entity to continue a search
_G.CDesc.CEntities.FDesc.FindInSphere userdata handle FindInSphere(handle, Vector, float)
Find entities within a radius. Pass 'null' to start an iteration, or reference to a previously found entity to continue a search
_G.CDesc.CEntities.FDesc.First userdata handle First()
Begin an iteration over the list of entities
_G.CDesc.CEntities.FDesc.GetLocalPlayer userdata handle GetLocalPlayer()
Get the local player.
_G.CDesc.CEntities.FDesc.Next userdata handle Next(handle)
Continue an iteration over the list of entities, providing reference to a previously found entity
_G.CDesc.CEntities.FindAllByClassname function function: 0x00142df8
_G.CDesc.CEntities.FindAllByClassnameWithin function function: 0x00143b98
_G.CDesc.CEntities.FindAllByModel function function: 0x00143428
_G.CDesc.CEntities.FindAllByName function function: 0x00142f70
_G.CDesc.CEntities.FindAllByNameWithin function function: 0x00143100
_G.CDesc.CEntities.FindAllByTarget function function: 0x00142f00
_G.CDesc.CEntities.FindAllInSphere function function: 0x00143150
_G.CDesc.CEntities.FindByClassname function function: 0x00142b50
_G.CDesc.CEntities.FindByClassnameNearest function function: 0x00143228
_G.CDesc.CEntities.FindByClassnameWithin function function: 0x001432b0
_G.CDesc.CEntities.FindByModel function function: 0x001433a8
_G.CDesc.CEntities.FindByModelWithin function function: 0x00143528
_G.CDesc.CEntities.FindByName function function: 0x00142d68
_G.CDesc.CEntities.FindByNameNearest function function: 0x00142ff0
_G.CDesc.CEntities.FindByNameWithin function function: 0x00143078
_G.CDesc.CEntities.FindByTarget function function: 0x00142e80
_G.CDesc.CEntities.FindInSphere function function: 0x00142cc8
_G.CDesc.CEntities.First function function: 0x00138b28
_G.CDesc.CEntities.GetLocalPlayer function function: 0x001434a8
_G.CDesc.CEntities.IsNull function function: 0x00142a18
_G.CDesc.CEntities.Next function function: 0x00142bc8
_G.CDesc.CEntityInstance table table: 0x00138a58
_G.CDesc.CEntityInstance.ConnectOutput function function: 0x00113ac8
_G.CDesc.CEntityInstance.Destroy function function: 0x001392f0
_G.CDesc.CEntityInstance.DisconnectOutput function function: 0x00113668
_G.CDesc.CEntityInstance.DisconnectRedirectedOutput function function: 0x00138d88
_G.CDesc.CEntityInstance.FDesc table table: 0x00138b00
_G.CDesc.CEntityInstance.FDesc.ConnectOutput userdata void ConnectOutput(string, string)
Adds an I/O connection that will call the named function on this entity when the specified output fires.
_G.CDesc.CEntityInstance.FDesc.Destroy userdata void Destroy()

_G.CDesc.CEntityInstance.FDesc.DisconnectOutput userdata void DisconnectOutput(string, string)
Removes a connected script function from an I/O event on this entity.
_G.CDesc.CEntityInstance.FDesc.DisconnectRedirectedOutput userdata void DisconnectRedirectedOutput(string, string, handle)
Removes a connected script function from an I/O event on the passed entity.
_G.CDesc.CEntityInstance.FDesc.FireOutput userdata void FireOutput(string, handle, handle, table, float)
Fire an entity output
_G.CDesc.CEntityInstance.FDesc.GetClassname userdata string GetClassname()

_G.CDesc.CEntityInstance.FDesc.GetDebugName userdata string GetDebugName()
Get the entity name w/help if not defined (i.e. classname/etc)
_G.CDesc.CEntityInstance.FDesc.GetEntityHandle userdata ehandle GetEntityHandle()
Get the entity as an EHANDLE
_G.CDesc.CEntityInstance.FDesc.GetEntityIndex userdata int GetEntityIndex()

_G.CDesc.CEntityInstance.FDesc.GetIntAttr userdata int GetIntAttr(string)
Get Integer Attribute
_G.CDesc.CEntityInstance.FDesc.GetName userdata string GetName()

_G.CDesc.CEntityInstance.FDesc.GetOrCreatePrivateScriptScope userdata handle GetOrCreatePrivateScriptScope()
Retrieve, creating if necessary, the private per-instance script-side data associated with an entity
_G.CDesc.CEntityInstance.FDesc.GetOrCreatePublicScriptScope userdata handle GetOrCreatePublicScriptScope()
Retrieve, creating if necessary, the public script-side data associated with an entity
_G.CDesc.CEntityInstance.FDesc.GetPrivateScriptScope userdata handle GetPrivateScriptScope()
Retrieve the private per-instance script-side data associated with an entity
_G.CDesc.CEntityInstance.FDesc.GetPublicScriptScope userdata handle GetPublicScriptScope()
Retrieve the public script-side data associated with an entity
_G.CDesc.CEntityInstance.FDesc.RedirectOutput userdata void RedirectOutput(string, string, handle)
Adds an I/O connection that will call the named function on the passed entity when the specified output fires.
_G.CDesc.CEntityInstance.FDesc.RemoveSelf userdata void RemoveSelf()
Delete this entity
_G.CDesc.CEntityInstance.FDesc.SetIntAttr userdata void SetIntAttr(string, int)
Set Integer Attribute
_G.CDesc.CEntityInstance.FDesc.entindex userdata int entindex()

_G.CDesc.CEntityInstance.FireOutput function function: 0x00138b60
_G.CDesc.CEntityInstance.GetClassname function function: 0x00138ed0
_G.CDesc.CEntityInstance.GetDebugName function function: 0x00113d48
_G.CDesc.CEntityInstance.GetEntityHandle function function: 0x00138f28
_G.CDesc.CEntityInstance.GetEntityIndex function function: 0x00113c88
_G.CDesc.CEntityInstance.GetIntAttr function function: 0x00138cd8
_G.CDesc.CEntityInstance.GetName function function: 0x00138ea0
_G.CDesc.CEntityInstance.GetOrCreatePrivateScriptScope function function: 0x00139158
_G.CDesc.CEntityInstance.GetOrCreatePublicScriptScope function function: 0x00139040
_G.CDesc.CEntityInstance.GetPrivateScriptScope function function: 0x001390d0
_G.CDesc.CEntityInstance.GetPublicScriptScope function function: 0x00138fb8
_G.CDesc.CEntityInstance.IsNull function function: 0x00138a80
_G.CDesc.CEntityInstance.RedirectOutput function function: 0x00138d58
_G.CDesc.CEntityInstance.RemoveSelf function function: 0x00138c58
_G.CDesc.CEntityInstance.SetIntAttr function function: 0x00138c20
_G.CDesc.CEntityInstance.entindex function function: 0x00113cb8
_G.CDesc.CEntityScriptFramework table table: 0x001b8b10
_G.CDesc.CEntityScriptFramework.FDesc table table: 0x001b8b98
_G.CDesc.CEntityScriptFramework.IsNull function function: 0x001b8b38
_G.CDesc.CEnvEntityMaker table table: 0x001b5208
_G.CDesc.CEnvEntityMaker.FDesc table table: 0x001b5290
_G.CDesc.CEnvEntityMaker.FDesc.SpawnEntity userdata void SpawnEntity()
Create an entity at the location of the maker
_G.CDesc.CEnvEntityMaker.FDesc.SpawnEntityAtEntityOrigin userdata void SpawnEntityAtEntityOrigin(handle hEntity)
Create an entity at the location of a specified entity instance
_G.CDesc.CEnvEntityMaker.FDesc.SpawnEntityAtLocation userdata void SpawnEntityAtLocation(Vector vecAlternateOrigin, Vector vecAlternateAngles)
Create an entity at a specified location and orientaton, orientation is Euler angle in degrees (pitch, yaw, roll)
_G.CDesc.CEnvEntityMaker.FDesc.SpawnEntityAtNamedEntityOrigin userdata void SpawnEntityAtNamedEntityOrigin(string pszName)
Create an entity at the location of a named entity
_G.CDesc.CEnvEntityMaker.IsNull function function: 0x001b5230
_G.CDesc.CEnvEntityMaker.SpawnEntity function function: 0x001b52b8
_G.CDesc.CEnvEntityMaker.SpawnEntityAtEntityOrigin function function: 0x001b53b0
_G.CDesc.CEnvEntityMaker.SpawnEntityAtLocation function function: 0x001b5338
_G.CDesc.CEnvEntityMaker.SpawnEntityAtNamedEntityOrigin function function: 0x001b5440
_G.CDesc.CEnvProjectedTexture table table: 0x001b6da0
_G.CDesc.CEnvProjectedTexture.FDesc table table: 0x001b6e28
_G.CDesc.CEnvProjectedTexture.FDesc.SetFarRange userdata void SetFarRange(float flRange)
Set light maximum range
_G.CDesc.CEnvProjectedTexture.FDesc.SetLinearAttenuation userdata void SetLinearAttenuation(float flAtten)
Set light linear attenuation value
_G.CDesc.CEnvProjectedTexture.FDesc.SetNearRange userdata void SetNearRange(float flRange)
Set light minimum range
_G.CDesc.CEnvProjectedTexture.FDesc.SetQuadraticAttenuation userdata void SetQuadraticAttenuation(float flAtten)
Set light quadratic attenuation value
_G.CDesc.CEnvProjectedTexture.FDesc.SetVolumetrics userdata void SetVolumetrics(bool bOn, float flIntensity, float flNoise, int nPlanes, float flPlaneOffset)
Turn on/off light volumetrics: bool bOn, float flIntensity, float flNoise, int nPlanes, float flPlaneOffset
_G.CDesc.CEnvProjectedTexture.IsNull function function: 0x001b6dc8
_G.CDesc.CEnvProjectedTexture.SetFarRange function function: 0x001b6df0
_G.CDesc.CEnvProjectedTexture.SetLinearAttenuation function function: 0x00145460
_G.CDesc.CEnvProjectedTexture.SetNearRange function function: 0x001455d8
_G.CDesc.CEnvProjectedTexture.SetQuadraticAttenuation function function: 0x00145550
_G.CDesc.CEnvProjectedTexture.SetVolumetrics function function: 0x00145770
_G.CDesc.CInfoData table table: 0x001b6768
_G.CDesc.CInfoData.FDesc table table: 0x001b67f0
_G.CDesc.CInfoData.FDesc.QueryColor userdata Vector QueryColor(utlstringtoken tok, Vector vDefault)
Query color data for this key
_G.CDesc.CInfoData.FDesc.QueryFloat userdata float QueryFloat(utlstringtoken tok, float flDefault)
Query float data for this key
_G.CDesc.CInfoData.FDesc.QueryInt userdata int QueryInt(utlstringtoken tok, int nDefault)
Query int data for this key
_G.CDesc.CInfoData.FDesc.QueryNumber userdata float QueryNumber(utlstringtoken tok, float flDefault)
Query number data for this key
_G.CDesc.CInfoData.FDesc.QueryString userdata string QueryString(utlstringtoken tok, string pDefault)
Query string data for this key
_G.CDesc.CInfoData.FDesc.QueryVector userdata Vector QueryVector(utlstringtoken tok, Vector vDefault)
Query vector data for this key
_G.CDesc.CInfoData.IsNull function function: 0x001b6790
_G.CDesc.CInfoData.QueryColor function function: 0x001b6898
_G.CDesc.CInfoData.QueryFloat function function: 0x001b6818
_G.CDesc.CInfoData.QueryInt function function: 0x001b6910
_G.CDesc.CInfoData.QueryNumber function function: 0x001b6990
_G.CDesc.CInfoData.QueryString function function: 0x001b6ab0
_G.CDesc.CInfoData.QueryVector function function: 0x001b6b40
_G.CDesc.CInfoWorldLayer table table: 0x001459a0
_G.CDesc.CInfoWorldLayer.FDesc table table: 0x00145a28
_G.CDesc.CInfoWorldLayer.FDesc.HideWorldLayer userdata void HideWorldLayer()
Hides this layer
_G.CDesc.CInfoWorldLayer.FDesc.ShowWorldLayer userdata void ShowWorldLayer()
Shows this layer
_G.CDesc.CInfoWorldLayer.HideWorldLayer function function: 0x001b7af8
_G.CDesc.CInfoWorldLayer.IsNull function function: 0x001459c8
_G.CDesc.CInfoWorldLayer.ShowWorldLayer function function: 0x001454c0
_G.CDesc.CLogicScript table table: 0x001b5070
_G.CDesc.CLogicScript.FDesc table table: 0x001b50f8
_G.CDesc.CLogicScript.IsNull function function: 0x001b5098
_G.CDesc.CMarkupVolumeTagged table table: 0x00183a68
_G.CDesc.CMarkupVolumeTagged.FDesc table table: 0x001b4eb8
_G.CDesc.CMarkupVolumeTagged.FDesc.HasTag userdata bool HasTag(string pszTagName)
Does this volume have the given tag.
_G.CDesc.CMarkupVolumeTagged.HasTag function function: 0x001b4ee0
_G.CDesc.CMarkupVolumeTagged.IsNull function function: 0x00183a90
_G.CDesc.CNativeOutputs table table: 0x001b8220
_G.CDesc.CNativeOutputs.AddOutput function function: 0x001b83a0
_G.CDesc.CNativeOutputs.FDesc table table: 0x001b82a8
_G.CDesc.CNativeOutputs.FDesc.AddOutput userdata void AddOutput(string, string)
Add an output
_G.CDesc.CNativeOutputs.FDesc.Init userdata void Init(int)
Initialize with number of outputs
_G.CDesc.CNativeOutputs.Init function function: 0x001b82d0
_G.CDesc.CNativeOutputs.IsNull function function: 0x001b8248
_G.CDesc.CParticleSystem table table: 0x001b65d0
_G.CDesc.CParticleSystem.FDesc table table: 0x001b6658
_G.CDesc.CParticleSystem.IsNull function function: 0x001b65f8
_G.CDesc.CPhysicsProp table table: 0x001b3300
_G.CDesc.CPhysicsProp.DisableMotion function function: 0x001b34a8
_G.CDesc.CPhysicsProp.EnableMotion function function: 0x001b33b0
_G.CDesc.CPhysicsProp.FDesc table table: 0x001b3388
_G.CDesc.CPhysicsProp.FDesc.DisableMotion userdata void DisableMotion()
Disable motion for the prop
_G.CDesc.CPhysicsProp.FDesc.EnableMotion userdata void EnableMotion()
Enable motion for the prop
_G.CDesc.CPhysicsProp.FDesc.SetDynamicVsDynamicContinuous userdata void SetDynamicVsDynamicContinuous(bool bIsDynamicVsDynamicContinuousEnabled)
Enable/disable dynamic vs dynamic continuous collision traces
_G.CDesc.CPhysicsProp.IsNull function function: 0x001b3328
_G.CDesc.CPhysicsProp.SetDynamicVsDynamicContinuous function function: 0x001b3528
_G.CDesc.CPointClientUIWorldPanel table table: 0x001b7c70
_G.CDesc.CPointClientUIWorldPanel.AcceptUserInput function function: 0x001b7e98
_G.CDesc.CPointClientUIWorldPanel.AddCSSClasses function function: 0x001b7da0
_G.CDesc.CPointClientUIWorldPanel.FDesc table table: 0x001b7cf8
_G.CDesc.CPointClientUIWorldPanel.FDesc.AcceptUserInput userdata void AcceptUserInput()
Tells the panel to accept user input.
_G.CDesc.CPointClientUIWorldPanel.FDesc.AddCSSClasses userdata void AddCSSClasses(string pszClasses)
Adds CSS class(es) to the panel
_G.CDesc.CPointClientUIWorldPanel.FDesc.IgnoreUserInput userdata void IgnoreUserInput()
Tells the panel to ignore user input.
_G.CDesc.CPointClientUIWorldPanel.FDesc.IsGrabbable userdata bool IsGrabbable()
Returns whether this entity is grabbable.
_G.CDesc.CPointClientUIWorldPanel.FDesc.RemoveCSSClasses userdata void RemoveCSSClasses(string pszClasses)
Remove CSS class(es) from the panel
_G.CDesc.CPointClientUIWorldPanel.IgnoreUserInput function function: 0x001b7e18
_G.CDesc.CPointClientUIWorldPanel.IsGrabbable function function: 0x001b7d20
_G.CDesc.CPointClientUIWorldPanel.IsNull function function: 0x001b7c98
_G.CDesc.CPointClientUIWorldPanel.RemoveCSSClasses function function: 0x001b8048
_G.CDesc.CPointTemplate table table: 0x001b56e8
_G.CDesc.CPointTemplate.DeleteCreatedSpawnGroups function function: 0x001b5820
_G.CDesc.CPointTemplate.FDesc table table: 0x001b5770
_G.CDesc.CPointTemplate.FDesc.DeleteCreatedSpawnGroups userdata void DeleteCreatedSpawnGroups()
DeleteCreatedSpawnGroups() : Deletes any spawn groups that this point_template has spawned. Note: The point_template will not be deleted by this.
_G.CDesc.CPointTemplate.FDesc.ForceSpawn userdata void ForceSpawn()
ForceSpawn() : Spawns all of the entities the point_template is pointing at.
_G.CDesc.CPointTemplate.FDesc.GetSpawnedEntities userdata handle GetSpawnedEntities()
GetSpawnedEntities() : Get the list of the most recent spawned entities
_G.CDesc.CPointTemplate.FDesc.SetSpawnCallback userdata void SetSpawnCallback(handle hCallbackFunc, handle hCallbackScope)
SetSpawnCallback( hCallbackFunc, hCallbackScope, hCallbackData ) : Set a callback for when the template spawns entities. The spawned entities will be passed in as an array.
_G.CDesc.CPointTemplate.ForceSpawn function function: 0x001b5920
_G.CDesc.CPointTemplate.GetSpawnedEntities function function: 0x001b5798
_G.CDesc.CPointTemplate.IsNull function function: 0x001b5710
_G.CDesc.CPointTemplate.SetSpawnCallback function function: 0x001b5898
_G.CDesc.CPointWorldText table table: 0x001837e0
_G.CDesc.CPointWorldText.FDesc table table: 0x00183868
_G.CDesc.CPointWorldText.FDesc.SetMessage userdata void SetMessage(string pMessage)
Set the message on this entity.
_G.CDesc.CPointWorldText.IsNull function function: 0x00183808
_G.CDesc.CPointWorldText.SetMessage function function: 0x00183890
_G.CDesc.CPropHMDAvatar table table: 0x00183560
_G.CDesc.CPropHMDAvatar.FDesc table table: 0x001835e8
_G.CDesc.CPropHMDAvatar.FDesc.GetVRHand userdata handle GetVRHand(int nHandID)
Get VR hand by ID
_G.CDesc.CPropHMDAvatar.GetVRHand function function: 0x00183610
_G.CDesc.CPropHMDAvatar.IsNull function function: 0x00183588
_G.CDesc.CPropVRHand table table: 0x001b3748
_G.CDesc.CPropVRHand.AddHandAttachment function function: 0x001b3b30
_G.CDesc.CPropVRHand.AddHandModelOverride function function: 0x001b3a00
_G.CDesc.CPropVRHand.FDesc table table: 0x001b37d0
_G.CDesc.CPropVRHand.FDesc.AddHandAttachment userdata void AddHandAttachment(handle hAttachment)
Add the attachment to this hand
_G.CDesc.CPropVRHand.FDesc.AddHandModelOverride userdata handle AddHandModelOverride(string pModelName)
Add a model override for this hand
_G.CDesc.CPropVRHand.FDesc.FindHandModelOverride userdata handle FindHandModelOverride(string pModelName)
Find a specific model override for this hand
_G.CDesc.CPropVRHand.FDesc.FireHapticPulse userdata void FireHapticPulse(int nStrength)
Fire a haptic pulse on this hand. [0,2] for strength.
_G.CDesc.CPropVRHand.FDesc.FireHapticPulsePrecise userdata void FireHapticPulsePrecise(int nPulseDuration)
Fire a haptic pulse on this hand. Specify the duration in micro seconds.
_G.CDesc.CPropVRHand.FDesc.GetHandAttachment userdata handle GetHandAttachment()
Get the attachment on this hand
_G.CDesc.CPropVRHand.FDesc.GetHandID userdata int GetHandID()
Get hand ID
_G.CDesc.CPropVRHand.FDesc.GetLiteralHandType userdata int GetLiteralHandType()
Get literal type for this hand
_G.CDesc.CPropVRHand.FDesc.GetPlayer userdata handle GetPlayer()
Get the player for this hand
_G.CDesc.CPropVRHand.FDesc.GetVelocity userdata Vector GetVelocity()
Get the filtered controller velocity.
_G.CDesc.CPropVRHand.FDesc.RemoveAllHandModelOverrides userdata void RemoveAllHandModelOverrides()
Remove all model overrides for this hand
_G.CDesc.CPropVRHand.FDesc.RemoveHandAttachmentByHandle userdata void RemoveHandAttachmentByHandle(handle hAttachment)
Remove hand attachment by handle
_G.CDesc.CPropVRHand.FDesc.RemoveHandModelOverride userdata void RemoveHandModelOverride(string pModelName)
Remove a model override for this hand
_G.CDesc.CPropVRHand.FDesc.SetHandAttachment userdata void SetHandAttachment(handle hAttachment)
Set the attachment for this hand
_G.CDesc.CPropVRHand.FindHandModelOverride function function: 0x001b3ca8
_G.CDesc.CPropVRHand.FireHapticPulse function function: 0x001b37f8
_G.CDesc.CPropVRHand.FireHapticPulsePrecise function function: 0x001b38f0
_G.CDesc.CPropVRHand.GetHandAttachment function function: 0x001b3878
_G.CDesc.CPropVRHand.GetHandID function function: 0x001b40c8
_G.CDesc.CPropVRHand.GetLiteralHandType function function: 0x001b4148
_G.CDesc.CPropVRHand.GetPlayer function function: 0x001b3c48
_G.CDesc.CPropVRHand.GetVelocity function function: 0x001b41d0
_G.CDesc.CPropVRHand.IsNull function function: 0x001b3770
_G.CDesc.CPropVRHand.RemoveAllHandModelOverrides function function: 0x001b3bb8
_G.CDesc.CPropVRHand.RemoveHandAttachmentByHandle function function: 0x001b3aa0
_G.CDesc.CPropVRHand.RemoveHandModelOverride function function: 0x001b3e90
_G.CDesc.CPropVRHand.SetHandAttachment function function: 0x001b3978
_G.CDesc.CSceneEntity table table: 0x001b2948
_G.CDesc.CSceneEntity.AddBroadcastTeamTarget function function: 0x001b2c90
_G.CDesc.CSceneEntity.Cancel function function: 0x001b2cf8
_G.CDesc.CSceneEntity.EstimateLength function function: 0x001b29f8
_G.CDesc.CSceneEntity.FDesc table table: 0x001b29d0
_G.CDesc.CSceneEntity.FDesc.AddBroadcastTeamTarget userdata void AddBroadcastTeamTarget(int)
Adds a team (by index) to the broadcast list
_G.CDesc.CSceneEntity.FDesc.Cancel userdata void Cancel()
Cancel scene playback
_G.CDesc.CSceneEntity.FDesc.EstimateLength userdata float EstimateLength()
Returns length of this scene in seconds.
_G.CDesc.CSceneEntity.FDesc.FindCamera userdata handle FindCamera()
Get the camera
_G.CDesc.CSceneEntity.FDesc.FindNamedEntity userdata handle FindNamedEntity(string)
given an entity reference, such as !target, get actual entity from scene object
_G.CDesc.CSceneEntity.FDesc.IsPaused userdata bool IsPaused()
If this scene is currently paused.
_G.CDesc.CSceneEntity.FDesc.IsPlayingBack userdata bool IsPlayingBack()
If this scene is currently playing.
_G.CDesc.CSceneEntity.FDesc.LoadSceneFromString userdata bool LoadSceneFromString(string, string)
given a dummy scene name and a vcd string, load the scene
_G.CDesc.CSceneEntity.FDesc.RemoveBroadcastTeamTarget userdata void RemoveBroadcastTeamTarget(int)
Removes a team (by index) from the broadcast list
_G.CDesc.CSceneEntity.FDesc.Start userdata void Start(handle)
Start scene playback, takes activatorEntity as param
_G.CDesc.CSceneEntity.FindCamera function function: 0x001b2d50
_G.CDesc.CSceneEntity.FindNamedEntity function function: 0x001b2bf0
_G.CDesc.CSceneEntity.IsNull function function: 0x001b2970
_G.CDesc.CSceneEntity.IsPaused function function: 0x001b2b70
_G.CDesc.CSceneEntity.IsPlayingBack function function: 0x001b2af0
_G.CDesc.CSceneEntity.LoadSceneFromString function function: 0x001b3030
_G.CDesc.CSceneEntity.RemoveBroadcastTeamTarget function function: 0x001b2e40
_G.CDesc.CSceneEntity.Start function function: 0x001b2a78
_G.CDesc.CScriptHeroList table table: 0x00131de0
_G.CDesc.CScriptHeroList.FDesc table table: 0x00131e68
_G.CDesc.CScriptHeroList.FDesc.GetAllHeroes userdata table GetAllHeroes()
Returns all the heroes in the world
_G.CDesc.CScriptHeroList.FDesc.GetHero userdata handle GetHero(int)
Get the Nth hero in the Hero List
_G.CDesc.CScriptHeroList.FDesc.GetHeroCount userdata int GetHeroCount()
Returns the number of heroes in the world
_G.CDesc.CScriptHeroList.GetAllHeroes function function: 0x00131f68
_G.CDesc.CScriptHeroList.GetHero function function: 0x00131e90
_G.CDesc.CScriptHeroList.GetHeroCount function function: 0x00131ee8
_G.CDesc.CScriptHeroList.IsNull function function: 0x00131e08
_G.CDesc.CScriptKeyValues table table: 0x001b85f8
_G.CDesc.CScriptKeyValues.FDesc table table: 0x001b8680
_G.CDesc.CScriptKeyValues.FDesc.GetValue userdata table GetValue(string)
Reads a spawn key
_G.CDesc.CScriptKeyValues.GetValue function function: 0x001b86a8
_G.CDesc.CScriptKeyValues.IsNull function function: 0x001b8620
_G.CDesc.CScriptParticleManager table table: 0x00133728
_G.CDesc.CScriptParticleManager.CreateParticle function function: 0x001337d8
_G.CDesc.CScriptParticleManager.CreateParticleForPlayer function function: 0x00133858
_G.CDesc.CScriptParticleManager.CreateParticleForTeam function function: 0x001338e0
_G.CDesc.CScriptParticleManager.DestroyParticle function function: 0x00134018
_G.CDesc.CScriptParticleManager.FDesc table table: 0x001337b0
_G.CDesc.CScriptParticleManager.FDesc.CreateParticle userdata int CreateParticle(string, int, handle)
Creates a new particle effect
_G.CDesc.CScriptParticleManager.FDesc.CreateParticleForPlayer userdata int CreateParticleForPlayer(string, int, handle, handle)
Creates a new particle effect that only plays for the specified player
_G.CDesc.CScriptParticleManager.FDesc.CreateParticleForTeam userdata int CreateParticleForTeam(string, int, handle, int)
Creates a new particle effect that only plays for the specified team
_G.CDesc.CScriptParticleManager.FDesc.DestroyParticle userdata void DestroyParticle(int, bool)
(int index, bool bDestroyImmediately) - Destroy a particle, if bDestroyImmediately destroy it without playing end caps.
_G.CDesc.CScriptParticleManager.FDesc.GetParticleReplacement userdata string GetParticleReplacement(string, handle)

_G.CDesc.CScriptParticleManager.FDesc.ReleaseParticleIndex userdata void ReleaseParticleIndex(int)
Frees the specified particle index
_G.CDesc.CScriptParticleManager.FDesc.SetParticleAlwaysSimulate userdata void SetParticleAlwaysSimulate(int)

_G.CDesc.CScriptParticleManager.FDesc.SetParticleControl userdata void SetParticleControl(int, int, Vector)
Set the control point data for a control on a particle effect
_G.CDesc.CScriptParticleManager.FDesc.SetParticleControlEnt userdata void SetParticleControlEnt(int, int, handle, int, string, Vector, bool)

_G.CDesc.CScriptParticleManager.FDesc.SetParticleControlFallback userdata void SetParticleControlFallback(int, int, Vector)
(int iIndex, int iPoint, Vector vecPosition)
_G.CDesc.CScriptParticleManager.FDesc.SetParticleControlForward userdata void SetParticleControlForward(int, int, Vector)
(int nFXIndex, int nPoint, vForward)
_G.CDesc.CScriptParticleManager.FDesc.SetParticleControlOrientation userdata void SetParticleControlOrientation(int, int, Vector, Vector, Vector)
(int nFXIndex, int nPoint, vForward, vRight, vUp) - Set the orientation for a control on a particle effect (NOTE: This is left handed -- bad!!)
_G.CDesc.CScriptParticleManager.FDesc.SetParticleControlOrientationFLU userdata void SetParticleControlOrientationFLU(int, int, Vector, Vector, Vector)
(int nFXIndex, int nPoint, Vector vecForward, Vector vecLeft, Vector vecUp) - Set the orientation for a control on a particle effect
_G.CDesc.CScriptParticleManager.FDesc.SetParticleFoWProperties userdata void SetParticleFoWProperties(int, int, int, float)
int nfxindex, int nPoint, int nPoint2, float flRadius
_G.CDesc.CScriptParticleManager.FDesc.SetParticleShouldCheckFoW userdata bool SetParticleShouldCheckFoW(int, bool)
int nfxindex, bool bCheckFoW
_G.CDesc.CScriptParticleManager.GetParticleReplacement function function: 0x00133cb8
_G.CDesc.CScriptParticleManager.IsNull function function: 0x00133750
_G.CDesc.CScriptParticleManager.ReleaseParticleIndex function function: 0x001339c0
_G.CDesc.CScriptParticleManager.SetParticleAlwaysSimulate function function: 0x00133b10
_G.CDesc.CScriptParticleManager.SetParticleControl function function: 0x00133778
_G.CDesc.CScriptParticleManager.SetParticleControlEnt function function: 0x00133ba0
_G.CDesc.CScriptParticleManager.SetParticleControlFallback function function: 0x00133c28
_G.CDesc.CScriptParticleManager.SetParticleControlForward function function: 0x00133e68
_G.CDesc.CScriptParticleManager.SetParticleControlOrientation function function: 0x00133d40
_G.CDesc.CScriptParticleManager.SetParticleControlOrientationFLU function function: 0x00133dd0
_G.CDesc.CScriptParticleManager.SetParticleFoWProperties function function: 0x00133ef8
_G.CDesc.CScriptParticleManager.SetParticleShouldCheckFoW function function: 0x00133f88
_G.CDesc.CScriptPrecacheContext table table: 0x001b8858
_G.CDesc.CScriptPrecacheContext.AddResource function function: 0x001b89d8
_G.CDesc.CScriptPrecacheContext.FDesc table table: 0x001b88e0
_G.CDesc.CScriptPrecacheContext.FDesc.AddResource userdata void AddResource(string)
Precaches a specific resource
_G.CDesc.CScriptPrecacheContext.FDesc.GetValue userdata table GetValue(string)
Reads a spawn key
_G.CDesc.CScriptPrecacheContext.GetValue function function: 0x001b8908
_G.CDesc.CScriptPrecacheContext.IsNull function function: 0x001b8880
_G.CDesc.Convars table table: 0x00143de0
_G.CDesc.Convars.FDesc table table: 0x00143e68
_G.CDesc.Convars.FDesc.GetBool userdata table GetBool(string)
GetBool(name) : returns the convar as a boolean flag.
_G.CDesc.Convars.FDesc.GetCommandClient userdata handle GetCommandClient()
GetCommandClient() : returns the player who issued this console command.
_G.CDesc.Convars.FDesc.GetDOTACommandClient userdata handle GetDOTACommandClient()
GetDOTACommandClient() : returns the DOTA player who issued this console command.
_G.CDesc.Convars.FDesc.GetFloat userdata table GetFloat(string)
GetFloat(name) : returns the convar as a float. May return null if no such convar.
_G.CDesc.Convars.FDesc.GetInt userdata table GetInt(string)
GetInt(name) : returns the convar as an int. May return null if no such convar.
_G.CDesc.Convars.FDesc.GetStr userdata table GetStr(string)
GetStr(name) : returns the convar as a string. May return null if no such convar.
_G.CDesc.Convars.FDesc.RegisterCommand userdata void RegisterCommand(string, handle, string, int)
RegisterCommand(name, fn, helpString, flags) : register a console command.
_G.CDesc.Convars.FDesc.RegisterConvar userdata void RegisterConvar(string, string, string, int)
RegisterConvar(name, defaultValue, helpString, flags): register a new console variable.
_G.CDesc.Convars.FDesc.SetBool userdata void SetBool(string, bool)
SetBool(name, val) : sets the value of the convar to the bool.
_G.CDesc.Convars.FDesc.SetFloat userdata void SetFloat(string, float)
SetFloat(name, val) : sets the value of the convar to the float.
_G.CDesc.Convars.FDesc.SetInt userdata void SetInt(string, int)
SetInt(name, val) : sets the value of the convar to the int.
_G.CDesc.Convars.FDesc.SetStr userdata void SetStr(string, string)
SetStr(name, val) : sets the value of the convar to the string.
_G.CDesc.Convars.GetBool function function: 0x00143fe0
_G.CDesc.Convars.GetCommandClient function function: 0x001288a0
_G.CDesc.Convars.GetDOTACommandClient function function: 0x00128928
_G.CDesc.Convars.GetFloat function function: 0x00143f60
_G.CDesc.Convars.GetInt function function: 0x00143e90
_G.CDesc.Convars.GetStr function function: 0x00143ee8
_G.CDesc.Convars.IsNull function function: 0x00143e08
_G.CDesc.Convars.RegisterCommand function function: 0x00128618
_G.CDesc.Convars.RegisterConvar function function: 0x00128820
_G.CDesc.Convars.SetBool function function: 0x001283a0
_G.CDesc.Convars.SetFloat function function: 0x001440d8
_G.CDesc.Convars.SetInt function function: 0x00144140
_G.CDesc.Convars.SetStr function function: 0x001285a0
_G.CDesc.GlobalSys table table: 0x00128cf0
_G.CDesc.GlobalSys.CommandLineCheck function function: 0x00128d40
_G.CDesc.GlobalSys.CommandLineFloat function function: 0x00128e20
_G.CDesc.GlobalSys.CommandLineInt function function: 0x00128da0
_G.CDesc.GlobalSys.CommandLineStr function function: 0x00128ea8
_G.CDesc.GlobalSys.FDesc table table: 0x00128d78
_G.CDesc.GlobalSys.FDesc.CommandLineCheck userdata table CommandLineCheck(string)
CommandLineCheck(name) : returns true if the command line param was used, otherwise false.
_G.CDesc.GlobalSys.FDesc.CommandLineFloat userdata table CommandLineFloat(string, float)
CommandLineFloat(name) : returns the command line param as a float.
_G.CDesc.GlobalSys.FDesc.CommandLineInt userdata table CommandLineInt(string, int)
CommandLineInt(name) : returns the command line param as an int.
_G.CDesc.GlobalSys.FDesc.CommandLineStr userdata table CommandLineStr(string, string)
CommandLineStr(name) : returns the command line param as a string.
_G.CDesc.GlobalSys.IsNull function function: 0x00128d18
_G.CDesc.GridNav table table: 0x00132158
_G.CDesc.GridNav.CanFindPath function function: 0x001326e0
_G.CDesc.GridNav.DestroyTreesAroundPoint function function: 0x001328b0
_G.CDesc.GridNav.FDesc table table: 0x001321e0
_G.CDesc.GridNav.FDesc.CanFindPath userdata bool CanFindPath(Vector, Vector)
Determine if it is possible to reach the specified end point from the specified start point. bool (vStart, vEnd)
_G.CDesc.GridNav.FDesc.DestroyTreesAroundPoint userdata void DestroyTreesAroundPoint(Vector, float, bool)
Destroy all trees in the area(vPosition, flRadius, bFullCollision
_G.CDesc.GridNav.FDesc.FindPathLength userdata float FindPathLength(Vector, Vector)
Find a path between the two points an return the length of the path. If there is not a path between the points the returned value will be -1. float (vStart, vEnd )
_G.CDesc.GridNav.FDesc.GetAllTreesAroundPoint userdata table GetAllTreesAroundPoint(Vector, float, bool)
Returns a table full of tree HSCRIPTS (vPosition, flRadius, bFullCollision).
_G.CDesc.GridNav.FDesc.GridPosToWorldCenterX userdata float GridPosToWorldCenterX(int)
Get the X position of the center of a given X index
_G.CDesc.GridNav.FDesc.GridPosToWorldCenterY userdata float GridPosToWorldCenterY(int)
Get the Y position of the center of a given Y index
_G.CDesc.GridNav.FDesc.IsBlocked userdata bool IsBlocked(Vector)
Checks whether the given position is blocked
_G.CDesc.GridNav.FDesc.IsNearbyTree userdata bool IsNearbyTree(Vector, float, bool)
(position, radius, checkFullTreeRadius?) Checks whether there are any trees overlapping the given point
_G.CDesc.GridNav.FDesc.IsTraversable userdata bool IsTraversable(Vector)
Checks whether the given position is traversable
_G.CDesc.GridNav.FDesc.RegrowAllTrees userdata void RegrowAllTrees()
Causes all trees in the map to regrow
_G.CDesc.GridNav.FDesc.WorldToGridPosX userdata int WorldToGridPosX(float)
Get the X index of a given world X position
_G.CDesc.GridNav.FDesc.WorldToGridPosY userdata int WorldToGridPosY(float)
Get the Y index of a given world Y position
_G.CDesc.GridNav.FindPathLength function function: 0x00132760
_G.CDesc.GridNav.GetAllTreesAroundPoint function function: 0x00132938
_G.CDesc.GridNav.GridPosToWorldCenterX function function: 0x00132370
_G.CDesc.GridNav.GridPosToWorldCenterY function function: 0x001321a8
_G.CDesc.GridNav.IsBlocked function function: 0x00132518
_G.CDesc.GridNav.IsNearbyTree function function: 0x001327e0
_G.CDesc.GridNav.IsNull function function: 0x00132180
_G.CDesc.GridNav.IsTraversable function function: 0x00132660
_G.CDesc.GridNav.RegrowAllTrees function function: 0x00128c38
_G.CDesc.GridNav.WorldToGridPosX function function: 0x00132208
_G.CDesc.GridNav.WorldToGridPosY function function: 0x001322f0
_G.CDesc.ProjectileManager table table: 0x00132b50
_G.CDesc.ProjectileManager.ChangeTrackingProjectileSpeed function function: 0x00133030
_G.CDesc.ProjectileManager.CreateLinearProjectile function function: 0x00132c90
_G.CDesc.ProjectileManager.CreateTrackingProjectile function function: 0x00132c00
_G.CDesc.ProjectileManager.DestroyLinearProjectile function function: 0x00132d18
_G.CDesc.ProjectileManager.FDesc table table: 0x00132bd8
_G.CDesc.ProjectileManager.FDesc.ChangeTrackingProjectileSpeed userdata void ChangeTrackingProjectileSpeed(handle, int)
Update speed
_G.CDesc.ProjectileManager.FDesc.CreateLinearProjectile userdata int CreateLinearProjectile(handle)
Creates a linear projectile and returns the projectile ID
_G.CDesc.ProjectileManager.FDesc.CreateTrackingProjectile userdata void CreateTrackingProjectile(handle)
Creates a tracking projectile
_G.CDesc.ProjectileManager.FDesc.DestroyLinearProjectile userdata void DestroyLinearProjectile(int)
Destroys the linear projectile matching the argument ID
_G.CDesc.ProjectileManager.FDesc.GetLinearProjectileLocation userdata Vector GetLinearProjectileLocation(int)
Returns current location of projectile
_G.CDesc.ProjectileManager.FDesc.GetLinearProjectileRadius userdata float GetLinearProjectileRadius(int)
Returns current radius of projectile
_G.CDesc.ProjectileManager.FDesc.GetLinearProjectileVelocity userdata Vector GetLinearProjectileVelocity(int)
Returns a vector representing the current velocity of the projectile.
_G.CDesc.ProjectileManager.FDesc.ProjectileDodge userdata void ProjectileDodge(handle)
Makes the specified unit dodge projectiles
_G.CDesc.ProjectileManager.FDesc.UpdateLinearProjectileDirection userdata void UpdateLinearProjectileDirection(int, Vector, float)
Update velocity
_G.CDesc.ProjectileManager.GetLinearProjectileLocation function function: 0x00132f10
_G.CDesc.ProjectileManager.GetLinearProjectileRadius function function: 0x00132e80
_G.CDesc.ProjectileManager.GetLinearProjectileVelocity function function: 0x00132df0
_G.CDesc.ProjectileManager.IsNull function function: 0x00132b78
_G.CDesc.ProjectileManager.ProjectileDodge function function: 0x00132ba0
_G.CDesc.ProjectileManager.UpdateLinearProjectileDirection function function: 0x00132fa0
_G.CDesc.SteamInfo table table: 0x00129108
_G.CDesc.SteamInfo.FDesc table table: 0x00129190
_G.CDesc.SteamInfo.FDesc.IsPublicUniverse userdata bool IsPublicUniverse()
Is the script connected to the public Steam universe
_G.CDesc.SteamInfo.IsNull function function: 0x00129130
_G.CDesc.SteamInfo.IsPublicUniverse function function: 0x001291b8
_G.CDotaQuest == _G.CDesc.CDotaQuest table table: 0x001a5a18
_G.CDotaSubquestBase == _G.CDesc.CDotaSubquestBase table table: 0x001a55c8
_G.CEntities == _G.CDesc.CEntities table table: 0x001429f0
_G.CEntityInstance == _G.CDesc.CEntityInstance table table: 0x00138a58
_G.CEntityScriptFramework == _G.CDesc.CEntityScriptFramework table table: 0x001b8b10
_G.CEnvEntityMaker == _G.CDesc.CEnvEntityMaker table table: 0x001b5208
_G.CEnvProjectedTexture == _G.CDesc.CEnvProjectedTexture table table: 0x001b6da0
_G.CInfoData == _G.CDesc.CInfoData table table: 0x001b6768
_G.CInfoWorldLayer == _G.CDesc.CInfoWorldLayer table table: 0x001459a0
_G.CLogicScript == _G.CDesc.CLogicScript table table: 0x001b5070
_G.CMarkupVolumeTagged == _G.CDesc.CMarkupVolumeTagged table table: 0x00183a68
_G.CNativeOutputs == _G.CDesc.CNativeOutputs table table: 0x001b8220
_G.CParticleSystem == _G.CDesc.CParticleSystem table table: 0x001b65d0
_G.CPhysicsProp == _G.CDesc.CPhysicsProp table table: 0x001b3300
_G.CPointClientUIWorldPanel == _G.CDesc.CPointClientUIWorldPanel table table: 0x001b7c70
_G.CPointTemplate == _G.CDesc.CPointTemplate table table: 0x001b56e8
_G.CPointWorldText == _G.CDesc.CPointWorldText table table: 0x001837e0
_G.CPropHMDAvatar == _G.CDesc.CPropHMDAvatar table table: 0x00183560
_G.CPropVRHand == _G.CDesc.CPropVRHand table table: 0x001b3748
_G.CSceneEntity == _G.CDesc.CSceneEntity table table: 0x001b2948
_G.CScriptHeroList == _G.CDesc.CScriptHeroList table table: 0x00131de0
_G.CScriptKeyValues == _G.CDesc.CScriptKeyValues table table: 0x001b85f8
_G.CScriptParticleManager == _G.CDesc.CScriptParticleManager table table: 0x00133728
_G.CScriptPrecacheContext == _G.CDesc.CScriptPrecacheContext table table: 0x001b8858
_G.CalcClosestPointOnEntityOBB function function: 0x001427b8
_G.CalcDistanceBetweenEntityOBB function function: 0x00142848
_G.CalcDistanceToLineSegment2D function function: 0x001428d8
_G.CancelEntityIOEvents function function: 0x0013e028
_G.Clamp function function: 0x001d3bd0
_G.ClearSpawnGroupEntityFilters function function: 0x001c9a28
_G.ClearTeamCustomHealthbarColor function function: 0x00140eb0
_G.ConnectOutputs function function: 0x001c6360
_G.Convars table table: 0x001289d8
_G.Convars.__self userdata userdata: 0x00128a18
_G.CreateDamageInfo function function: 0x00141b08
_G.CreateEffect function function: 0x00141c18
_G.CreateHTTPRequest function function: 0x00177db8
_G.CreateHTTPRequestScriptVM function function: 0x00177e40
_G.CreateHeroForPlayer function function: 0x001405c0
_G.CreateIllusions function function: 0x001406c8
_G.CreateItem function function: 0x00140648
_G.CreateItemOnPositionForLaunch function function: 0x00140858
_G.CreateItemOnPositionSync function function: 0x001407c8
_G.CreateModifierThinker function function: 0x00149db0
_G.CreateSceneEntity function function: 0x0013e8d8
_G.CreateTempTree function function: 0x00131728
_G.CreateTempTreeWithModel function function: 0x001317a8
_G.CreateTrigger function function: 0x00142158
_G.CreateTriggerRadiusApproximate function function: 0x001421d8
_G.CreateUnitByName function function: 0x0012a0c0
_G.CreateUnitByNameAsync function function: 0x0012a2f0
_G.CreateUnitFromTable function function: 0x0012a268
_G.CrossVectors function function: 0x0013e530
_G.CustomGameEventManager table table: 0x001f2300
_G.CustomGameEventManager.__self userdata userdata: 0x001f24d0
_G.CustomNetTables table table: 0x001f1de8
_G.CustomNetTables.__self userdata userdata: 0x001f1e28
_G.CustomUI table table: 0x001f2a48
_G.CustomUI.__self userdata userdata: 0x001f2a88
_G.DAMAGE_TYPE_ALL number 7
_G.DAMAGE_TYPE_HP_REMOVAL number 8
_G.DAMAGE_TYPE_MAGICAL number 2
_G.DAMAGE_TYPE_NONE number 0
_G.DAMAGE_TYPE_PHYSICAL number 1
_G.DAMAGE_TYPE_PURE number 4
_G.DMG_ACID number 1048576
_G.DMG_AIRBOAT number 33554432
_G.DMG_ALWAYSGIB number 8192
_G.DMG_BLAST number 64
_G.DMG_BLAST_SURFACE number 134217728
_G.DMG_BUCKSHOT number 536870912
_G.DMG_BULLET number 2
_G.DMG_BURN number 8
_G.DMG_CLUB number 128
_G.DMG_CRUSH number 1
_G.DMG_DIRECT number 268435456
_G.DMG_DISSOLVE number 67108864
_G.DMG_DROWN number 16384
_G.DMG_DROWNRECOVER number 524288
_G.DMG_ENERGYBEAM number 1024
_G.DMG_FALL number 32
_G.DMG_GENERIC number 0
_G.DMG_NERVEGAS number 65536
_G.DMG_NEVERGIB number 4096
_G.DMG_PARALYZE number 32768
_G.DMG_PHYSGUN number 8388608
_G.DMG_PLASMA number 16777216
_G.DMG_POISON number 131072
_G.DMG_PREVENT_PHYSICS_FORCE number 2048
_G.DMG_RADIATION number 262144
_G.DMG_REMOVENORAGDOLL number 4194304
_G.DMG_SHOCK number 256
_G.DMG_SLASH number 4
_G.DMG_SLOWBURN number 2097152
_G.DMG_SONIC number 512
_G.DMG_VEHICLE number 16
_G.DOTAGameManager table table: 0x00133598
_G.DOTAGameManager.__self userdata userdata: 0x001335d8
_G.DOTA_ABILITY_BEHAVIOR_AOE number 32
_G.DOTA_ABILITY_BEHAVIOR_ATTACK number 131072
_G.DOTA_ABILITY_BEHAVIOR_AURA number 65536
_G.DOTA_ABILITY_BEHAVIOR_AUTOCAST number 4096
_G.DOTA_ABILITY_BEHAVIOR_CAN_SELF_CAST number 0
_G.DOTA_ABILITY_BEHAVIOR_CHANNELLED number 128
_G.DOTA_ABILITY_BEHAVIOR_DIRECTIONAL number 1024
_G.DOTA_ABILITY_BEHAVIOR_DONT_ALERT_TARGET number 16777216
_G.DOTA_ABILITY_BEHAVIOR_DONT_CANCEL_CHANNEL number 536870912
_G.DOTA_ABILITY_BEHAVIOR_DONT_CANCEL_MOVEMENT number 8388608
_G.DOTA_ABILITY_BEHAVIOR_DONT_RESUME_ATTACK number 33554432
_G.DOTA_ABILITY_BEHAVIOR_DONT_RESUME_MOVEMENT number 262144
_G.DOTA_ABILITY_BEHAVIOR_FREE_DRAW_TARGETING number 0
_G.DOTA_ABILITY_BEHAVIOR_HIDDEN number 1
_G.DOTA_ABILITY_BEHAVIOR_IGNORE_BACKSWING number 134217728
_G.DOTA_ABILITY_BEHAVIOR_IGNORE_CHANNEL number 4194304
_G.DOTA_ABILITY_BEHAVIOR_IGNORE_PSEUDO_QUEUE number 2097152
_G.DOTA_ABILITY_BEHAVIOR_IMMEDIATE number 2048
_G.DOTA_ABILITY_BEHAVIOR_ITEM number 256
_G.DOTA_ABILITY_BEHAVIOR_LAST_RESORT_POINT number -2147483648
_G.DOTA_ABILITY_BEHAVIOR_NONE number 0
_G.DOTA_ABILITY_BEHAVIOR_NORMAL_WHEN_STOLEN number 67108864
_G.DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE number 64
_G.DOTA_ABILITY_BEHAVIOR_NO_TARGET number 4
_G.DOTA_ABILITY_BEHAVIOR_OPTIONAL_NO_TARGET number 32768
_G.DOTA_ABILITY_BEHAVIOR_OPTIONAL_POINT number 16384
_G.DOTA_ABILITY_BEHAVIOR_OPTIONAL_UNIT_TARGET number 8192
_G.DOTA_ABILITY_BEHAVIOR_PASSIVE number 2
_G.DOTA_ABILITY_BEHAVIOR_POINT number 16
_G.DOTA_ABILITY_BEHAVIOR_ROOT_DISABLES number 524288
_G.DOTA_ABILITY_BEHAVIOR_RUNE_TARGET number 268435456
_G.DOTA_ABILITY_BEHAVIOR_SHOW_IN_GUIDES number 0
_G.DOTA_ABILITY_BEHAVIOR_SUPPRESS_ASSOCIATED_CONSUMABLE number 0
_G.DOTA_ABILITY_BEHAVIOR_TOGGLE number 512
_G.DOTA_ABILITY_BEHAVIOR_UNIT_TARGET number 8
_G.DOTA_ABILITY_BEHAVIOR_UNLOCKED_BY_EFFECT_INDEX number 0
_G.DOTA_ABILITY_BEHAVIOR_UNRESTRICTED number 1048576
_G.DOTA_ABILITY_BEHAVIOR_VECTOR_TARGETING number 1073741824
_G.DOTA_ABILITY_SPEAK_CAST number 1
_G.DOTA_ABILITY_SPEAK_START_ACTION_PHASE number 0
_G.DOTA_ATTACK_RECORD_CANNOT_FAIL number 6
_G.DOTA_ATTACK_RECORD_FAIL_BLOCKED_BY_OBSTRUCTION number 7
_G.DOTA_ATTACK_RECORD_FAIL_NO number 0
_G.DOTA_ATTACK_RECORD_FAIL_SOURCE_MISS number 2
_G.DOTA_ATTACK_RECORD_FAIL_TARGET_EVADED number 3
_G.DOTA_ATTACK_RECORD_FAIL_TARGET_INVULNERABLE number 4
_G.DOTA_ATTACK_RECORD_FAIL_TARGET_OUT_OF_RANGE number 5
_G.DOTA_ATTACK_RECORD_FAIL_TERRAIN_MISS number 1
_G.DOTA_ATTRIBUTE_AGILITY number 1
_G.DOTA_ATTRIBUTE_AGILITY_ARMOR number 6
_G.DOTA_ATTRIBUTE_AGILITY_ATTACK_SPEED number 7
_G.DOTA_ATTRIBUTE_AGILITY_DAMAGE number 5
_G.DOTA_ATTRIBUTE_AGILITY_MOVE_SPEED_PERCENT number 8
_G.DOTA_ATTRIBUTE_INTELLECT number 2
_G.DOTA_ATTRIBUTE_INTELLIGENCE_DAMAGE number 9
_G.DOTA_ATTRIBUTE_INTELLIGENCE_MAGIC_RESISTANCE_PERCENT number 13
_G.DOTA_ATTRIBUTE_INTELLIGENCE_MANA number 10
_G.DOTA_ATTRIBUTE_INTELLIGENCE_MANA_REGEN number 11
_G.DOTA_ATTRIBUTE_INTELLIGENCE_SPELL_AMP_PERCENT number 12
_G.DOTA_ATTRIBUTE_INVALID number -1
_G.DOTA_ATTRIBUTE_MAX number 3
_G.DOTA_ATTRIBUTE_STRENGTH number 0
_G.DOTA_ATTRIBUTE_STRENGTH_DAMAGE number 0
_G.DOTA_ATTRIBUTE_STRENGTH_HP number 1
_G.DOTA_ATTRIBUTE_STRENGTH_HP_REGEN number 2
_G.DOTA_ATTRIBUTE_STRENGTH_MAGIC_RESISTANCE_PERCENT number 4
_G.DOTA_ATTRIBUTE_STRENGTH_STATUS_RESISTANCE_PERCENT number 3
_G.DOTA_BUFF_REMOVE_ALL number 0
_G.DOTA_BUFF_REMOVE_ALLY number 2
_G.DOTA_BUFF_REMOVE_ENEMY number 1
_G.DOTA_CONNECTION_STATE_ABANDONED number 4
_G.DOTA_CONNECTION_STATE_CONNECTED number 2
_G.DOTA_CONNECTION_STATE_DISCONNECTED number 3
_G.DOTA_CONNECTION_STATE_FAILED number 6
_G.DOTA_CONNECTION_STATE_LOADING number 5
_G.DOTA_CONNECTION_STATE_NOT_YET_CONNECTED number 1
_G.DOTA_CONNECTION_STATE_UNKNOWN number 0
_G.DOTA_DAMAGE_CATEGORY_ATTACK number 1
_G.DOTA_DAMAGE_CATEGORY_SPELL number 0
_G.DOTA_DAMAGE_FLAG_BYPASSES_BLOCK number 8
_G.DOTA_DAMAGE_FLAG_BYPASSES_INVULNERABILITY number 4
_G.DOTA_DAMAGE_FLAG_DONT_DISPLAY_DAMAGE_IF_SOURCE_HIDDEN number 2048
_G.DOTA_DAMAGE_FLAG_HPLOSS number 32
_G.DOTA_DAMAGE_FLAG_IGNORES_BASE_PHYSICAL_ARMOR number 16384
_G.DOTA_DAMAGE_FLAG_IGNORES_MAGIC_ARMOR number 1
_G.DOTA_DAMAGE_FLAG_IGNORES_PHYSICAL_ARMOR number 2
_G.DOTA_DAMAGE_FLAG_NONE number 0
_G.DOTA_DAMAGE_FLAG_NON_LETHAL number 128
_G.DOTA_DAMAGE_FLAG_NO_DAMAGE_MULTIPLIERS number 512
_G.DOTA_DAMAGE_FLAG_NO_DIRECTOR_EVENT number 64
_G.DOTA_DAMAGE_FLAG_NO_SPELL_AMPLIFICATION number 1024
_G.DOTA_DAMAGE_FLAG_NO_SPELL_LIFESTEAL number 4096
_G.DOTA_DAMAGE_FLAG_PROPERTY_FIRE number 8192
_G.DOTA_DAMAGE_FLAG_REFLECTION number 16
_G.DOTA_DAMAGE_FLAG_USE_COMBAT_PROFICIENCY number 256
_G.DOTA_DEFAULT_MAX_TEAM number 5
_G.DOTA_DEFAULT_MAX_TEAM_PLAYERS number 10
_G.DOTA_DEFAULT_UI_ACTION_MINIMAP number 4
_G.DOTA_DEFAULT_UI_ACTION_PANEL number 3
_G.DOTA_DEFAULT_UI_CUSTOMUI_BEHIND_HUD_ELEMENTS number 27
_G.DOTA_DEFAULT_UI_ELEMENT_COUNT number 28
_G.DOTA_DEFAULT_UI_ENDGAME number 21
_G.DOTA_DEFAULT_UI_ENDGAME_CHAT number 22
_G.DOTA_DEFAULT_UI_FLYOUT_SCOREBOARD number 2
_G.DOTA_DEFAULT_UI_HERO_SELECTION_CLOCK number 15
_G.DOTA_DEFAULT_UI_HERO_SELECTION_GAME_NAME number 14
_G.DOTA_DEFAULT_UI_HERO_SELECTION_TEAMS number 13
_G.DOTA_DEFAULT_UI_INVALID number -1
_G.DOTA_DEFAULT_UI_INVENTORY_COURIER number 9
_G.DOTA_DEFAULT_UI_INVENTORY_GOLD number 11
_G.DOTA_DEFAULT_UI_INVENTORY_ITEMS number 7
_G.DOTA_DEFAULT_UI_INVENTORY_PANEL number 5
_G.DOTA_DEFAULT_UI_INVENTORY_PROTECT number 10
_G.DOTA_DEFAULT_UI_INVENTORY_QUICKBUY number 8
_G.DOTA_DEFAULT_UI_INVENTORY_SHOP number 6
_G.DOTA_DEFAULT_UI_KILLCAM number 25
_G.DOTA_DEFAULT_UI_PREGAME_STRATEGYUI number 24
_G.DOTA_DEFAULT_UI_QUICK_STATS number 23
_G.DOTA_DEFAULT_UI_SHOP_SUGGESTEDITEMS number 12
_G.DOTA_DEFAULT_UI_TOP_BAR number 26
_G.DOTA_DEFAULT_UI_TOP_BAR_BACKGROUND number 17
_G.DOTA_DEFAULT_UI_TOP_BAR_DIRE_TEAM number 19
_G.DOTA_DEFAULT_UI_TOP_BAR_RADIANT_TEAM number 18
_G.DOTA_DEFAULT_UI_TOP_BAR_SCORE number 20
_G.DOTA_DEFAULT_UI_TOP_HEROES number 1
_G.DOTA_DEFAULT_UI_TOP_MENU_BUTTONS number 16
_G.DOTA_DEFAULT_UI_TOP_TIMEOFDAY number 0
_G.DOTA_GAMERULES_STATE_CUSTOM_GAME_SETUP number 2
_G.DOTA_GAMERULES_STATE_DISCONNECT number 10
_G.DOTA_GAMERULES_STATE_GAME_IN_PROGRESS number 8
_G.DOTA_GAMERULES_STATE_HERO_SELECTION number 3
_G.DOTA_GAMERULES_STATE_INIT number 0
_G.DOTA_GAMERULES_STATE_POST_GAME number 9
_G.DOTA_GAMERULES_STATE_PRE_GAME number 7
_G.DOTA_GAMERULES_STATE_STRATEGY_TIME number 4
_G.DOTA_GAMERULES_STATE_TEAM_SHOWCASE number 5
_G.DOTA_GAMERULES_STATE_WAIT_FOR_MAP_TO_LOAD number 6
_G.DOTA_GAMERULES_STATE_WAIT_FOR_PLAYERS_TO_LOAD number 1
_G.DOTA_GC_TEAM_BAD_GUYS number 1
_G.DOTA_GC_TEAM_BROADCASTER number 2
_G.DOTA_GC_TEAM_GOOD_GUYS number 0
_G.DOTA_GC_TEAM_NOTEAM number 5
_G.DOTA_GC_TEAM_PLAYER_POOL number 4
_G.DOTA_GC_TEAM_SPECTATOR number 3
_G.DOTA_HEROPICK_STATE_ALL_DRAFT_SELECT number 55
_G.DOTA_HEROPICK_STATE_AP_SELECT number 1
_G.DOTA_HEROPICK_STATE_AR_SELECT number 30
_G.DOTA_HEROPICK_STATE_BD_SELECT number 52
_G.DOTA_HEROPICK_STATE_CD_BAN1 number 35
_G.DOTA_HEROPICK_STATE_CD_BAN2 number 36
_G.DOTA_HEROPICK_STATE_CD_BAN3 number 37
_G.DOTA_HEROPICK_STATE_CD_BAN4 number 38
_G.DOTA_HEROPICK_STATE_CD_BAN5 number 39
_G.DOTA_HEROPICK_STATE_CD_BAN6 number 40
_G.DOTA_HEROPICK_STATE_CD_CAPTAINPICK number 34
_G.DOTA_HEROPICK_STATE_CD_INTRO number 33
_G.DOTA_HEROPICK_STATE_CD_PICK number 51
_G.DOTA_HEROPICK_STATE_CD_SELECT1 number 41
_G.DOTA_HEROPICK_STATE_CD_SELECT10 number 50
_G.DOTA_HEROPICK_STATE_CD_SELECT2 number 42
_G.DOTA_HEROPICK_STATE_CD_SELECT3 number 43
_G.DOTA_HEROPICK_STATE_CD_SELECT4 number 44
_G.DOTA_HEROPICK_STATE_CD_SELECT5 number 45
_G.DOTA_HEROPICK_STATE_CD_SELECT6 number 46
_G.DOTA_HEROPICK_STATE_CD_SELECT7 number 47
_G.DOTA_HEROPICK_STATE_CD_SELECT8 number 48
_G.DOTA_HEROPICK_STATE_CD_SELECT9 number 49
_G.DOTA_HEROPICK_STATE_CM_BAN1 number 7
_G.DOTA_HEROPICK_STATE_CM_BAN10 number 16
_G.DOTA_HEROPICK_STATE_CM_BAN11 number 17
_G.DOTA_HEROPICK_STATE_CM_BAN12 number 18
_G.DOTA_HEROPICK_STATE_CM_BAN2 number 8
_G.DOTA_HEROPICK_STATE_CM_BAN3 number 9
_G.DOTA_HEROPICK_STATE_CM_BAN4 number 10
_G.DOTA_HEROPICK_STATE_CM_BAN5 number 11
_G.DOTA_HEROPICK_STATE_CM_BAN6 number 12
_G.DOTA_HEROPICK_STATE_CM_BAN7 number 13
_G.DOTA_HEROPICK_STATE_CM_BAN8 number 14
_G.DOTA_HEROPICK_STATE_CM_BAN9 number 15
_G.DOTA_HEROPICK_STATE_CM_CAPTAINPICK number 6
_G.DOTA_HEROPICK_STATE_CM_INTRO number 5
_G.DOTA_HEROPICK_STATE_CM_PICK number 29
_G.DOTA_HEROPICK_STATE_CM_SELECT1 number 19
_G.DOTA_HEROPICK_STATE_CM_SELECT10 number 28
_G.DOTA_HEROPICK_STATE_CM_SELECT2 number 20
_G.DOTA_HEROPICK_STATE_CM_SELECT3 number 21
_G.DOTA_HEROPICK_STATE_CM_SELECT4 number 22
_G.DOTA_HEROPICK_STATE_CM_SELECT5 number 23
_G.DOTA_HEROPICK_STATE_CM_SELECT6 number 24
_G.DOTA_HEROPICK_STATE_CM_SELECT7 number 25
_G.DOTA_HEROPICK_STATE_CM_SELECT8 number 26
_G.DOTA_HEROPICK_STATE_CM_SELECT9 number 27
_G.DOTA_HEROPICK_STATE_COUNT number 59
_G.DOTA_HEROPICK_STATE_CUSTOM_PICK_RULES number 58
_G.DOTA_HEROPICK_STATE_FH_SELECT number 32
_G.DOTA_HEROPICK_STATE_INTRO_SELECT_UNUSED number 3
_G.DOTA_HEROPICK_STATE_MO_SELECT number 31
_G.DOTA_HEROPICK_STATE_NONE number 0
_G.DOTA_HEROPICK_STATE_RD_SELECT_UNUSED number 4
_G.DOTA_HEROPICK_STATE_SD_SELECT number 2
_G.DOTA_HEROPICK_STATE_SELECT_PENALTY number 57
_G.DOTA_HERO_PICK_STATE_ABILITY_DRAFT_SELECT number 53
_G.DOTA_HERO_PICK_STATE_ARDM_SELECT number 54
_G.DOTA_HERO_PICK_STATE_CUSTOMGAME_SELECT number 56
_G.DOTA_HUD_CUSTOMUI_BEHIND_HUD_ELEMENTS number 27
_G.DOTA_HUD_VISIBILITY_ACTION_MINIMAP number 4
_G.DOTA_HUD_VISIBILITY_ACTION_PANEL number 3
_G.DOTA_HUD_VISIBILITY_COUNT number 28
_G.DOTA_HUD_VISIBILITY_ENDGAME number 21
_G.DOTA_HUD_VISIBILITY_ENDGAME_CHAT number 22
_G.DOTA_HUD_VISIBILITY_HERO_SELECTION_CLOCK number 15
_G.DOTA_HUD_VISIBILITY_HERO_SELECTION_GAME_NAME number 14
_G.DOTA_HUD_VISIBILITY_HERO_SELECTION_TEAMS number 13
_G.DOTA_HUD_VISIBILITY_INVALID number -1
_G.DOTA_HUD_VISIBILITY_INVENTORY_COURIER number 9
_G.DOTA_HUD_VISIBILITY_INVENTORY_GOLD number 11
_G.DOTA_HUD_VISIBILITY_INVENTORY_ITEMS number 7
_G.DOTA_HUD_VISIBILITY_INVENTORY_PANEL number 5
_G.DOTA_HUD_VISIBILITY_INVENTORY_PROTECT number 10
_G.DOTA_HUD_VISIBILITY_INVENTORY_QUICKBUY number 8
_G.DOTA_HUD_VISIBILITY_INVENTORY_SHOP number 6
_G.DOTA_HUD_VISIBILITY_KILLCAM number 25
_G.DOTA_HUD_VISIBILITY_PREGAME_STRATEGYUI number 24
_G.DOTA_HUD_VISIBILITY_QUICK_STATS number 23
_G.DOTA_HUD_VISIBILITY_SHOP_SUGGESTEDITEMS number 12
_G.DOTA_HUD_VISIBILITY_TOP_BAR number 26
_G.DOTA_HUD_VISIBILITY_TOP_BAR_BACKGROUND number 17
_G.DOTA_HUD_VISIBILITY_TOP_BAR_DIRE_TEAM number 19
_G.DOTA_HUD_VISIBILITY_TOP_BAR_RADIANT_TEAM number 18
_G.DOTA_HUD_VISIBILITY_TOP_BAR_SCORE number 20
_G.DOTA_HUD_VISIBILITY_TOP_HEROES number 1
_G.DOTA_HUD_VISIBILITY_TOP_MENU_BUTTONS number 16
_G.DOTA_HUD_VISIBILITY_TOP_SCOREBOARD number 2
_G.DOTA_HUD_VISIBILITY_TOP_TIMEOFDAY number 0
_G.DOTA_INVENTORY_ALLOW_DROP_AT_FOUNTAIN number 8
_G.DOTA_INVENTORY_ALLOW_DROP_ON_GROUND number 4
_G.DOTA_INVENTORY_ALLOW_MAIN number 1
_G.DOTA_INVENTORY_ALLOW_NONE number 0
_G.DOTA_INVENTORY_ALLOW_STASH number 2
_G.DOTA_INVENTORY_ALL_ACCESS number 3
_G.DOTA_INVENTORY_LIMIT_DROP_ON_GROUND number 16
_G.DOTA_ITEM_INVENTORY_SIZE number 10
_G.DOTA_ITEM_MAX number 19
_G.DOTA_ITEM_SLOT_1 number 0
_G.DOTA_ITEM_SLOT_2 number 1
_G.DOTA_ITEM_SLOT_3 number 2
_G.DOTA_ITEM_SLOT_4 number 3
_G.DOTA_ITEM_SLOT_5 number 4
_G.DOTA_ITEM_SLOT_6 number 5
_G.DOTA_ITEM_SLOT_7 number 6
_G.DOTA_ITEM_SLOT_8 number 7
_G.DOTA_ITEM_SLOT_9 number 8
_G.DOTA_ITEM_STASH_MAX number 16
_G.DOTA_ITEM_STASH_MIN number 10
_G.DOTA_ITEM_STASH_SIZE number 6
_G.DOTA_ITEM_TRANSIENT_CAST_ITEM number 20
_G.DOTA_ITEM_TRANSIENT_ITEM number 17
_G.DOTA_ITEM_TRANSIENT_RECIPE number 18
_G.DOTA_LOADOUT_PERSONA_1_END number 55
_G.DOTA_LOADOUT_PERSONA_1_START number 28
_G.DOTA_LOADOUT_TYPE_ABILITY1 number 22
_G.DOTA_LOADOUT_TYPE_ABILITY1_PERSONA_1 number 50
_G.DOTA_LOADOUT_TYPE_ABILITY2 number 23
_G.DOTA_LOADOUT_TYPE_ABILITY2_PERSONA_1 number 51
_G.DOTA_LOADOUT_TYPE_ABILITY3 number 24
_G.DOTA_LOADOUT_TYPE_ABILITY3_PERSONA_1 number 52
_G.DOTA_LOADOUT_TYPE_ABILITY4 number 25
_G.DOTA_LOADOUT_TYPE_ABILITY4_PERSONA_1 number 53
_G.DOTA_LOADOUT_TYPE_ABILITY_ATTACK number 21
_G.DOTA_LOADOUT_TYPE_ABILITY_ATTACK_PERSONA_1 number 49
_G.DOTA_LOADOUT_TYPE_ABILITY_ULTIMATE number 26
_G.DOTA_LOADOUT_TYPE_ABILITY_ULTIMATE_PERSONA_1 number 54
_G.DOTA_LOADOUT_TYPE_AMBIENT_EFFECTS number 20
_G.DOTA_LOADOUT_TYPE_AMBIENT_EFFECTS_PERSONA_1 number 48
_G.DOTA_LOADOUT_TYPE_ANNOUNCER number 58
_G.DOTA_LOADOUT_TYPE_ARMOR number 7
_G.DOTA_LOADOUT_TYPE_ARMOR_PERSONA_1 number 35
_G.DOTA_LOADOUT_TYPE_ARMS number 6
_G.DOTA_LOADOUT_TYPE_ARMS_PERSONA_1 number 34
_G.DOTA_LOADOUT_TYPE_BACK number 10
_G.DOTA_LOADOUT_TYPE_BACK_PERSONA_1 number 38
_G.DOTA_LOADOUT_TYPE_BELT number 8
_G.DOTA_LOADOUT_TYPE_BELT_PERSONA_1 number 36
_G.DOTA_LOADOUT_TYPE_BLINK_EFFECT number 69
_G.DOTA_LOADOUT_TYPE_BODY_HEAD number 15
_G.DOTA_LOADOUT_TYPE_BODY_HEAD_PERSONA_1 number 43
_G.DOTA_LOADOUT_TYPE_COUNT number 78
_G.DOTA_LOADOUT_TYPE_COURIER number 57
_G.DOTA_LOADOUT_TYPE_CURSOR_PACK number 67
_G.DOTA_LOADOUT_TYPE_DIRE_CREEPS number 73
_G.DOTA_LOADOUT_TYPE_DIRE_TOWER number 75
_G.DOTA_LOADOUT_TYPE_EMBLEM number 70
_G.DOTA_LOADOUT_TYPE_GLOVES number 12
_G.DOTA_LOADOUT_TYPE_GLOVES_PERSONA_1 number 40
_G.DOTA_LOADOUT_TYPE_HEAD number 4
_G.DOTA_LOADOUT_TYPE_HEAD_PERSONA_1 number 32
_G.DOTA_LOADOUT_TYPE_HEROIC_STATUE number 65
_G.DOTA_LOADOUT_TYPE_HUD_SKIN number 62
_G.DOTA_LOADOUT_TYPE_INVALID number -1
_G.DOTA_LOADOUT_TYPE_LEGS number 11
_G.DOTA_LOADOUT_TYPE_LEGS_PERSONA_1 number 39
_G.DOTA_LOADOUT_TYPE_LOADING_SCREEN number 63
_G.DOTA_LOADOUT_TYPE_MEGA_KILLS number 59
_G.DOTA_LOADOUT_TYPE_MISC number 14
_G.DOTA_LOADOUT_TYPE_MISC_PERSONA_1 number 42
_G.DOTA_LOADOUT_TYPE_MOUNT number 16
_G.DOTA_LOADOUT_TYPE_MOUNT_PERSONA_1 number 44
_G.DOTA_LOADOUT_TYPE_MULTIKILL_BANNER number 66
_G.DOTA_LOADOUT_TYPE_MUSIC number 60
_G.DOTA_LOADOUT_TYPE_NECK number 9
_G.DOTA_LOADOUT_TYPE_NECK_PERSONA_1 number 37
_G.DOTA_LOADOUT_TYPE_NONE number 77
_G.DOTA_LOADOUT_TYPE_OFFHAND_WEAPON number 1
_G.DOTA_LOADOUT_TYPE_OFFHAND_WEAPON2 number 3
_G.DOTA_LOADOUT_TYPE_OFFHAND_WEAPON2_PERSONA_1 number 31
_G.DOTA_LOADOUT_TYPE_OFFHAND_WEAPON_PERSONA_1 number 29
_G.DOTA_LOADOUT_TYPE_PERSONA_SELECTOR number 56
_G.DOTA_LOADOUT_TYPE_RADIANT_CREEPS number 72
_G.DOTA_LOADOUT_TYPE_RADIANT_TOWER number 74
_G.DOTA_LOADOUT_TYPE_SHAPESHIFT number 18
_G.DOTA_LOADOUT_TYPE_SHAPESHIFT_PERSONA_1 number 46
_G.DOTA_LOADOUT_TYPE_SHOULDER number 5
_G.DOTA_LOADOUT_TYPE_SHOULDER_PERSONA_1 number 33
_G.DOTA_LOADOUT_TYPE_SUMMON number 17
_G.DOTA_LOADOUT_TYPE_SUMMON_PERSONA_1 number 45
_G.DOTA_LOADOUT_TYPE_TAIL number 13
_G.DOTA_LOADOUT_TYPE_TAIL_PERSONA_1 number 41
_G.DOTA_LOADOUT_TYPE_TAUNT number 19
_G.DOTA_LOADOUT_TYPE_TAUNT_PERSONA_1 number 47
_G.DOTA_LOADOUT_TYPE_TELEPORT_EFFECT number 68
_G.DOTA_LOADOUT_TYPE_TERRAIN number 71
_G.DOTA_LOADOUT_TYPE_VERSUS_SCREEN number 76
_G.DOTA_LOADOUT_TYPE_VOICE number 27
_G.DOTA_LOADOUT_TYPE_VOICE_PERSONA_1 number 55
_G.DOTA_LOADOUT_TYPE_WARD number 61
_G.DOTA_LOADOUT_TYPE_WEAPON number 0
_G.DOTA_LOADOUT_TYPE_WEAPON2 number 2
_G.DOTA_LOADOUT_TYPE_WEAPON2_PERSONA_1 number 30
_G.DOTA_LOADOUT_TYPE_WEAPON_PERSONA_1 number 28
_G.DOTA_LOADOUT_TYPE_WEATHER number 64
_G.DOTA_MAX_PLAYERS number 64
_G.DOTA_MAX_PLAYER_TEAMS number 10
_G.DOTA_MAX_SPECTATOR_LOBBY_SIZE number 15
_G.DOTA_MAX_SPECTATOR_TEAM_SIZE number 40
_G.DOTA_MAX_TEAM number 24
_G.DOTA_MAX_TEAM_PLAYERS number 24
_G.DOTA_MINIMAP_EVENT_ANCIENT_UNDER_ATTACK number 2
_G.DOTA_MINIMAP_EVENT_BASE_GLYPHED number 8
_G.DOTA_MINIMAP_EVENT_BASE_UNDER_ATTACK number 4
_G.DOTA_MINIMAP_EVENT_CANCEL_TELEPORTING number 2048
_G.DOTA_MINIMAP_EVENT_ENEMY_TELEPORTING number 1024
_G.DOTA_MINIMAP_EVENT_HINT_LOCATION number 512
_G.DOTA_MINIMAP_EVENT_MOVE_TO_TARGET number 16384
_G.DOTA_MINIMAP_EVENT_RADAR number 4096
_G.DOTA_MINIMAP_EVENT_RADAR_TARGET number 8192
_G.DOTA_MINIMAP_EVENT_TEAMMATE_DIED number 64
_G.DOTA_MINIMAP_EVENT_TEAMMATE_TELEPORTING number 32
_G.DOTA_MINIMAP_EVENT_TEAMMATE_UNDER_ATTACK number 16
_G.DOTA_MINIMAP_EVENT_TUTORIAL_TASK_ACTIVE number 128
_G.DOTA_MINIMAP_EVENT_TUTORIAL_TASK_FINISHED number 256
_G.DOTA_MOTION_CONTROLLER_PRIORITY_HIGH number 3
_G.DOTA_MOTION_CONTROLLER_PRIORITY_HIGHEST number 4
_G.DOTA_MOTION_CONTROLLER_PRIORITY_LOW number 1
_G.DOTA_MOTION_CONTROLLER_PRIORITY_LOWEST number 0
_G.DOTA_MOTION_CONTROLLER_PRIORITY_MEDIUM number 2
_G.DOTA_MUSIC_STATUS_BATTLE number 2
_G.DOTA_MUSIC_STATUS_DEAD number 4
_G.DOTA_MUSIC_STATUS_EXPLORATION number 1
_G.DOTA_MUSIC_STATUS_LAST number 5
_G.DOTA_MUSIC_STATUS_NONE number 0
_G.DOTA_MUSIC_STATUS_PRE_GAME_EXPLORATION number 3
_G.DOTA_ModifyGold_AbandonedRedistribute number 5
_G.DOTA_ModifyGold_AbilityCost number 7
_G.DOTA_ModifyGold_Building number 11
_G.DOTA_ModifyGold_Buyback number 2
_G.DOTA_ModifyGold_CheatCommand number 8
_G.DOTA_ModifyGold_CourierKill number 15
_G.DOTA_ModifyGold_CreepKill number 13
_G.DOTA_ModifyGold_Death number 1
_G.DOTA_ModifyGold_GameTick number 10
_G.DOTA_ModifyGold_HeroKill number 12
_G.DOTA_ModifyGold_PurchaseConsumable number 3
_G.DOTA_ModifyGold_PurchaseItem number 4
_G.DOTA_ModifyGold_RoshanKill number 14
_G.DOTA_ModifyGold_SelectionPenalty number 9
_G.DOTA_ModifyGold_SellItem number 6
_G.DOTA_ModifyGold_SharedGold number 16
_G.DOTA_ModifyGold_Unspecified number 0
_G.DOTA_ModifyXP_CreepKill number 2
_G.DOTA_ModifyXP_HeroKill number 1
_G.DOTA_ModifyXP_RoshanKill number 3
_G.DOTA_ModifyXP_Unspecified number 0
_G.DOTA_PLAYER_LOADOUT_END number 76
_G.DOTA_PLAYER_LOADOUT_START number 57
_G.DOTA_PROJECTILE_ATTACHMENT_ATTACK_1 number 1
_G.DOTA_PROJECTILE_ATTACHMENT_ATTACK_2 number 2
_G.DOTA_PROJECTILE_ATTACHMENT_ATTACK_3 number 4
_G.DOTA_PROJECTILE_ATTACHMENT_ATTACK_4 number 5
_G.DOTA_PROJECTILE_ATTACHMENT_HITLOCATION number 3
_G.DOTA_PROJECTILE_ATTACHMENT_LAST number 6
_G.DOTA_PROJECTILE_ATTACHMENT_NONE number 0
_G.DOTA_RUNE_ARCANE number 6
_G.DOTA_RUNE_BOUNTY number 5
_G.DOTA_RUNE_COUNT number 8
_G.DOTA_RUNE_DOUBLEDAMAGE number 0
_G.DOTA_RUNE_HASTE number 1
_G.DOTA_RUNE_ILLUSION number 2
_G.DOTA_RUNE_INVALID number -1
_G.DOTA_RUNE_INVISIBILITY number 3
_G.DOTA_RUNE_REGENERATION number 4
_G.DOTA_RUNE_XP number 7
_G.DOTA_SHOP_CUSTOM number 6
_G.DOTA_SHOP_GROUND number 3
_G.DOTA_SHOP_HOME number 0
_G.DOTA_SHOP_NONE number 7
_G.DOTA_SHOP_SECRET number 2
_G.DOTA_SHOP_SECRET2 number 5
_G.DOTA_SHOP_SIDE number 1
_G.DOTA_SHOP_SIDE2 number 4
_G.DOTA_SHOWGENERICPOPUP_SHOW_NO_OTHER_DIALOGS number 2
_G.DOTA_SHOWGENERICPOPUP_TINT_SCREEN number 1
_G.DOTA_SPEECH_BAD_TEAM number 7
_G.DOTA_SPEECH_GOOD_TEAM number 6
_G.DOTA_SPEECH_RECIPIENT_TYPE_MAX number 9
_G.DOTA_SPEECH_SPECTATOR number 8
_G.DOTA_SPEECH_USER_ALL number 5
_G.DOTA_SPEECH_USER_INVALID number 0
_G.DOTA_SPEECH_USER_NEARBY number 4
_G.DOTA_SPEECH_USER_SINGLE number 1
_G.DOTA_SPEECH_USER_TEAM number 2
_G.DOTA_SPEECH_USER_TEAM_NEARBY number 3
_G.DOTA_STASH_SLOT_1 number 9
_G.DOTA_STASH_SLOT_2 number 10
_G.DOTA_STASH_SLOT_3 number 11
_G.DOTA_STASH_SLOT_4 number 12
_G.DOTA_STASH_SLOT_5 number 13
_G.DOTA_STASH_SLOT_6 number 14
_G.DOTA_TEAM_BADGUYS number 3
_G.DOTA_TEAM_COUNT number 14
_G.DOTA_TEAM_CUSTOM_1 number 6
_G.DOTA_TEAM_CUSTOM_2 number 7
_G.DOTA_TEAM_CUSTOM_3 number 8
_G.DOTA_TEAM_CUSTOM_4 number 9
_G.DOTA_TEAM_CUSTOM_5 number 10
_G.DOTA_TEAM_CUSTOM_6 number 11
_G.DOTA_TEAM_CUSTOM_7 number 12
_G.DOTA_TEAM_CUSTOM_8 number 13
_G.DOTA_TEAM_CUSTOM_COUNT number 8
_G.DOTA_TEAM_CUSTOM_MAX number 13
_G.DOTA_TEAM_CUSTOM_MIN number 6
_G.DOTA_TEAM_FIRST number 2
_G.DOTA_TEAM_GOODGUYS number 2
_G.DOTA_TEAM_NEUTRALS number 4
_G.DOTA_TEAM_NOTEAM number 5
_G.DOTA_UNIT_ATTACK_CAPABILITY_BIT_COUNT number 3
_G.DOTA_UNIT_CAP_MELEE_ATTACK number 1
_G.DOTA_UNIT_CAP_MOVE_FLY number 2
_G.DOTA_UNIT_CAP_MOVE_GROUND number 1
_G.DOTA_UNIT_CAP_MOVE_NONE number 0
_G.DOTA_UNIT_CAP_NO_ATTACK number 0
_G.DOTA_UNIT_CAP_RANGED_ATTACK number 2
_G.DOTA_UNIT_CAP_RANGED_ATTACK_DIRECTIONAL number 4
_G.DOTA_UNIT_ORDER_ATTACK_MOVE number 3
_G.DOTA_UNIT_ORDER_ATTACK_TARGET number 4
_G.DOTA_UNIT_ORDER_BUYBACK number 23
_G.DOTA_UNIT_ORDER_CAST_NO_TARGET number 8
_G.DOTA_UNIT_ORDER_CAST_POSITION number 5
_G.DOTA_UNIT_ORDER_CAST_RIVER_PAINT number 35
_G.DOTA_UNIT_ORDER_CAST_RUNE number 26
_G.DOTA_UNIT_ORDER_CAST_TARGET number 6
_G.DOTA_UNIT_ORDER_CAST_TARGET_TREE number 7
_G.DOTA_UNIT_ORDER_CAST_TOGGLE number 9
_G.DOTA_UNIT_ORDER_CAST_TOGGLE_AUTO number 20
_G.DOTA_UNIT_ORDER_CONTINUE number 33
_G.DOTA_UNIT_ORDER_DISASSEMBLE_ITEM number 18
_G.DOTA_UNIT_ORDER_DROP_ITEM number 12
_G.DOTA_UNIT_ORDER_DROP_ITEM_AT_FOUNTAIN number 37
_G.DOTA_UNIT_ORDER_EJECT_ITEM_FROM_STASH number 25
_G.DOTA_UNIT_ORDER_GIVE_ITEM number 13
_G.DOTA_UNIT_ORDER_GLYPH number 24
_G.DOTA_UNIT_ORDER_HOLD_POSITION number 10
_G.DOTA_UNIT_ORDER_MOVE_ITEM number 19
_G.DOTA_UNIT_ORDER_MOVE_TO_DIRECTION number 28
_G.DOTA_UNIT_ORDER_MOVE_TO_POSITION number 1
_G.DOTA_UNIT_ORDER_MOVE_TO_TARGET number 2
_G.DOTA_UNIT_ORDER_NONE number 0
_G.DOTA_UNIT_ORDER_PATROL number 29
_G.DOTA_UNIT_ORDER_PICKUP_ITEM number 14
_G.DOTA_UNIT_ORDER_PICKUP_RUNE number 15
_G.DOTA_UNIT_ORDER_PING_ABILITY number 27
_G.DOTA_UNIT_ORDER_PREGAME_ADJUST_ITEM_ASSIGNMENT number 36
_G.DOTA_UNIT_ORDER_PURCHASE_ITEM number 16
_G.DOTA_UNIT_ORDER_RADAR number 31
_G.DOTA_UNIT_ORDER_SELL_ITEM number 17
_G.DOTA_UNIT_ORDER_SET_ITEM_COMBINE_LOCK number 32
_G.DOTA_UNIT_ORDER_STOP number 21
_G.DOTA_UNIT_ORDER_TAUNT number 22
_G.DOTA_UNIT_ORDER_TRAIN_ABILITY number 11
_G.DOTA_UNIT_ORDER_VECTOR_TARGET_CANCELED number 34
_G.DOTA_UNIT_ORDER_VECTOR_TARGET_POSITION number 30
_G.DOTA_UNIT_TARGET_ALL number 55
_G.DOTA_UNIT_TARGET_BASIC number 18
_G.DOTA_UNIT_TARGET_BUILDING number 4
_G.DOTA_UNIT_TARGET_COURIER number 16
_G.DOTA_UNIT_TARGET_CREEP number 2
_G.DOTA_UNIT_TARGET_CUSTOM number 128
_G.DOTA_UNIT_TARGET_FLAG_CHECK_DISABLE_HELP number 65536
_G.DOTA_UNIT_TARGET_FLAG_DEAD number 8
_G.DOTA_UNIT_TARGET_FLAG_FOW_VISIBLE number 128
_G.DOTA_UNIT_TARGET_FLAG_INVULNERABLE number 64
_G.DOTA_UNIT_TARGET_FLAG_MAGIC_IMMUNE_ENEMIES number 16
_G.DOTA_UNIT_TARGET_FLAG_MANA_ONLY number 32768
_G.DOTA_UNIT_TARGET_FLAG_MELEE_ONLY number 4
_G.DOTA_UNIT_TARGET_FLAG_NONE number 0
_G.DOTA_UNIT_TARGET_FLAG_NOT_ANCIENTS number 512
_G.DOTA_UNIT_TARGET_FLAG_NOT_ATTACK_IMMUNE number 16384
_G.DOTA_UNIT_TARGET_FLAG_NOT_CREEP_HERO number 131072
_G.DOTA_UNIT_TARGET_FLAG_NOT_DOMINATED number 2048
_G.DOTA_UNIT_TARGET_FLAG_NOT_ILLUSIONS number 8192
_G.DOTA_UNIT_TARGET_FLAG_NOT_MAGIC_IMMUNE_ALLIES number 32
_G.DOTA_UNIT_TARGET_FLAG_NOT_NIGHTMARED number 524288
_G.DOTA_UNIT_TARGET_FLAG_NOT_SUMMONED number 4096
_G.DOTA_UNIT_TARGET_FLAG_NO_INVIS number 256
_G.DOTA_UNIT_TARGET_FLAG_OUT_OF_WORLD number 262144
_G.DOTA_UNIT_TARGET_FLAG_PLAYER_CONTROLLED number 1024
_G.DOTA_UNIT_TARGET_FLAG_PREFER_ENEMIES number 1048576
_G.DOTA_UNIT_TARGET_FLAG_RANGED_ONLY number 2
_G.DOTA_UNIT_TARGET_FLAG_RESPECT_OBSTRUCTIONS number 2097152
_G.DOTA_UNIT_TARGET_HERO number 1
_G.DOTA_UNIT_TARGET_NONE number 0
_G.DOTA_UNIT_TARGET_OTHER number 32
_G.DOTA_UNIT_TARGET_TEAM_BOTH number 3
_G.DOTA_UNIT_TARGET_TEAM_CUSTOM number 4
_G.DOTA_UNIT_TARGET_TEAM_ENEMY number 2
_G.DOTA_UNIT_TARGET_TEAM_FRIENDLY number 1
_G.DOTA_UNIT_TARGET_TEAM_NONE number 0
_G.DOTA_UNIT_TARGET_TREE number 64
_G.DOUBLE_SHOT number 3
_G.DOUBLE_SHOT_NPC number 4
_G.DebugBreak function function: 0x001b8d68
_G.DebugDrawBox function function: 0x001414d8
_G.DebugDrawBoxDirection function function: 0x00141760
_G.DebugDrawCircle function function: 0x001415d8
_G.DebugDrawClear function function: 0x001417e8
_G.DebugDrawLine function function: 0x00141558
_G.DebugDrawLine_vCol function function: 0x001416d8
_G.DebugDrawScreenTextLine function function: 0x00141348
_G.DebugDrawSphere function function: 0x00141658
_G.DebugDrawText function function: 0x00141458
_G.DebugScreenTextPretty function function: 0x001413d0
_G.DeepPrint function function: 0x001c2070
_G.DeepPrintTable function function: 0x001b9910
_G.DeepToString function function: 0x001b99c8
_G.Deg2Rad function function: 0x001d3478
_G.DestroyDamageInfo function function: 0x00141b90
_G.DoCleaveAttack function function: 0x0014a418
_G.DoEntFire function function: 0x0013e858
_G.DoEntFireByInstanceHandle function function: 0x0013e960
_G.DoIncludeScript function function: 0x00177ed0
_G.DoScriptAssert function function: 0x0013ef98
_G.DoUniqueString function function: 0x0013f7c8
_G.DotProduct function function: 0x00149e38
_G.DumpScriptBindings function function: 0x001e1b78
_G.DumpSpawnGroupEntityFilters function function: 0x001c9a68
_G.Dynamic_Wrap function function: 0x001c63a0
_G.EDesc table table: 0x00117570
_G.EDesc.ABILITY_TYPES table table: 0x0016bfa0
_G.EDesc.ABILITY_TYPES.ABILITY_TYPE_ATTRIBUTES string 
_G.EDesc.ABILITY_TYPES.ABILITY_TYPE_BASIC string 
_G.EDesc.ABILITY_TYPES.ABILITY_TYPE_HIDDEN string 
_G.EDesc.ABILITY_TYPES.ABILITY_TYPE_ULTIMATE string 
_G.EDesc.AbilityLearnResult_t table table: 0x0016be60
_G.EDesc.AbilityLearnResult_t.ABILITY_CANNOT_BE_UPGRADED_AT_MAX string 
_G.EDesc.AbilityLearnResult_t.ABILITY_CANNOT_BE_UPGRADED_NOT_UPGRADABLE string 
_G.EDesc.AbilityLearnResult_t.ABILITY_CANNOT_BE_UPGRADED_REQUIRES_LEVEL string 
_G.EDesc.AbilityLearnResult_t.ABILITY_CAN_BE_UPGRADED string 
_G.EDesc.AbilityLearnResult_t.ABILITY_NOT_LEARNABLE string 
_G.EDesc.AttributeDerivedStats table table: 0x00175fc8
_G.EDesc.AttributeDerivedStats.DOTA_ATTRIBUTE_AGILITY_ARMOR string 
_G.EDesc.AttributeDerivedStats.DOTA_ATTRIBUTE_AGILITY_ATTACK_SPEED string 
_G.EDesc.AttributeDerivedStats.DOTA_ATTRIBUTE_AGILITY_DAMAGE string 
_G.EDesc.AttributeDerivedStats.DOTA_ATTRIBUTE_AGILITY_MOVE_SPEED_PERCENT string 
_G.EDesc.AttributeDerivedStats.DOTA_ATTRIBUTE_INTELLIGENCE_DAMAGE string 
_G.EDesc.AttributeDerivedStats.DOTA_ATTRIBUTE_INTELLIGENCE_MAGIC_RESISTANCE_PERCENT string 
_G.EDesc.AttributeDerivedStats.DOTA_ATTRIBUTE_INTELLIGENCE_MANA string 
_G.EDesc.AttributeDerivedStats.DOTA_ATTRIBUTE_INTELLIGENCE_MANA_REGEN string 
_G.EDesc.AttributeDerivedStats.DOTA_ATTRIBUTE_INTELLIGENCE_SPELL_AMP_PERCENT string 
_G.EDesc.AttributeDerivedStats.DOTA_ATTRIBUTE_STRENGTH_DAMAGE string 
_G.EDesc.AttributeDerivedStats.DOTA_ATTRIBUTE_STRENGTH_HP string 
_G.EDesc.AttributeDerivedStats.DOTA_ATTRIBUTE_STRENGTH_HP_REGEN string 
_G.EDesc.AttributeDerivedStats.DOTA_ATTRIBUTE_STRENGTH_MAGIC_RESISTANCE_PERCENT string 
_G.EDesc.AttributeDerivedStats.DOTA_ATTRIBUTE_STRENGTH_STATUS_RESISTANCE_PERCENT string 
_G.EDesc.Attributes table table: 0x00175d48
_G.EDesc.Attributes.DOTA_ATTRIBUTE_AGILITY string 
_G.EDesc.Attributes.DOTA_ATTRIBUTE_INTELLECT string 
_G.EDesc.Attributes.DOTA_ATTRIBUTE_INVALID string 
_G.EDesc.Attributes.DOTA_ATTRIBUTE_MAX string 
_G.EDesc.Attributes.DOTA_ATTRIBUTE_STRENGTH string 
_G.EDesc.DAMAGE_TYPES table table: 0x0014cdc0
_G.EDesc.DAMAGE_TYPES.DAMAGE_TYPE_ALL string 
_G.EDesc.DAMAGE_TYPES.DAMAGE_TYPE_HP_REMOVAL string 
_G.EDesc.DAMAGE_TYPES.DAMAGE_TYPE_MAGICAL string 
_G.EDesc.DAMAGE_TYPES.DAMAGE_TYPE_NONE string 
_G.EDesc.DAMAGE_TYPES.DAMAGE_TYPE_PHYSICAL string 
_G.EDesc.DAMAGE_TYPES.DAMAGE_TYPE_PURE string 
_G.EDesc.DOTAAbilitySpeakTrigger_t table table: 0x00177140
_G.EDesc.DOTAAbilitySpeakTrigger_t.DOTA_ABILITY_SPEAK_CAST string 
_G.EDesc.DOTAAbilitySpeakTrigger_t.DOTA_ABILITY_SPEAK_START_ACTION_PHASE string 
_G.EDesc.DOTADamageFlag_t table table: 0x0014d1b0
_G.EDesc.DOTADamageFlag_t.DOTA_DAMAGE_FLAG_BYPASSES_BLOCK string 
_G.EDesc.DOTADamageFlag_t.DOTA_DAMAGE_FLAG_BYPASSES_INVULNERABILITY string 
_G.EDesc.DOTADamageFlag_t.DOTA_DAMAGE_FLAG_DONT_DISPLAY_DAMAGE_IF_SOURCE_HIDDEN string 
_G.EDesc.DOTADamageFlag_t.DOTA_DAMAGE_FLAG_HPLOSS string 
_G.EDesc.DOTADamageFlag_t.DOTA_DAMAGE_FLAG_IGNORES_BASE_PHYSICAL_ARMOR string 
_G.EDesc.DOTADamageFlag_t.DOTA_DAMAGE_FLAG_IGNORES_MAGIC_ARMOR string 
_G.EDesc.DOTADamageFlag_t.DOTA_DAMAGE_FLAG_IGNORES_PHYSICAL_ARMOR string 
_G.EDesc.DOTADamageFlag_t.DOTA_DAMAGE_FLAG_NONE string 
_G.EDesc.DOTADamageFlag_t.DOTA_DAMAGE_FLAG_NON_LETHAL string 
_G.EDesc.DOTADamageFlag_t.DOTA_DAMAGE_FLAG_NO_DAMAGE_MULTIPLIERS string 
_G.EDesc.DOTADamageFlag_t.DOTA_DAMAGE_FLAG_NO_DIRECTOR_EVENT string 
_G.EDesc.DOTADamageFlag_t.DOTA_DAMAGE_FLAG_NO_SPELL_AMPLIFICATION string 
_G.EDesc.DOTADamageFlag_t.DOTA_DAMAGE_FLAG_NO_SPELL_LIFESTEAL string 
_G.EDesc.DOTADamageFlag_t.DOTA_DAMAGE_FLAG_PROPERTY_FIRE string 
_G.EDesc.DOTADamageFlag_t.DOTA_DAMAGE_FLAG_REFLECTION string 
_G.EDesc.DOTADamageFlag_t.DOTA_DAMAGE_FLAG_USE_COMBAT_PROFICIENCY string 
_G.EDesc.DOTAHUDVisibility_t table table: 0x0014dd18
_G.EDesc.DOTAHUDVisibility_t.DOTA_HUD_CUSTOMUI_BEHIND_HUD_ELEMENTS string 
_G.EDesc.DOTAHUDVisibility_t.DOTA_HUD_VISIBILITY_ACTION_MINIMAP string 
_G.EDesc.DOTAHUDVisibility_t.DOTA_HUD_VISIBILITY_ACTION_PANEL string 
_G.EDesc.DOTAHUDVisibility_t.DOTA_HUD_VISIBILITY_COUNT string 
_G.EDesc.DOTAHUDVisibility_t.DOTA_HUD_VISIBILITY_ENDGAME string 
_G.EDesc.DOTAHUDVisibility_t.DOTA_HUD_VISIBILITY_ENDGAME_CHAT string 
_G.EDesc.DOTAHUDVisibility_t.DOTA_HUD_VISIBILITY_HERO_SELECTION_CLOCK string 
_G.EDesc.DOTAHUDVisibility_t.DOTA_HUD_VISIBILITY_HERO_SELECTION_GAME_NAME string 
_G.EDesc.DOTAHUDVisibility_t.DOTA_HUD_VISIBILITY_HERO_SELECTION_TEAMS string 
_G.EDesc.DOTAHUDVisibility_t.DOTA_HUD_VISIBILITY_INVALID string 
_G.EDesc.DOTAHUDVisibility_t.DOTA_HUD_VISIBILITY_INVENTORY_COURIER string 
_G.EDesc.DOTAHUDVisibility_t.DOTA_HUD_VISIBILITY_INVENTORY_GOLD string 
_G.EDesc.DOTAHUDVisibility_t.DOTA_HUD_VISIBILITY_INVENTORY_ITEMS string 
_G.EDesc.DOTAHUDVisibility_t.DOTA_HUD_VISIBILITY_INVENTORY_PANEL string 
_G.EDesc.DOTAHUDVisibility_t.DOTA_HUD_VISIBILITY_INVENTORY_PROTECT string 
_G.EDesc.DOTAHUDVisibility_t.DOTA_HUD_VISIBILITY_INVENTORY_QUICKBUY string 
_G.EDesc.DOTAHUDVisibility_t.DOTA_HUD_VISIBILITY_INVENTORY_SHOP string 
_G.EDesc.DOTAHUDVisibility_t.DOTA_HUD_VISIBILITY_KILLCAM string 
_G.EDesc.DOTAHUDVisibility_t.DOTA_HUD_VISIBILITY_PREGAME_STRATEGYUI string 
_G.EDesc.DOTAHUDVisibility_t.DOTA_HUD_VISIBILITY_QUICK_STATS string 
_G.EDesc.DOTAHUDVisibility_t.DOTA_HUD_VISIBILITY_SHOP_SUGGESTEDITEMS string 
_G.EDesc.DOTAHUDVisibility_t.DOTA_HUD_VISIBILITY_TOP_BAR string 
_G.EDesc.DOTAHUDVisibility_t.DOTA_HUD_VISIBILITY_TOP_BAR_BACKGROUND string 
_G.EDesc.DOTAHUDVisibility_t.DOTA_HUD_VISIBILITY_TOP_BAR_DIRE_TEAM string 
_G.EDesc.DOTAHUDVisibility_t.DOTA_HUD_VISIBILITY_TOP_BAR_RADIANT_TEAM string 
_G.EDesc.DOTAHUDVisibility_t.DOTA_HUD_VISIBILITY_TOP_BAR_SCORE string 
_G.EDesc.DOTAHUDVisibility_t.DOTA_HUD_VISIBILITY_TOP_HEROES string 
_G.EDesc.DOTAHUDVisibility_t.DOTA_HUD_VISIBILITY_TOP_MENU_BUTTONS string 
_G.EDesc.DOTAHUDVisibility_t.DOTA_HUD_VISIBILITY_TOP_SCOREBOARD string 
_G.EDesc.DOTAHUDVisibility_t.DOTA_HUD_VISIBILITY_TOP_TIMEOFDAY string 
_G.EDesc.DOTAInventoryFlags_t table table: 0x0014ab88
_G.EDesc.DOTAInventoryFlags_t.DOTA_INVENTORY_ALLOW_DROP_AT_FOUNTAIN string 
_G.EDesc.DOTAInventoryFlags_t.DOTA_INVENTORY_ALLOW_DROP_ON_GROUND string 
_G.EDesc.DOTAInventoryFlags_t.DOTA_INVENTORY_ALLOW_MAIN string 
_G.EDesc.DOTAInventoryFlags_t.DOTA_INVENTORY_ALLOW_NONE string 
_G.EDesc.DOTAInventoryFlags_t.DOTA_INVENTORY_ALLOW_STASH string 
_G.EDesc.DOTAInventoryFlags_t.DOTA_INVENTORY_ALL_ACCESS string 
_G.EDesc.DOTAInventoryFlags_t.DOTA_INVENTORY_LIMIT_DROP_ON_GROUND string 
_G.EDesc.DOTALimits_t table table: 0x0016b098
_G.EDesc.DOTALimits_t.DOTA_DEFAULT_MAX_TEAM string Default number of players per team.
_G.EDesc.DOTALimits_t.DOTA_DEFAULT_MAX_TEAM_PLAYERS string Default number of non-spectator players supported.
_G.EDesc.DOTALimits_t.DOTA_MAX_PLAYERS string Max number of players connected to the server including spectators.
_G.EDesc.DOTALimits_t.DOTA_MAX_PLAYER_TEAMS string Max number of player teams supported.
_G.EDesc.DOTALimits_t.DOTA_MAX_SPECTATOR_LOBBY_SIZE string Max number of viewers in a spectator lobby.
_G.EDesc.DOTALimits_t.DOTA_MAX_SPECTATOR_TEAM_SIZE string How many spectators can watch.
_G.EDesc.DOTALimits_t.DOTA_MAX_TEAM string Max number of players per team.
_G.EDesc.DOTALimits_t.DOTA_MAX_TEAM_PLAYERS string Max number of non-spectator players supported.
_G.EDesc.DOTAMinimapEvent_t table table: 0x0012eef0
_G.EDesc.DOTAMinimapEvent_t.DOTA_MINIMAP_EVENT_ANCIENT_UNDER_ATTACK string 
_G.EDesc.DOTAMinimapEvent_t.DOTA_MINIMAP_EVENT_BASE_GLYPHED string 
_G.EDesc.DOTAMinimapEvent_t.DOTA_MINIMAP_EVENT_BASE_UNDER_ATTACK string 
_G.EDesc.DOTAMinimapEvent_t.DOTA_MINIMAP_EVENT_CANCEL_TELEPORTING string 
_G.EDesc.DOTAMinimapEvent_t.DOTA_MINIMAP_EVENT_ENEMY_TELEPORTING string 
_G.EDesc.DOTAMinimapEvent_t.DOTA_MINIMAP_EVENT_HINT_LOCATION string 
_G.EDesc.DOTAMinimapEvent_t.DOTA_MINIMAP_EVENT_MOVE_TO_TARGET string 
_G.EDesc.DOTAMinimapEvent_t.DOTA_MINIMAP_EVENT_RADAR string 
_G.EDesc.DOTAMinimapEvent_t.DOTA_MINIMAP_EVENT_RADAR_TARGET string 
_G.EDesc.DOTAMinimapEvent_t.DOTA_MINIMAP_EVENT_TEAMMATE_DIED string 
_G.EDesc.DOTAMinimapEvent_t.DOTA_MINIMAP_EVENT_TEAMMATE_TELEPORTING string 
_G.EDesc.DOTAMinimapEvent_t.DOTA_MINIMAP_EVENT_TEAMMATE_UNDER_ATTACK string 
_G.EDesc.DOTAMinimapEvent_t.DOTA_MINIMAP_EVENT_TUTORIAL_TASK_ACTIVE string 
_G.EDesc.DOTAMinimapEvent_t.DOTA_MINIMAP_EVENT_TUTORIAL_TASK_FINISHED string 
_G.EDesc.DOTAModifierAttribute_t table table: 0x00175c48
_G.EDesc.DOTAModifierAttribute_t.MODIFIER_ATTRIBUTE_AURA_PRIORITY string 
_G.EDesc.DOTAModifierAttribute_t.MODIFIER_ATTRIBUTE_IGNORE_INVULNERABLE string 
_G.EDesc.DOTAModifierAttribute_t.MODIFIER_ATTRIBUTE_MULTIPLE string 
_G.EDesc.DOTAModifierAttribute_t.MODIFIER_ATTRIBUTE_NONE string 
_G.EDesc.DOTAModifierAttribute_t.MODIFIER_ATTRIBUTE_PERMANENT string 
_G.EDesc.DOTAMusicStatus_t table table: 0x0014cba8
_G.EDesc.DOTAMusicStatus_t.DOTA_MUSIC_STATUS_BATTLE string 
_G.EDesc.DOTAMusicStatus_t.DOTA_MUSIC_STATUS_DEAD string 
_G.EDesc.DOTAMusicStatus_t.DOTA_MUSIC_STATUS_EXPLORATION string 
_G.EDesc.DOTAMusicStatus_t.DOTA_MUSIC_STATUS_LAST string 
_G.EDesc.DOTAMusicStatus_t.DOTA_MUSIC_STATUS_NONE string 
_G.EDesc.DOTAMusicStatus_t.DOTA_MUSIC_STATUS_PRE_GAME_EXPLORATION string 
_G.EDesc.DOTAProjectileAttachment_t table table: 0x0014dbc0
_G.EDesc.DOTAProjectileAttachment_t.DOTA_PROJECTILE_ATTACHMENT_ATTACK_1 string 
_G.EDesc.DOTAProjectileAttachment_t.DOTA_PROJECTILE_ATTACHMENT_ATTACK_2 string 
_G.EDesc.DOTAProjectileAttachment_t.DOTA_PROJECTILE_ATTACHMENT_ATTACK_3 string 
_G.EDesc.DOTAProjectileAttachment_t.DOTA_PROJECTILE_ATTACHMENT_ATTACK_4 string 
_G.EDesc.DOTAProjectileAttachment_t.DOTA_PROJECTILE_ATTACHMENT_HITLOCATION string 
_G.EDesc.DOTAProjectileAttachment_t.DOTA_PROJECTILE_ATTACHMENT_LAST string 
_G.EDesc.DOTAProjectileAttachment_t.DOTA_PROJECTILE_ATTACHMENT_NONE string 
_G.EDesc.DOTAScriptInventorySlot_t table table: 0x00131380
_G.EDesc.DOTAScriptInventorySlot_t.DOTA_ITEM_SLOT_1 string 
_G.EDesc.DOTAScriptInventorySlot_t.DOTA_ITEM_SLOT_2 string 
_G.EDesc.DOTAScriptInventorySlot_t.DOTA_ITEM_SLOT_3 string 
_G.EDesc.DOTAScriptInventorySlot_t.DOTA_ITEM_SLOT_4 string 
_G.EDesc.DOTAScriptInventorySlot_t.DOTA_ITEM_SLOT_5 string 
_G.EDesc.DOTAScriptInventorySlot_t.DOTA_ITEM_SLOT_6 string 
_G.EDesc.DOTAScriptInventorySlot_t.DOTA_ITEM_SLOT_7 string 
_G.EDesc.DOTAScriptInventorySlot_t.DOTA_ITEM_SLOT_8 string 
_G.EDesc.DOTAScriptInventorySlot_t.DOTA_ITEM_SLOT_9 string 
_G.EDesc.DOTAScriptInventorySlot_t.DOTA_STASH_SLOT_1 string 
_G.EDesc.DOTAScriptInventorySlot_t.DOTA_STASH_SLOT_2 string 
_G.EDesc.DOTAScriptInventorySlot_t.DOTA_STASH_SLOT_3 string 
_G.EDesc.DOTAScriptInventorySlot_t.DOTA_STASH_SLOT_4 string 
_G.EDesc.DOTAScriptInventorySlot_t.DOTA_STASH_SLOT_5 string 
_G.EDesc.DOTAScriptInventorySlot_t.DOTA_STASH_SLOT_6 string 
_G.EDesc.DOTASlotType_t table table: 0x0012f3e8
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_PERSONA_1_END string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_PERSONA_1_START string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_ABILITY1 string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_ABILITY1_PERSONA_1 string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_ABILITY2 string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_ABILITY2_PERSONA_1 string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_ABILITY3 string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_ABILITY3_PERSONA_1 string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_ABILITY4 string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_ABILITY4_PERSONA_1 string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_ABILITY_ATTACK string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_ABILITY_ATTACK_PERSONA_1 string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_ABILITY_ULTIMATE string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_ABILITY_ULTIMATE_PERSONA_1 string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_AMBIENT_EFFECTS string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_AMBIENT_EFFECTS_PERSONA_1 string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_ANNOUNCER string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_ARMOR string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_ARMOR_PERSONA_1 string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_ARMS string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_ARMS_PERSONA_1 string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_BACK string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_BACK_PERSONA_1 string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_BELT string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_BELT_PERSONA_1 string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_BLINK_EFFECT string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_BODY_HEAD string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_BODY_HEAD_PERSONA_1 string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_COUNT string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_COURIER string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_CURSOR_PACK string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_DIRE_CREEPS string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_DIRE_TOWER string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_EMBLEM string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_GLOVES string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_GLOVES_PERSONA_1 string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_HEAD string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_HEAD_PERSONA_1 string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_HEROIC_STATUE string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_HUD_SKIN string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_INVALID string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_LEGS string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_LEGS_PERSONA_1 string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_LOADING_SCREEN string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_MEGA_KILLS string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_MISC string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_MISC_PERSONA_1 string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_MOUNT string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_MOUNT_PERSONA_1 string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_MULTIKILL_BANNER string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_MUSIC string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_NECK string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_NECK_PERSONA_1 string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_NONE string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_OFFHAND_WEAPON string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_OFFHAND_WEAPON2 string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_OFFHAND_WEAPON2_PERSONA_1 string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_OFFHAND_WEAPON_PERSONA_1 string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_PERSONA_SELECTOR string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_RADIANT_CREEPS string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_RADIANT_TOWER string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_SHAPESHIFT string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_SHAPESHIFT_PERSONA_1 string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_SHOULDER string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_SHOULDER_PERSONA_1 string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_SUMMON string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_SUMMON_PERSONA_1 string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_TAIL string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_TAIL_PERSONA_1 string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_TAUNT string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_TAUNT_PERSONA_1 string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_TELEPORT_EFFECT string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_TERRAIN string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_VERSUS_SCREEN string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_VOICE string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_VOICE_PERSONA_1 string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_WARD string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_WEAPON string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_WEAPON2 string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_WEAPON2_PERSONA_1 string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_WEAPON_PERSONA_1 string 
_G.EDesc.DOTASlotType_t.DOTA_LOADOUT_TYPE_WEATHER string 
_G.EDesc.DOTASlotType_t.DOTA_PLAYER_LOADOUT_END string 
_G.EDesc.DOTASlotType_t.DOTA_PLAYER_LOADOUT_START string 
_G.EDesc.DOTASpeechType_t table table: 0x001768e0
_G.EDesc.DOTASpeechType_t.DOTA_SPEECH_BAD_TEAM string 
_G.EDesc.DOTASpeechType_t.DOTA_SPEECH_GOOD_TEAM string 
_G.EDesc.DOTASpeechType_t.DOTA_SPEECH_RECIPIENT_TYPE_MAX string 
_G.EDesc.DOTASpeechType_t.DOTA_SPEECH_SPECTATOR string 
_G.EDesc.DOTASpeechType_t.DOTA_SPEECH_USER_ALL string 
_G.EDesc.DOTASpeechType_t.DOTA_SPEECH_USER_INVALID string 
_G.EDesc.DOTASpeechType_t.DOTA_SPEECH_USER_NEARBY string 
_G.EDesc.DOTASpeechType_t.DOTA_SPEECH_USER_SINGLE string 
_G.EDesc.DOTASpeechType_t.DOTA_SPEECH_USER_TEAM string 
_G.EDesc.DOTASpeechType_t.DOTA_SPEECH_USER_TEAM_NEARBY string 
_G.EDesc.DOTATeam_t table table: 0x00168478
_G.EDesc.DOTATeam_t.DOTA_TEAM_BADGUYS string 
_G.EDesc.DOTATeam_t.DOTA_TEAM_COUNT string 
_G.EDesc.DOTATeam_t.DOTA_TEAM_CUSTOM_1 string 
_G.EDesc.DOTATeam_t.DOTA_TEAM_CUSTOM_2 string 
_G.EDesc.DOTATeam_t.DOTA_TEAM_CUSTOM_3 string 
_G.EDesc.DOTATeam_t.DOTA_TEAM_CUSTOM_4 string 
_G.EDesc.DOTATeam_t.DOTA_TEAM_CUSTOM_5 string 
_G.EDesc.DOTATeam_t.DOTA_TEAM_CUSTOM_6 string 
_G.EDesc.DOTATeam_t.DOTA_TEAM_CUSTOM_7 string 
_G.EDesc.DOTATeam_t.DOTA_TEAM_CUSTOM_8 string 
_G.EDesc.DOTATeam_t.DOTA_TEAM_CUSTOM_COUNT string 
_G.EDesc.DOTATeam_t.DOTA_TEAM_CUSTOM_MAX string 
_G.EDesc.DOTATeam_t.DOTA_TEAM_CUSTOM_MIN string 
_G.EDesc.DOTATeam_t.DOTA_TEAM_FIRST string 
_G.EDesc.DOTATeam_t.DOTA_TEAM_GOODGUYS string 
_G.EDesc.DOTATeam_t.DOTA_TEAM_NEUTRALS string 
_G.EDesc.DOTATeam_t.DOTA_TEAM_NOTEAM string 
_G.EDesc.DOTAUnitAttackCapability_t table table: 0x0014c690
_G.EDesc.DOTAUnitAttackCapability_t.DOTA_UNIT_ATTACK_CAPABILITY_BIT_COUNT string 
_G.EDesc.DOTAUnitAttackCapability_t.DOTA_UNIT_CAP_MELEE_ATTACK string 
_G.EDesc.DOTAUnitAttackCapability_t.DOTA_UNIT_CAP_NO_ATTACK string 
_G.EDesc.DOTAUnitAttackCapability_t.DOTA_UNIT_CAP_RANGED_ATTACK string 
_G.EDesc.DOTAUnitAttackCapability_t.DOTA_UNIT_CAP_RANGED_ATTACK_DIRECTIONAL string 
_G.EDesc.DOTAUnitMoveCapability_t table table: 0x0014c790
_G.EDesc.DOTAUnitMoveCapability_t.DOTA_UNIT_CAP_MOVE_FLY string 
_G.EDesc.DOTAUnitMoveCapability_t.DOTA_UNIT_CAP_MOVE_GROUND string 
_G.EDesc.DOTAUnitMoveCapability_t.DOTA_UNIT_CAP_MOVE_NONE string 
_G.EDesc.DOTA_ABILITY_BEHAVIOR table table: 0x0016a940
_G.EDesc.DOTA_ABILITY_BEHAVIOR.DOTA_ABILITY_BEHAVIOR_AOE string 
_G.EDesc.DOTA_ABILITY_BEHAVIOR.DOTA_ABILITY_BEHAVIOR_ATTACK string 
_G.EDesc.DOTA_ABILITY_BEHAVIOR.DOTA_ABILITY_BEHAVIOR_AURA string 
_G.EDesc.DOTA_ABILITY_BEHAVIOR.DOTA_ABILITY_BEHAVIOR_AUTOCAST string 
_G.EDesc.DOTA_ABILITY_BEHAVIOR.DOTA_ABILITY_BEHAVIOR_CAN_SELF_CAST string 
_G.EDesc.DOTA_ABILITY_BEHAVIOR.DOTA_ABILITY_BEHAVIOR_CHANNELLED string 
_G.EDesc.DOTA_ABILITY_BEHAVIOR.DOTA_ABILITY_BEHAVIOR_DIRECTIONAL string 
_G.EDesc.DOTA_ABILITY_BEHAVIOR.DOTA_ABILITY_BEHAVIOR_DONT_ALERT_TARGET string 
_G.EDesc.DOTA_ABILITY_BEHAVIOR.DOTA_ABILITY_BEHAVIOR_DONT_CANCEL_CHANNEL string 
_G.EDesc.DOTA_ABILITY_BEHAVIOR.DOTA_ABILITY_BEHAVIOR_DONT_CANCEL_MOVEMENT string 
_G.EDesc.DOTA_ABILITY_BEHAVIOR.DOTA_ABILITY_BEHAVIOR_DONT_RESUME_ATTACK string 
_G.EDesc.DOTA_ABILITY_BEHAVIOR.DOTA_ABILITY_BEHAVIOR_DONT_RESUME_MOVEMENT string 
_G.EDesc.DOTA_ABILITY_BEHAVIOR.DOTA_ABILITY_BEHAVIOR_FREE_DRAW_TARGETING string 
_G.EDesc.DOTA_ABILITY_BEHAVIOR.DOTA_ABILITY_BEHAVIOR_HIDDEN string 
_G.EDesc.DOTA_ABILITY_BEHAVIOR.DOTA_ABILITY_BEHAVIOR_IGNORE_BACKSWING string 
_G.EDesc.DOTA_ABILITY_BEHAVIOR.DOTA_ABILITY_BEHAVIOR_IGNORE_CHANNEL string 
_G.EDesc.DOTA_ABILITY_BEHAVIOR.DOTA_ABILITY_BEHAVIOR_IGNORE_PSEUDO_QUEUE string 
_G.EDesc.DOTA_ABILITY_BEHAVIOR.DOTA_ABILITY_BEHAVIOR_IMMEDIATE string 
_G.EDesc.DOTA_ABILITY_BEHAVIOR.DOTA_ABILITY_BEHAVIOR_ITEM string 
_G.EDesc.DOTA_ABILITY_BEHAVIOR.DOTA_ABILITY_BEHAVIOR_LAST_RESORT_POINT string 
_G.EDesc.DOTA_ABILITY_BEHAVIOR.DOTA_ABILITY_BEHAVIOR_NONE string 
_G.EDesc.DOTA_ABILITY_BEHAVIOR.DOTA_ABILITY_BEHAVIOR_NORMAL_WHEN_STOLEN string 
_G.EDesc.DOTA_ABILITY_BEHAVIOR.DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE string 
_G.EDesc.DOTA_ABILITY_BEHAVIOR.DOTA_ABILITY_BEHAVIOR_NO_TARGET string 
_G.EDesc.DOTA_ABILITY_BEHAVIOR.DOTA_ABILITY_BEHAVIOR_OPTIONAL_NO_TARGET string 
_G.EDesc.DOTA_ABILITY_BEHAVIOR.DOTA_ABILITY_BEHAVIOR_OPTIONAL_POINT string 
_G.EDesc.DOTA_ABILITY_BEHAVIOR.DOTA_ABILITY_BEHAVIOR_OPTIONAL_UNIT_TARGET string 
_G.EDesc.DOTA_ABILITY_BEHAVIOR.DOTA_ABILITY_BEHAVIOR_PASSIVE string 
_G.EDesc.DOTA_ABILITY_BEHAVIOR.DOTA_ABILITY_BEHAVIOR_POINT string 
_G.EDesc.DOTA_ABILITY_BEHAVIOR.DOTA_ABILITY_BEHAVIOR_ROOT_DISABLES string 
_G.EDesc.DOTA_ABILITY_BEHAVIOR.DOTA_ABILITY_BEHAVIOR_RUNE_TARGET string 
_G.EDesc.DOTA_ABILITY_BEHAVIOR.DOTA_ABILITY_BEHAVIOR_SHOW_IN_GUIDES string 
_G.EDesc.DOTA_ABILITY_BEHAVIOR.DOTA_ABILITY_BEHAVIOR_SUPPRESS_ASSOCIATED_CONSUMABLE string 
_G.EDesc.DOTA_ABILITY_BEHAVIOR.DOTA_ABILITY_BEHAVIOR_TOGGLE string 
_G.EDesc.DOTA_ABILITY_BEHAVIOR.DOTA_ABILITY_BEHAVIOR_UNIT_TARGET string 
_G.EDesc.DOTA_ABILITY_BEHAVIOR.DOTA_ABILITY_BEHAVIOR_UNLOCKED_BY_EFFECT_INDEX string 
_G.EDesc.DOTA_ABILITY_BEHAVIOR.DOTA_ABILITY_BEHAVIOR_UNRESTRICTED string 
_G.EDesc.DOTA_ABILITY_BEHAVIOR.DOTA_ABILITY_BEHAVIOR_VECTOR_TARGETING string 
_G.EDesc.DOTA_GameState table table: 0x0014ae70
_G.EDesc.DOTA_GameState.DOTA_GAMERULES_STATE_CUSTOM_GAME_SETUP string 
_G.EDesc.DOTA_GameState.DOTA_GAMERULES_STATE_DISCONNECT string 
_G.EDesc.DOTA_GameState.DOTA_GAMERULES_STATE_GAME_IN_PROGRESS string 
_G.EDesc.DOTA_GameState.DOTA_GAMERULES_STATE_HERO_SELECTION string 
_G.EDesc.DOTA_GameState.DOTA_GAMERULES_STATE_INIT string 
_G.EDesc.DOTA_GameState.DOTA_GAMERULES_STATE_POST_GAME string 
_G.EDesc.DOTA_GameState.DOTA_GAMERULES_STATE_PRE_GAME string 
_G.EDesc.DOTA_GameState.DOTA_GAMERULES_STATE_STRATEGY_TIME string 
_G.EDesc.DOTA_GameState.DOTA_GAMERULES_STATE_TEAM_SHOWCASE string 
_G.EDesc.DOTA_GameState.DOTA_GAMERULES_STATE_WAIT_FOR_MAP_TO_LOAD string 
_G.EDesc.DOTA_GameState.DOTA_GAMERULES_STATE_WAIT_FOR_PLAYERS_TO_LOAD string 
_G.EDesc.DOTA_HeroPickState table table: 0x00167bd0
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_ALL_DRAFT_SELECT string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_AP_SELECT string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_AR_SELECT string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_BD_SELECT string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CD_BAN1 string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CD_BAN2 string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CD_BAN3 string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CD_BAN4 string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CD_BAN5 string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CD_BAN6 string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CD_CAPTAINPICK string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CD_INTRO string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CD_PICK string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CD_SELECT1 string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CD_SELECT10 string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CD_SELECT2 string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CD_SELECT3 string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CD_SELECT4 string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CD_SELECT5 string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CD_SELECT6 string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CD_SELECT7 string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CD_SELECT8 string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CD_SELECT9 string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CM_BAN1 string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CM_BAN10 string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CM_BAN11 string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CM_BAN12 string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CM_BAN2 string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CM_BAN3 string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CM_BAN4 string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CM_BAN5 string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CM_BAN6 string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CM_BAN7 string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CM_BAN8 string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CM_BAN9 string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CM_CAPTAINPICK string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CM_INTRO string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CM_PICK string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CM_SELECT1 string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CM_SELECT10 string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CM_SELECT2 string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CM_SELECT3 string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CM_SELECT4 string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CM_SELECT5 string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CM_SELECT6 string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CM_SELECT7 string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CM_SELECT8 string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CM_SELECT9 string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_COUNT string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_CUSTOM_PICK_RULES string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_FH_SELECT string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_INTRO_SELECT_UNUSED string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_MO_SELECT string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_NONE string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_RD_SELECT_UNUSED string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_SD_SELECT string 
_G.EDesc.DOTA_HeroPickState.DOTA_HEROPICK_STATE_SELECT_PENALTY string 
_G.EDesc.DOTA_HeroPickState.DOTA_HERO_PICK_STATE_ABILITY_DRAFT_SELECT string 
_G.EDesc.DOTA_HeroPickState.DOTA_HERO_PICK_STATE_ARDM_SELECT string 
_G.EDesc.DOTA_HeroPickState.DOTA_HERO_PICK_STATE_CUSTOMGAME_SELECT string 
_G.EDesc.DOTA_MOTION_CONTROLLER_PRIORITY table table: 0x00176970
_G.EDesc.DOTA_MOTION_CONTROLLER_PRIORITY.DOTA_MOTION_CONTROLLER_PRIORITY_HIGH string 
_G.EDesc.DOTA_MOTION_CONTROLLER_PRIORITY.DOTA_MOTION_CONTROLLER_PRIORITY_HIGHEST string 
_G.EDesc.DOTA_MOTION_CONTROLLER_PRIORITY.DOTA_MOTION_CONTROLLER_PRIORITY_LOW string 
_G.EDesc.DOTA_MOTION_CONTROLLER_PRIORITY.DOTA_MOTION_CONTROLLER_PRIORITY_LOWEST string 
_G.EDesc.DOTA_MOTION_CONTROLLER_PRIORITY.DOTA_MOTION_CONTROLLER_PRIORITY_MEDIUM string 
_G.EDesc.DOTA_RUNES table table: 0x00169290
_G.EDesc.DOTA_RUNES.DOTA_RUNE_ARCANE string 
_G.EDesc.DOTA_RUNES.DOTA_RUNE_BOUNTY string 
_G.EDesc.DOTA_RUNES.DOTA_RUNE_COUNT string 
_G.EDesc.DOTA_RUNES.DOTA_RUNE_DOUBLEDAMAGE string 
_G.EDesc.DOTA_RUNES.DOTA_RUNE_HASTE string 
_G.EDesc.DOTA_RUNES.DOTA_RUNE_ILLUSION string 
_G.EDesc.DOTA_RUNES.DOTA_RUNE_INVALID string 
_G.EDesc.DOTA_RUNES.DOTA_RUNE_INVISIBILITY string 
_G.EDesc.DOTA_RUNES.DOTA_RUNE_REGENERATION string 
_G.EDesc.DOTA_RUNES.DOTA_RUNE_XP string 
_G.EDesc.DOTA_SHOP_TYPE table table: 0x0016c2f0
_G.EDesc.DOTA_SHOP_TYPE.DOTA_SHOP_CUSTOM string 
_G.EDesc.DOTA_SHOP_TYPE.DOTA_SHOP_GROUND string 
_G.EDesc.DOTA_SHOP_TYPE.DOTA_SHOP_HOME string 
_G.EDesc.DOTA_SHOP_TYPE.DOTA_SHOP_NONE string 
_G.EDesc.DOTA_SHOP_TYPE.DOTA_SHOP_SECRET string 
_G.EDesc.DOTA_SHOP_TYPE.DOTA_SHOP_SECRET2 string 
_G.EDesc.DOTA_SHOP_TYPE.DOTA_SHOP_SIDE string 
_G.EDesc.DOTA_SHOP_TYPE.DOTA_SHOP_SIDE2 string 
_G.EDesc.DOTA_UNIT_TARGET_FLAGS table table: 0x00169e38
_G.EDesc.DOTA_UNIT_TARGET_FLAGS.DOTA_UNIT_TARGET_FLAG_CHECK_DISABLE_HELP string 
_G.EDesc.DOTA_UNIT_TARGET_FLAGS.DOTA_UNIT_TARGET_FLAG_DEAD string 
_G.EDesc.DOTA_UNIT_TARGET_FLAGS.DOTA_UNIT_TARGET_FLAG_FOW_VISIBLE string 
_G.EDesc.DOTA_UNIT_TARGET_FLAGS.DOTA_UNIT_TARGET_FLAG_INVULNERABLE string 
_G.EDesc.DOTA_UNIT_TARGET_FLAGS.DOTA_UNIT_TARGET_FLAG_MAGIC_IMMUNE_ENEMIES string 
_G.EDesc.DOTA_UNIT_TARGET_FLAGS.DOTA_UNIT_TARGET_FLAG_MANA_ONLY string 
_G.EDesc.DOTA_UNIT_TARGET_FLAGS.DOTA_UNIT_TARGET_FLAG_MELEE_ONLY string 
_G.EDesc.DOTA_UNIT_TARGET_FLAGS.DOTA_UNIT_TARGET_FLAG_NONE string 
_G.EDesc.DOTA_UNIT_TARGET_FLAGS.DOTA_UNIT_TARGET_FLAG_NOT_ANCIENTS string 
_G.EDesc.DOTA_UNIT_TARGET_FLAGS.DOTA_UNIT_TARGET_FLAG_NOT_ATTACK_IMMUNE string 
_G.EDesc.DOTA_UNIT_TARGET_FLAGS.DOTA_UNIT_TARGET_FLAG_NOT_CREEP_HERO string 
_G.EDesc.DOTA_UNIT_TARGET_FLAGS.DOTA_UNIT_TARGET_FLAG_NOT_DOMINATED string 
_G.EDesc.DOTA_UNIT_TARGET_FLAGS.DOTA_UNIT_TARGET_FLAG_NOT_ILLUSIONS string 
_G.EDesc.DOTA_UNIT_TARGET_FLAGS.DOTA_UNIT_TARGET_FLAG_NOT_MAGIC_IMMUNE_ALLIES string 
_G.EDesc.DOTA_UNIT_TARGET_FLAGS.DOTA_UNIT_TARGET_FLAG_NOT_NIGHTMARED string 
_G.EDesc.DOTA_UNIT_TARGET_FLAGS.DOTA_UNIT_TARGET_FLAG_NOT_SUMMONED string 
_G.EDesc.DOTA_UNIT_TARGET_FLAGS.DOTA_UNIT_TARGET_FLAG_NO_INVIS string 
_G.EDesc.DOTA_UNIT_TARGET_FLAGS.DOTA_UNIT_TARGET_FLAG_OUT_OF_WORLD string 
_G.EDesc.DOTA_UNIT_TARGET_FLAGS.DOTA_UNIT_TARGET_FLAG_PLAYER_CONTROLLED string 
_G.EDesc.DOTA_UNIT_TARGET_FLAGS.DOTA_UNIT_TARGET_FLAG_PREFER_ENEMIES string 
_G.EDesc.DOTA_UNIT_TARGET_FLAGS.DOTA_UNIT_TARGET_FLAG_RANGED_ONLY string 
_G.EDesc.DOTA_UNIT_TARGET_FLAGS.DOTA_UNIT_TARGET_FLAG_RESPECT_OBSTRUCTIONS string 
_G.EDesc.DOTA_UNIT_TARGET_TEAM table table: 0x00169810
_G.EDesc.DOTA_UNIT_TARGET_TEAM.DOTA_UNIT_TARGET_TEAM_BOTH string 
_G.EDesc.DOTA_UNIT_TARGET_TEAM.DOTA_UNIT_TARGET_TEAM_CUSTOM string 
_G.EDesc.DOTA_UNIT_TARGET_TEAM.DOTA_UNIT_TARGET_TEAM_ENEMY string 
_G.EDesc.DOTA_UNIT_TARGET_TEAM.DOTA_UNIT_TARGET_TEAM_FRIENDLY string 
_G.EDesc.DOTA_UNIT_TARGET_TEAM.DOTA_UNIT_TARGET_TEAM_NONE string 
_G.EDesc.DOTA_UNIT_TARGET_TYPE table table: 0x00169b38
_G.EDesc.DOTA_UNIT_TARGET_TYPE.DOTA_UNIT_TARGET_ALL string 
_G.EDesc.DOTA_UNIT_TARGET_TYPE.DOTA_UNIT_TARGET_BASIC string 
_G.EDesc.DOTA_UNIT_TARGET_TYPE.DOTA_UNIT_TARGET_BUILDING string 
_G.EDesc.DOTA_UNIT_TARGET_TYPE.DOTA_UNIT_TARGET_COURIER string 
_G.EDesc.DOTA_UNIT_TARGET_TYPE.DOTA_UNIT_TARGET_CREEP string 
_G.EDesc.DOTA_UNIT_TARGET_TYPE.DOTA_UNIT_TARGET_CUSTOM string 
_G.EDesc.DOTA_UNIT_TARGET_TYPE.DOTA_UNIT_TARGET_HERO string 
_G.EDesc.DOTA_UNIT_TARGET_TYPE.DOTA_UNIT_TARGET_NONE string 
_G.EDesc.DOTA_UNIT_TARGET_TYPE.DOTA_UNIT_TARGET_OTHER string 
_G.EDesc.DOTA_UNIT_TARGET_TYPE.DOTA_UNIT_TARGET_TREE string 
_G.EDesc.DamageCategory_t table table: 0x0014dab8
_G.EDesc.DamageCategory_t.DOTA_DAMAGE_CATEGORY_ATTACK string 
_G.EDesc.DamageCategory_t.DOTA_DAMAGE_CATEGORY_SPELL string 
_G.EDesc.DotaDefaultUIElement_t table table: 0x0014dfe0
_G.EDesc.DotaDefaultUIElement_t.DOTA_DEFAULT_UI_ACTION_MINIMAP string 
_G.EDesc.DotaDefaultUIElement_t.DOTA_DEFAULT_UI_ACTION_PANEL string 
_G.EDesc.DotaDefaultUIElement_t.DOTA_DEFAULT_UI_CUSTOMUI_BEHIND_HUD_ELEMENTS string 
_G.EDesc.DotaDefaultUIElement_t.DOTA_DEFAULT_UI_ELEMENT_COUNT string 
_G.EDesc.DotaDefaultUIElement_t.DOTA_DEFAULT_UI_ENDGAME string 
_G.EDesc.DotaDefaultUIElement_t.DOTA_DEFAULT_UI_ENDGAME_CHAT string 
_G.EDesc.DotaDefaultUIElement_t.DOTA_DEFAULT_UI_FLYOUT_SCOREBOARD string 
_G.EDesc.DotaDefaultUIElement_t.DOTA_DEFAULT_UI_HERO_SELECTION_CLOCK string 
_G.EDesc.DotaDefaultUIElement_t.DOTA_DEFAULT_UI_HERO_SELECTION_GAME_NAME string 
_G.EDesc.DotaDefaultUIElement_t.DOTA_DEFAULT_UI_HERO_SELECTION_TEAMS string 
_G.EDesc.DotaDefaultUIElement_t.DOTA_DEFAULT_UI_INVALID string 
_G.EDesc.DotaDefaultUIElement_t.DOTA_DEFAULT_UI_INVENTORY_COURIER string 
_G.EDesc.DotaDefaultUIElement_t.DOTA_DEFAULT_UI_INVENTORY_GOLD string 
_G.EDesc.DotaDefaultUIElement_t.DOTA_DEFAULT_UI_INVENTORY_ITEMS string 
_G.EDesc.DotaDefaultUIElement_t.DOTA_DEFAULT_UI_INVENTORY_PANEL string 
_G.EDesc.DotaDefaultUIElement_t.DOTA_DEFAULT_UI_INVENTORY_PROTECT string 
_G.EDesc.DotaDefaultUIElement_t.DOTA_DEFAULT_UI_INVENTORY_QUICKBUY string 
_G.EDesc.DotaDefaultUIElement_t.DOTA_DEFAULT_UI_INVENTORY_SHOP string 
_G.EDesc.DotaDefaultUIElement_t.DOTA_DEFAULT_UI_KILLCAM string 
_G.EDesc.DotaDefaultUIElement_t.DOTA_DEFAULT_UI_PREGAME_STRATEGYUI string 
_G.EDesc.DotaDefaultUIElement_t.DOTA_DEFAULT_UI_QUICK_STATS string 
_G.EDesc.DotaDefaultUIElement_t.DOTA_DEFAULT_UI_SHOP_SUGGESTEDITEMS string 
_G.EDesc.DotaDefaultUIElement_t.DOTA_DEFAULT_UI_TOP_BAR string 
_G.EDesc.DotaDefaultUIElement_t.DOTA_DEFAULT_UI_TOP_BAR_BACKGROUND string 
_G.EDesc.DotaDefaultUIElement_t.DOTA_DEFAULT_UI_TOP_BAR_DIRE_TEAM string 
_G.EDesc.DotaDefaultUIElement_t.DOTA_DEFAULT_UI_TOP_BAR_RADIANT_TEAM string 
_G.EDesc.DotaDefaultUIElement_t.DOTA_DEFAULT_UI_TOP_BAR_SCORE string 
_G.EDesc.DotaDefaultUIElement_t.DOTA_DEFAULT_UI_TOP_HEROES string 
_G.EDesc.DotaDefaultUIElement_t.DOTA_DEFAULT_UI_TOP_MENU_BUTTONS string 
_G.EDesc.DotaDefaultUIElement_t.DOTA_DEFAULT_UI_TOP_TIMEOFDAY string 
_G.EDesc.EDOTA_ModifyGold_Reason table table: 0x0014afd0
_G.EDesc.EDOTA_ModifyGold_Reason.DOTA_ModifyGold_AbandonedRedistribute string 
_G.EDesc.EDOTA_ModifyGold_Reason.DOTA_ModifyGold_AbilityCost string 
_G.EDesc.EDOTA_ModifyGold_Reason.DOTA_ModifyGold_Building string 
_G.EDesc.EDOTA_ModifyGold_Reason.DOTA_ModifyGold_Buyback string 
_G.EDesc.EDOTA_ModifyGold_Reason.DOTA_ModifyGold_CheatCommand string 
_G.EDesc.EDOTA_ModifyGold_Reason.DOTA_ModifyGold_CourierKill string 
_G.EDesc.EDOTA_ModifyGold_Reason.DOTA_ModifyGold_CreepKill string 
_G.EDesc.EDOTA_ModifyGold_Reason.DOTA_ModifyGold_Death string 
_G.EDesc.EDOTA_ModifyGold_Reason.DOTA_ModifyGold_GameTick string 
_G.EDesc.EDOTA_ModifyGold_Reason.DOTA_ModifyGold_HeroKill string 
_G.EDesc.EDOTA_ModifyGold_Reason.DOTA_ModifyGold_PurchaseConsumable string 
_G.EDesc.EDOTA_ModifyGold_Reason.DOTA_ModifyGold_PurchaseItem string 
_G.EDesc.EDOTA_ModifyGold_Reason.DOTA_ModifyGold_RoshanKill string 
_G.EDesc.EDOTA_ModifyGold_Reason.DOTA_ModifyGold_SelectionPenalty string 
_G.EDesc.EDOTA_ModifyGold_Reason.DOTA_ModifyGold_SellItem string 
_G.EDesc.EDOTA_ModifyGold_Reason.DOTA_ModifyGold_SharedGold string 
_G.EDesc.EDOTA_ModifyGold_Reason.DOTA_ModifyGold_Unspecified string 
_G.EDesc.EDOTA_ModifyXP_Reason table table: 0x0014f3d0
_G.EDesc.EDOTA_ModifyXP_Reason.DOTA_ModifyXP_CreepKill string 
_G.EDesc.EDOTA_ModifyXP_Reason.DOTA_ModifyXP_HeroKill string 
_G.EDesc.EDOTA_ModifyXP_Reason.DOTA_ModifyXP_RoshanKill string 
_G.EDesc.EDOTA_ModifyXP_Reason.DOTA_ModifyXP_Unspecified string 
_G.EDesc.EShareAbility table table: 0x0014ca48
_G.EDesc.EShareAbility.ITEM_FULLY_SHAREABLE string 
_G.EDesc.EShareAbility.ITEM_NOT_SHAREABLE string 
_G.EDesc.EShareAbility.ITEM_PARTIALLY_SHAREABLE string 
_G.EDesc.GameActivity_t table table: 0x0014cd30
_G.EDesc.GameActivity_t.ACT_DOTA_ALCHEMIST_CHEMICAL_RAGE_END string 
_G.EDesc.GameActivity_t.ACT_DOTA_ALCHEMIST_CHEMICAL_RAGE_START string 
_G.EDesc.GameActivity_t.ACT_DOTA_ALCHEMIST_CONCOCTION string 
_G.EDesc.GameActivity_t.ACT_DOTA_ALCHEMIST_CONCOCTION_THROW string 
_G.EDesc.GameActivity_t.ACT_DOTA_AMBUSH string 
_G.EDesc.GameActivity_t.ACT_DOTA_ANCESTRAL_SPIRIT string 
_G.EDesc.GameActivity_t.ACT_DOTA_ARCTIC_BURN_END string 
_G.EDesc.GameActivity_t.ACT_DOTA_AREA_DENY string 
_G.EDesc.GameActivity_t.ACT_DOTA_ATTACK string 
_G.EDesc.GameActivity_t.ACT_DOTA_ATTACK2 string 
_G.EDesc.GameActivity_t.ACT_DOTA_ATTACK_EVENT string 
_G.EDesc.GameActivity_t.ACT_DOTA_ATTACK_EVENT_BASH string 
_G.EDesc.GameActivity_t.ACT_DOTA_AW_MAGNETIC_FIELD string 
_G.EDesc.GameActivity_t.ACT_DOTA_BELLYACHE_END string 
_G.EDesc.GameActivity_t.ACT_DOTA_BELLYACHE_LOOP string 
_G.EDesc.GameActivity_t.ACT_DOTA_BELLYACHE_START string 
_G.EDesc.GameActivity_t.ACT_DOTA_BLINK_DAGGER string 
_G.EDesc.GameActivity_t.ACT_DOTA_BLINK_DAGGER_END string 
_G.EDesc.GameActivity_t.ACT_DOTA_BRIDGE_DESTROY string 
_G.EDesc.GameActivity_t.ACT_DOTA_BRIDGE_THREAT string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAGED_CREEP_RAGE string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAGED_CREEP_RAGE_OUT string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAGED_CREEP_SMASH string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAGED_CREEP_SMASH_OUT string 
_G.EDesc.GameActivity_t.ACT_DOTA_CANCEL_SIREN_SONG string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAPTURE string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAPTURE_CARD string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAPTURE_PET string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAPTURE_RARE string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAST_ABILITY_1 string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAST_ABILITY_1_END string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAST_ABILITY_2 string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAST_ABILITY_2_ALLY string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAST_ABILITY_2_END string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAST_ABILITY_2_ES_ROLL string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAST_ABILITY_2_ES_ROLL_END string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAST_ABILITY_2_ES_ROLL_START string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAST_ABILITY_3 string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAST_ABILITY_3_END string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAST_ABILITY_4 string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAST_ABILITY_4_END string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAST_ABILITY_5 string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAST_ABILITY_6 string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAST_ABILITY_7 string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAST_ABILITY_ROT string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAST_ALACRITY string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAST_ALACRITY_ORB string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAST_BURROW_END string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAST_CHAOS_METEOR string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAST_CHAOS_METEOR_ORB string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAST_COLD_SNAP string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAST_COLD_SNAP_ORB string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAST_DEAFENING_BLAST string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAST_DEAFENING_BLAST_ORB string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAST_DRAGONBREATH string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAST_EMP string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAST_EMP_ORB string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAST_FORGE_SPIRIT string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAST_FORGE_SPIRIT_ORB string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAST_GHOST_SHIP string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAST_GHOST_WALK string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAST_GHOST_WALK_ORB string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAST_ICE_WALL string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAST_ICE_WALL_ORB string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAST_LIFE_BREAK_END string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAST_LIFE_BREAK_START string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAST_REFRACTION string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAST_SUN_STRIKE string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAST_SUN_STRIKE_ORB string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAST_TORNADO string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAST_TORNADO_ORB string 
_G.EDesc.GameActivity_t.ACT_DOTA_CAST_WILD_AXES_END string 
_G.EDesc.GameActivity_t.ACT_DOTA_CENTAUR_STAMPEDE string 
_G.EDesc.GameActivity_t.ACT_DOTA_CHANNEL_ABILITY_1 string 
_G.EDesc.GameActivity_t.ACT_DOTA_CHANNEL_ABILITY_2 string 
_G.EDesc.GameActivity_t.ACT_DOTA_CHANNEL_ABILITY_3 string 
_G.EDesc.GameActivity_t.ACT_DOTA_CHANNEL_ABILITY_4 string 
_G.EDesc.GameActivity_t.ACT_DOTA_CHANNEL_ABILITY_5 string 
_G.EDesc.GameActivity_t.ACT_DOTA_CHANNEL_ABILITY_6 string 
_G.EDesc.GameActivity_t.ACT_DOTA_CHANNEL_ABILITY_7 string 
_G.EDesc.GameActivity_t.ACT_DOTA_CHANNEL_END_ABILITY_1 string 
_G.EDesc.GameActivity_t.ACT_DOTA_CHANNEL_END_ABILITY_2 string 
_G.EDesc.GameActivity_t.ACT_DOTA_CHANNEL_END_ABILITY_3 string 
_G.EDesc.GameActivity_t.ACT_DOTA_CHANNEL_END_ABILITY_4 string 
_G.EDesc.GameActivity_t.ACT_DOTA_CHANNEL_END_ABILITY_5 string 
_G.EDesc.GameActivity_t.ACT_DOTA_CHANNEL_END_ABILITY_6 string 
_G.EDesc.GameActivity_t.ACT_DOTA_CHILLING_TOUCH string 
_G.EDesc.GameActivity_t.ACT_DOTA_COLD_FEET string 
_G.EDesc.GameActivity_t.ACT_DOTA_CONSTANT_LAYER string 
_G.EDesc.GameActivity_t.ACT_DOTA_CUSTOM_TOWER_ATTACK string 
_G.EDesc.GameActivity_t.ACT_DOTA_CUSTOM_TOWER_DIE string 
_G.EDesc.GameActivity_t.ACT_DOTA_CUSTOM_TOWER_IDLE string 
_G.EDesc.GameActivity_t.ACT_DOTA_DAGON string 
_G.EDesc.GameActivity_t.ACT_DOTA_DEATH_BY_SNIPER string 
_G.EDesc.GameActivity_t.ACT_DOTA_DEFEAT string 
_G.EDesc.GameActivity_t.ACT_DOTA_DEFEAT_START string 
_G.EDesc.GameActivity_t.ACT_DOTA_DIE string 
_G.EDesc.GameActivity_t.ACT_DOTA_DIE_SPECIAL string 
_G.EDesc.GameActivity_t.ACT_DOTA_DISABLED string 
_G.EDesc.GameActivity_t.ACT_DOTA_DP_SPIRIT_SIPHON string 
_G.EDesc.GameActivity_t.ACT_DOTA_EARTHSHAKER_TOTEM_ATTACK string 
_G.EDesc.GameActivity_t.ACT_DOTA_ECHO_SLAM string 
_G.EDesc.GameActivity_t.ACT_DOTA_ENFEEBLE string 
_G.EDesc.GameActivity_t.ACT_DOTA_ES_STONE_CALLER string 
_G.EDesc.GameActivity_t.ACT_DOTA_FATAL_BONDS string 
_G.EDesc.GameActivity_t.ACT_DOTA_FLAIL string 
_G.EDesc.GameActivity_t.ACT_DOTA_FLEE string 
_G.EDesc.GameActivity_t.ACT_DOTA_FLINCH string 
_G.EDesc.GameActivity_t.ACT_DOTA_FORCESTAFF_END string 
_G.EDesc.GameActivity_t.ACT_DOTA_FRUSTRATION string 
_G.EDesc.GameActivity_t.ACT_DOTA_FXANIM string 
_G.EDesc.GameActivity_t.ACT_DOTA_GENERIC_CHANNEL_1 string 
_G.EDesc.GameActivity_t.ACT_DOTA_GESTURE_ACCENT string 
_G.EDesc.GameActivity_t.ACT_DOTA_GESTURE_POINT string 
_G.EDesc.GameActivity_t.ACT_DOTA_GREET string 
_G.EDesc.GameActivity_t.ACT_DOTA_GREEVIL_BLINK_BONE string 
_G.EDesc.GameActivity_t.ACT_DOTA_GREEVIL_CAST string 
_G.EDesc.GameActivity_t.ACT_DOTA_GREEVIL_HOOK_END string 
_G.EDesc.GameActivity_t.ACT_DOTA_GREEVIL_HOOK_START string 
_G.EDesc.GameActivity_t.ACT_DOTA_GREEVIL_OVERRIDE_ABILITY string 
_G.EDesc.GameActivity_t.ACT_DOTA_GS_INK_CREATURE string 
_G.EDesc.GameActivity_t.ACT_DOTA_GS_SOUL_CHAIN string 
_G.EDesc.GameActivity_t.ACT_DOTA_ICE_VORTEX string 
_G.EDesc.GameActivity_t.ACT_DOTA_IDLE string 
_G.EDesc.GameActivity_t.ACT_DOTA_IDLE_IMPATIENT string 
_G.EDesc.GameActivity_t.ACT_DOTA_IDLE_IMPATIENT_SWORD_TAP string 
_G.EDesc.GameActivity_t.ACT_DOTA_IDLE_RARE string 
_G.EDesc.GameActivity_t.ACT_DOTA_IDLE_SLEEPING string 
_G.EDesc.GameActivity_t.ACT_DOTA_IDLE_SLEEPING_END string 
_G.EDesc.GameActivity_t.ACT_DOTA_INTRO string 
_G.EDesc.GameActivity_t.ACT_DOTA_INTRO_LOOP string 
_G.EDesc.GameActivity_t.ACT_DOTA_ITEM_DROP string 
_G.EDesc.GameActivity_t.ACT_DOTA_ITEM_LOOK string 
_G.EDesc.GameActivity_t.ACT_DOTA_ITEM_PICKUP string 
_G.EDesc.GameActivity_t.ACT_DOTA_JAKIRO_LIQUIDFIRE_LOOP string 
_G.EDesc.GameActivity_t.ACT_DOTA_JAKIRO_LIQUIDFIRE_START string 
_G.EDesc.GameActivity_t.ACT_DOTA_KILLTAUNT string 
_G.EDesc.GameActivity_t.ACT_DOTA_KINETIC_FIELD string 
_G.EDesc.GameActivity_t.ACT_DOTA_LASSO_LOOP string 
_G.EDesc.GameActivity_t.ACT_DOTA_LEAP_STUN string 
_G.EDesc.GameActivity_t.ACT_DOTA_LEAP_SWIPE string 
_G.EDesc.GameActivity_t.ACT_DOTA_LIFESTEALER_ASSIMILATE string 
_G.EDesc.GameActivity_t.ACT_DOTA_LIFESTEALER_EJECT string 
_G.EDesc.GameActivity_t.ACT_DOTA_LIFESTEALER_INFEST string 
_G.EDesc.GameActivity_t.ACT_DOTA_LIFESTEALER_INFEST_END string 
_G.EDesc.GameActivity_t.ACT_DOTA_LIFESTEALER_OPEN_WOUNDS string 
_G.EDesc.GameActivity_t.ACT_DOTA_LIFESTEALER_RAGE string 
_G.EDesc.GameActivity_t.ACT_DOTA_LOADOUT string 
_G.EDesc.GameActivity_t.ACT_DOTA_LOADOUT_RARE string 
_G.EDesc.GameActivity_t.ACT_DOTA_LOOK_AROUND string 
_G.EDesc.GameActivity_t.ACT_DOTA_MAGNUS_SKEWER_END string 
_G.EDesc.GameActivity_t.ACT_DOTA_MAGNUS_SKEWER_START string 
_G.EDesc.GameActivity_t.ACT_DOTA_MEDUSA_STONE_GAZE string 
_G.EDesc.GameActivity_t.ACT_DOTA_MIDNIGHT_PULSE string 
_G.EDesc.GameActivity_t.ACT_DOTA_MINI_TAUNT string 
_G.EDesc.GameActivity_t.ACT_DOTA_MK_FUR_ARMY string 
_G.EDesc.GameActivity_t.ACT_DOTA_MK_SPRING_CAST string 
_G.EDesc.GameActivity_t.ACT_DOTA_MK_SPRING_END string 
_G.EDesc.GameActivity_t.ACT_DOTA_MK_SPRING_SOAR string 
_G.EDesc.GameActivity_t.ACT_DOTA_MK_STRIKE string 
_G.EDesc.GameActivity_t.ACT_DOTA_MK_TREE_END string 
_G.EDesc.GameActivity_t.ACT_DOTA_MK_TREE_SOAR string 
_G.EDesc.GameActivity_t.ACT_DOTA_NECRO_GHOST_SHROUD string 
_G.EDesc.GameActivity_t.ACT_DOTA_NIAN_INTRO_LEAP string 
_G.EDesc.GameActivity_t.ACT_DOTA_NIAN_PIN_END string 
_G.EDesc.GameActivity_t.ACT_DOTA_NIAN_PIN_LOOP string 
_G.EDesc.GameActivity_t.ACT_DOTA_NIAN_PIN_START string 
_G.EDesc.GameActivity_t.ACT_DOTA_NIAN_PIN_TO_STUN string 
_G.EDesc.GameActivity_t.ACT_DOTA_NIGHTSTALKER_TRANSITION string 
_G.EDesc.GameActivity_t.ACT_DOTA_NOTICE string 
_G.EDesc.GameActivity_t.ACT_DOTA_OVERRIDE_ABILITY_1 string 
_G.EDesc.GameActivity_t.ACT_DOTA_OVERRIDE_ABILITY_2 string 
_G.EDesc.GameActivity_t.ACT_DOTA_OVERRIDE_ABILITY_3 string 
_G.EDesc.GameActivity_t.ACT_DOTA_OVERRIDE_ABILITY_4 string 
_G.EDesc.GameActivity_t.ACT_DOTA_OVERRIDE_ARCANA string 
_G.EDesc.GameActivity_t.ACT_DOTA_PET_LEVEL string 
_G.EDesc.GameActivity_t.ACT_DOTA_PET_WARD_OBSERVER string 
_G.EDesc.GameActivity_t.ACT_DOTA_PET_WARD_SENTRY string 
_G.EDesc.GameActivity_t.ACT_DOTA_POOF_END string 
_G.EDesc.GameActivity_t.ACT_DOTA_PRESENT_ITEM string 
_G.EDesc.GameActivity_t.ACT_DOTA_RATTLETRAP_BATTERYASSAULT string 
_G.EDesc.GameActivity_t.ACT_DOTA_RATTLETRAP_HOOKSHOT_END string 
_G.EDesc.GameActivity_t.ACT_DOTA_RATTLETRAP_HOOKSHOT_LOOP string 
_G.EDesc.GameActivity_t.ACT_DOTA_RATTLETRAP_HOOKSHOT_START string 
_G.EDesc.GameActivity_t.ACT_DOTA_RATTLETRAP_POWERCOGS string 
_G.EDesc.GameActivity_t.ACT_DOTA_RAZE_1 string 
_G.EDesc.GameActivity_t.ACT_DOTA_RAZE_2 string 
_G.EDesc.GameActivity_t.ACT_DOTA_RAZE_3 string 
_G.EDesc.GameActivity_t.ACT_DOTA_RELAX_END string 
_G.EDesc.GameActivity_t.ACT_DOTA_RELAX_LOOP string 
_G.EDesc.GameActivity_t.ACT_DOTA_RELAX_LOOP_END string 
_G.EDesc.GameActivity_t.ACT_DOTA_RELAX_START string 
_G.EDesc.GameActivity_t.ACT_DOTA_ROQUELAIRE_LAND string 
_G.EDesc.GameActivity_t.ACT_DOTA_ROQUELAIRE_LAND_IDLE string 
_G.EDesc.GameActivity_t.ACT_DOTA_RUN string 
_G.EDesc.GameActivity_t.ACT_DOTA_SAND_KING_BURROW_IN string 
_G.EDesc.GameActivity_t.ACT_DOTA_SAND_KING_BURROW_OUT string 
_G.EDesc.GameActivity_t.ACT_DOTA_SHAKE string 
_G.EDesc.GameActivity_t.ACT_DOTA_SHALLOW_GRAVE string 
_G.EDesc.GameActivity_t.ACT_DOTA_SHARPEN_WEAPON string 
_G.EDesc.GameActivity_t.ACT_DOTA_SHARPEN_WEAPON_OUT string 
_G.EDesc.GameActivity_t.ACT_DOTA_SHOPKEEPER_PET_INTERACT string 
_G.EDesc.GameActivity_t.ACT_DOTA_SHRUG string 
_G.EDesc.GameActivity_t.ACT_DOTA_SHUFFLE_L string 
_G.EDesc.GameActivity_t.ACT_DOTA_SHUFFLE_R string 
_G.EDesc.GameActivity_t.ACT_DOTA_SLARK_POUNCE string 
_G.EDesc.GameActivity_t.ACT_DOTA_SLEEPING_END string 
_G.EDesc.GameActivity_t.ACT_DOTA_SLIDE string 
_G.EDesc.GameActivity_t.ACT_DOTA_SLIDE_LOOP string 
_G.EDesc.GameActivity_t.ACT_DOTA_SPAWN string 
_G.EDesc.GameActivity_t.ACT_DOTA_SPIRIT_BREAKER_CHARGE_END string 
_G.EDesc.GameActivity_t.ACT_DOTA_SPIRIT_BREAKER_CHARGE_POSE string 
_G.EDesc.GameActivity_t.ACT_DOTA_STARTLE string 
_G.EDesc.GameActivity_t.ACT_DOTA_STATIC_STORM string 
_G.EDesc.GameActivity_t.ACT_DOTA_SWIM string 
_G.EDesc.GameActivity_t.ACT_DOTA_SWIM_IDLE string 
_G.EDesc.GameActivity_t.ACT_DOTA_TAUNT string 
_G.EDesc.GameActivity_t.ACT_DOTA_TAUNT_SNIPER string 
_G.EDesc.GameActivity_t.ACT_DOTA_TELEPORT string 
_G.EDesc.GameActivity_t.ACT_DOTA_TELEPORT_COOP_END string 
_G.EDesc.GameActivity_t.ACT_DOTA_TELEPORT_COOP_EXIT string 
_G.EDesc.GameActivity_t.ACT_DOTA_TELEPORT_COOP_START string 
_G.EDesc.GameActivity_t.ACT_DOTA_TELEPORT_COOP_WAIT string 
_G.EDesc.GameActivity_t.ACT_DOTA_TELEPORT_END string 
_G.EDesc.GameActivity_t.ACT_DOTA_TELEPORT_END_REACT string 
_G.EDesc.GameActivity_t.ACT_DOTA_TELEPORT_REACT string 
_G.EDesc.GameActivity_t.ACT_DOTA_THIRST string 
_G.EDesc.GameActivity_t.ACT_DOTA_THUNDER_STRIKE string 
_G.EDesc.GameActivity_t.ACT_DOTA_TINKER_REARM1 string 
_G.EDesc.GameActivity_t.ACT_DOTA_TINKER_REARM2 string 
_G.EDesc.GameActivity_t.ACT_DOTA_TINKER_REARM3 string 
_G.EDesc.GameActivity_t.ACT_DOTA_TRANSITION string 
_G.EDesc.GameActivity_t.ACT_DOTA_TRICKS_END string 
_G.EDesc.GameActivity_t.ACT_DOTA_TROT string 
_G.EDesc.GameActivity_t.ACT_DOTA_UNDYING_DECAY string 
_G.EDesc.GameActivity_t.ACT_DOTA_UNDYING_SOUL_RIP string 
_G.EDesc.GameActivity_t.ACT_DOTA_UNDYING_TOMBSTONE string 
_G.EDesc.GameActivity_t.ACT_DOTA_VERSUS string 
_G.EDesc.GameActivity_t.ACT_DOTA_VICTORY string 
_G.EDesc.GameActivity_t.ACT_DOTA_VICTORY_START string 
_G.EDesc.GameActivity_t.ACT_DOTA_WAIT_IDLE string 
_G.EDesc.GameActivity_t.ACT_DOTA_WEAVERBUG_ATTACH string 
_G.EDesc.GameActivity_t.ACT_DOTA_WHEEL_LAYER string 
_G.EDesc.GameActivity_t.ACT_DOTA_WHIRLING_AXES_RANGED string 
_G.EDesc.GameActivity_t.ACT_MIRANA_LEAP_END string 
_G.EDesc.GameActivity_t.ACT_STORM_SPIRIT_OVERLOAD_RUN_OVERRIDE string 
_G.EDesc.GameActivity_t.ACT_TINY_AVALANCHE string 
_G.EDesc.GameActivity_t.ACT_TINY_GROWL string 
_G.EDesc.GameActivity_t.ACT_TINY_TOSS string 
_G.EDesc.GameActivity_t.ACT_WAVEFORM_END string 
_G.EDesc.GameActivity_t.ACT_WAVEFORM_START string 
_G.EDesc.LuaModifierType table table: 0x00176798
_G.EDesc.LuaModifierType.LUA_MODIFIER_INVALID string 
_G.EDesc.LuaModifierType.LUA_MODIFIER_MOTION_BOTH string 
_G.EDesc.LuaModifierType.LUA_MODIFIER_MOTION_HORIZONTAL string 
_G.EDesc.LuaModifierType.LUA_MODIFIER_MOTION_NONE string 
_G.EDesc.LuaModifierType.LUA_MODIFIER_MOTION_VERTICAL string 
_G.EDesc.ParticleAttachment_t table table: 0x00176658
_G.EDesc.ParticleAttachment_t.MAX_PATTACH_TYPES string 
_G.EDesc.ParticleAttachment_t.PATTACH_ABSORIGIN string 
_G.EDesc.ParticleAttachment_t.PATTACH_ABSORIGIN_FOLLOW string 
_G.EDesc.ParticleAttachment_t.PATTACH_CENTER_FOLLOW string 
_G.EDesc.ParticleAttachment_t.PATTACH_CUSTOMORIGIN string 
_G.EDesc.ParticleAttachment_t.PATTACH_CUSTOMORIGIN_FOLLOW string 
_G.EDesc.ParticleAttachment_t.PATTACH_CUSTOM_GAME_STATE_1 string 
_G.EDesc.ParticleAttachment_t.PATTACH_EYES_FOLLOW string 
_G.EDesc.ParticleAttachment_t.PATTACH_INVALID string 
_G.EDesc.ParticleAttachment_t.PATTACH_MAIN_VIEW string 
_G.EDesc.ParticleAttachment_t.PATTACH_OVERHEAD_FOLLOW string 
_G.EDesc.ParticleAttachment_t.PATTACH_POINT string 
_G.EDesc.ParticleAttachment_t.PATTACH_POINT_FOLLOW string 
_G.EDesc.ParticleAttachment_t.PATTACH_RENDERORIGIN_FOLLOW string 
_G.EDesc.ParticleAttachment_t.PATTACH_ROOTBONE_FOLLOW string 
_G.EDesc.ParticleAttachment_t.PATTACH_WATERWAKE string 
_G.EDesc.ParticleAttachment_t.PATTACH_WORLDORIGIN string 
_G.EDesc.UnitFilterResult table table: 0x00177428
_G.EDesc.UnitFilterResult.UF_FAIL_ANCIENT string 
_G.EDesc.UnitFilterResult.UF_FAIL_ATTACK_IMMUNE string 
_G.EDesc.UnitFilterResult.UF_FAIL_BUILDING string 
_G.EDesc.UnitFilterResult.UF_FAIL_CONSIDERED_HERO string 
_G.EDesc.UnitFilterResult.UF_FAIL_COURIER string 
_G.EDesc.UnitFilterResult.UF_FAIL_CREEP string 
_G.EDesc.UnitFilterResult.UF_FAIL_CUSTOM string 
_G.EDesc.UnitFilterResult.UF_FAIL_DEAD string 
_G.EDesc.UnitFilterResult.UF_FAIL_DISABLE_HELP string 
_G.EDesc.UnitFilterResult.UF_FAIL_DOMINATED string 
_G.EDesc.UnitFilterResult.UF_FAIL_ENEMY string 
_G.EDesc.UnitFilterResult.UF_FAIL_FRIENDLY string 
_G.EDesc.UnitFilterResult.UF_FAIL_HERO string 
_G.EDesc.UnitFilterResult.UF_FAIL_ILLUSION string 
_G.EDesc.UnitFilterResult.UF_FAIL_INVALID_LOCATION string 
_G.EDesc.UnitFilterResult.UF_FAIL_INVISIBLE string 
_G.EDesc.UnitFilterResult.UF_FAIL_INVULNERABLE string 
_G.EDesc.UnitFilterResult.UF_FAIL_IN_FOW string 
_G.EDesc.UnitFilterResult.UF_FAIL_MAGIC_IMMUNE_ALLY string 
_G.EDesc.UnitFilterResult.UF_FAIL_MAGIC_IMMUNE_ENEMY string 
_G.EDesc.UnitFilterResult.UF_FAIL_MELEE string 
_G.EDesc.UnitFilterResult.UF_FAIL_NIGHTMARED string 
_G.EDesc.UnitFilterResult.UF_FAIL_NOT_PLAYER_CONTROLLED string 
_G.EDesc.UnitFilterResult.UF_FAIL_OBSTRUCTED string 
_G.EDesc.UnitFilterResult.UF_FAIL_OTHER string 
_G.EDesc.UnitFilterResult.UF_FAIL_OUT_OF_WORLD string 
_G.EDesc.UnitFilterResult.UF_FAIL_RANGED string 
_G.EDesc.UnitFilterResult.UF_FAIL_SUMMONED string 
_G.EDesc.UnitFilterResult.UF_SUCCESS string 
_G.EDesc.attackfail table table: 0x0014d770
_G.EDesc.attackfail.DOTA_ATTACK_RECORD_CANNOT_FAIL string 
_G.EDesc.attackfail.DOTA_ATTACK_RECORD_FAIL_BLOCKED_BY_OBSTRUCTION string 
_G.EDesc.attackfail.DOTA_ATTACK_RECORD_FAIL_NO string 
_G.EDesc.attackfail.DOTA_ATTACK_RECORD_FAIL_SOURCE_MISS string 
_G.EDesc.attackfail.DOTA_ATTACK_RECORD_FAIL_TARGET_EVADED string 
_G.EDesc.attackfail.DOTA_ATTACK_RECORD_FAIL_TARGET_INVULNERABLE string 
_G.EDesc.attackfail.DOTA_ATTACK_RECORD_FAIL_TARGET_OUT_OF_RANGE string 
_G.EDesc.attackfail.DOTA_ATTACK_RECORD_FAIL_TERRAIN_MISS string 
_G.EDesc.modifierfunction table table: 0x0016c580
_G.EDesc.modifierfunction.MODIFIER_EVENT_ON_ABILITY_END_CHANNEL string OnAbilityEndChannel
_G.EDesc.modifierfunction.MODIFIER_EVENT_ON_ABILITY_EXECUTED string OnAbilityExecuted
_G.EDesc.modifierfunction.MODIFIER_EVENT_ON_ABILITY_FULLY_CAST string OnAbilityFullyCast
_G.EDesc.modifierfunction.MODIFIER_EVENT_ON_ABILITY_START string OnAbilityStart
_G.EDesc.modifierfunction.MODIFIER_EVENT_ON_ATTACK string OnAttack
_G.EDesc.modifierfunction.MODIFIER_EVENT_ON_ATTACKED string OnAttacked
_G.EDesc.modifierfunction.MODIFIER_EVENT_ON_ATTACK_ALLIED string OnAttackAllied
_G.EDesc.modifierfunction.MODIFIER_EVENT_ON_ATTACK_CANCELLED string OnAttackCancelled
_G.EDesc.modifierfunction.MODIFIER_EVENT_ON_ATTACK_FAIL string OnAttackFail
_G.EDesc.modifierfunction.MODIFIER_EVENT_ON_ATTACK_FINISHED string OnAttackFinished
_G.EDesc.modifierfunction.MODIFIER_EVENT_ON_ATTACK_LANDED string OnAttackLanded
_G.EDesc.modifierfunction.MODIFIER_EVENT_ON_ATTACK_RECORD string OnAttackRecord
_G.EDesc.modifierfunction.MODIFIER_EVENT_ON_ATTACK_RECORD_DESTROY string OnAttackRecordDestroy
_G.EDesc.modifierfunction.MODIFIER_EVENT_ON_ATTACK_START string OnAttackStart
_G.EDesc.modifierfunction.MODIFIER_EVENT_ON_BREAK_INVISIBILITY string OnBreakInvisibility
_G.EDesc.modifierfunction.MODIFIER_EVENT_ON_BUILDING_KILLED string OnBuildingKilled
_G.EDesc.modifierfunction.MODIFIER_EVENT_ON_DAMAGE_CALCULATED string OnDamageCalculated
_G.EDesc.modifierfunction.MODIFIER_EVENT_ON_DEATH string OnDeath
_G.EDesc.modifierfunction.MODIFIER_EVENT_ON_DEATH_PREVENTED string OnDamagePrevented
_G.EDesc.modifierfunction.MODIFIER_EVENT_ON_DOMINATED string OnDominated
_G.EDesc.modifierfunction.MODIFIER_EVENT_ON_HEALTH_GAINED string OnHealthGained
_G.EDesc.modifierfunction.MODIFIER_EVENT_ON_HEAL_RECEIVED string OnHealReceived
_G.EDesc.modifierfunction.MODIFIER_EVENT_ON_HERO_KILLED string OnHeroKilled
_G.EDesc.modifierfunction.MODIFIER_EVENT_ON_MANA_GAINED string OnManaGained
_G.EDesc.modifierfunction.MODIFIER_EVENT_ON_MODEL_CHANGED string OnModelChanged
_G.EDesc.modifierfunction.MODIFIER_EVENT_ON_MODIFIER_ADDED string OnModifierAdded
_G.EDesc.modifierfunction.MODIFIER_EVENT_ON_ORB_EFFECT string Unused
_G.EDesc.modifierfunction.MODIFIER_EVENT_ON_ORDER string OnOrder
_G.EDesc.modifierfunction.MODIFIER_EVENT_ON_PROCESS_CLEAVE string OnProcessCleave
_G.EDesc.modifierfunction.MODIFIER_EVENT_ON_PROCESS_UPGRADE string Unused
_G.EDesc.modifierfunction.MODIFIER_EVENT_ON_PROJECTILE_DODGE string OnProjectileDodge
_G.EDesc.modifierfunction.MODIFIER_EVENT_ON_PROJECTILE_OBSTRUCTION_HIT string OnProjectileObstructionHit
_G.EDesc.modifierfunction.MODIFIER_EVENT_ON_REFRESH string Unused
_G.EDesc.modifierfunction.MODIFIER_EVENT_ON_RESPAWN string OnRespawn
_G.EDesc.modifierfunction.MODIFIER_EVENT_ON_SET_LOCATION string OnSetLocation
_G.EDesc.modifierfunction.MODIFIER_EVENT_ON_SPELL_TARGET_READY string OnSpellTargetReady
_G.EDesc.modifierfunction.MODIFIER_EVENT_ON_SPENT_MANA string OnSpentMana
_G.EDesc.modifierfunction.MODIFIER_EVENT_ON_STATE_CHANGED string OnStateChanged
_G.EDesc.modifierfunction.MODIFIER_EVENT_ON_TAKEDAMAGE string OnTakeDamage
_G.EDesc.modifierfunction.MODIFIER_EVENT_ON_TAKEDAMAGE_KILLCREDIT string OnTakeDamageKillCredit
_G.EDesc.modifierfunction.MODIFIER_EVENT_ON_TELEPORTED string OnTeleported
_G.EDesc.modifierfunction.MODIFIER_EVENT_ON_TELEPORTING string OnTeleporting
_G.EDesc.modifierfunction.MODIFIER_EVENT_ON_UNIT_MOVED string OnUnitMoved
_G.EDesc.modifierfunction.MODIFIER_FUNCTION_INVALID string 
_G.EDesc.modifierfunction.MODIFIER_FUNCTION_LAST string 
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_ABILITY_LAYOUT string GetModifierAbilityLayout
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_ABSOLUTE_NO_DAMAGE_MAGICAL string GetAbsoluteNoDamageMagical
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_ABSOLUTE_NO_DAMAGE_PHYSICAL string GetAbsoluteNoDamagePhysical
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_ABSOLUTE_NO_DAMAGE_PURE string GetAbsoluteNoDamagePure
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_ABSORB_SPELL string GetAbsorbSpell
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_ALWAYS_ALLOW_ATTACK string GetAlwaysAllowAttack
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_ALWAYS_ETHEREAL_ATTACK string GetAllowEtherealAttack
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_ATTACKSPEED_BASE_OVERRIDE string GetModifierAttackSpeedBaseOverride
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_ATTACKSPEED_BONUS_CONSTANT string GetModifierAttackSpeedBonus_Constant
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_ATTACK_POINT_CONSTANT string GetModifierAttackPointConstant
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_ATTACK_RANGE_BASE_OVERRIDE string GetModifierAttackRangeOverride
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_ATTACK_RANGE_BONUS string GetModifierAttackRangeBonus
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_ATTACK_RANGE_BONUS_PERCENTAGE string GetModifierAttackRangeBonusPercentage
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_ATTACK_RANGE_BONUS_UNIQUE string GetModifierAttackRangeBonusUnique
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_AVOID_DAMAGE string GetModifierAvoidDamage
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_AVOID_SPELL string GetModifierAvoidSpell
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_BASEATTACK_BONUSDAMAGE string GetModifierBaseAttack_BonusDamage
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_BASEDAMAGEOUTGOING_PERCENTAGE string GetModifierBaseDamageOutgoing_Percentage
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_BASEDAMAGEOUTGOING_PERCENTAGE_UNIQUE string GetModifierBaseDamageOutgoing_PercentageUnique
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_BASE_ATTACK_TIME_CONSTANT string GetModifierBaseAttackTimeConstant
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_BASE_ATTACK_TIME_CONSTANT_ADJUST string GetModifierBaseAttackTimeConstant_Adjust
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_BASE_MANA_REGEN string GetModifierBaseRegen
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_BONUS_DAY_VISION string GetBonusDayVision
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_BONUS_NIGHT_VISION string GetBonusNightVision
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_BONUS_NIGHT_VISION_UNIQUE string GetBonusNightVisionUnique
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_BONUS_VISION_PERCENTAGE string GetBonusVisionPercentage
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_BOT_ATTACK_SCORE_BONUS string BotAttackScoreBonus
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_BOUNTY_CREEP_MULTIPLIER string Unused
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_BOUNTY_OTHER_MULTIPLIER string Unused
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_CAN_ATTACK_TREES string GetModifierCanAttackTrees
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_CASTTIME_PERCENTAGE string GetModifierPercentageCasttime
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_CAST_RANGE_BONUS string GetModifierCastRangeBonus
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_CAST_RANGE_BONUS_STACKING string GetModifierCastRangeBonusStacking
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_CAST_RANGE_BONUS_TARGET string GetModifierCastRangeBonusTarget
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_CHANGE_ABILITY_VALUE string GetModifierChangeAbilityValue
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_COOLDOWN_PERCENTAGE string GetModifierPercentageCooldown
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_COOLDOWN_PERCENTAGE_ONGOING string GetModifierPercentageCooldownOngoing
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_COOLDOWN_REDUCTION_CONSTANT string GetModifierCooldownReduction_Constant
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_DAMAGEOUTGOING_PERCENTAGE string GetModifierDamageOutgoing_Percentage
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_DAMAGEOUTGOING_PERCENTAGE_ILLUSION string GetModifierDamageOutgoing_Percentage_Illusion
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_DAMAGEOUTGOING_PERCENTAGE_ILLUSION_AMPLIFY string GetModifierDamageOutgoing_Percentage_Illusion_Amplify
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_DEATHGOLDCOST string GetModifierConstantDeathGoldCost
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_DISABLE_AUTOATTACK string GetDisableAutoAttack
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_DISABLE_HEALING string GetDisableHealing
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_DISABLE_TURNING string GetModifierDisableTurning
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_DODGE_PROJECTILE string GetModifierDodgeProjectile
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_DONT_GIVE_VISION_OF_ATTACKER string GetModifierNoVisionOfAttacker
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_EVASION_CONSTANT string GetModifierEvasion_Constant
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_EXP_RATE_BOOST string GetModifierPercentageExpRateBoost
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_EXTRA_HEALTH_BONUS string GetModifierExtraHealthBonus
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_EXTRA_HEALTH_PERCENTAGE string GetModifierExtraHealthPercentage
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_EXTRA_MANA_BONUS string GetModifierExtraManaBonus
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_EXTRA_MANA_PERCENTAGE string GetModifierExtraManaPercentage
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_EXTRA_STRENGTH_BONUS string GetModifierExtraStrengthBonus
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_FIXED_ATTACK_RATE string GetModifierFixedAttackRate
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_FIXED_DAY_VISION string GetFixedDayVision
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_FIXED_NIGHT_VISION string GetFixedNightVision
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_FORCE_DRAW_MINIMAP string GetForceDrawOnMinimap
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_HEALTH_BONUS string GetModifierHealthBonus
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_HEALTH_REGEN_CONSTANT string GetModifierConstantHealthRegen
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_HEALTH_REGEN_PERCENTAGE string GetModifierHealthRegenPercentage
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_HEALTH_REGEN_PERCENTAGE_UNIQUE string GetModifierHealthRegenPercentageUnique
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_HEAL_AMPLIFY_PERCENTAGE_SOURCE string GetModifierHealAmplify_PercentageSource
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_HEAL_AMPLIFY_PERCENTAGE_TARGET string GetModifierHealAmplify_PercentageTarget
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_HP_REGEN_AMPLIFY_PERCENTAGE string GetModifierHPRegenAmplify_Percentage
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_IGNORE_CAST_ANGLE string GetModifierIgnoreCastAngle
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_IGNORE_COOLDOWN string GetModifierIgnoreCooldown
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_IGNORE_MOVESPEED_LIMIT string GetModifierIgnoreMovespeedLimit
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_IGNORE_PHYSICAL_ARMOR string GetModifierIgnorePhysicalArmor
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_ILLUSION_LABEL string GetModifierIllusionLabel
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_INCOMING_DAMAGE_ILLUSION string 
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_INCOMING_DAMAGE_PERCENTAGE string GetModifierIncomingDamage_Percentage
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_INCOMING_PHYSICAL_DAMAGE_CONSTANT string GetModifierIncomingPhysicalDamageConstant
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_INCOMING_PHYSICAL_DAMAGE_PERCENTAGE string GetModifierIncomingPhysicalDamage_Percentage
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_INCOMING_SPELL_DAMAGE_CONSTANT string GetModifierIncomingSpellDamageConstant
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_INVISIBILITY_ATTACK_BEHAVIOR_EXCEPTION string GetModifierInvisibilityAttackBehaviorException
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_INVISIBILITY_LEVEL string GetModifierInvisibilityLevel
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_IS_ILLUSION string GetIsIllusion
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_IS_SCEPTER string GetModifierScepter
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_LIFESTEAL_AMPLIFY_PERCENTAGE string GetModifierLifestealRegenAmplify_Percentage
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_LIFETIME_FRACTION string GetUnitLifetimeFraction
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_MAGICAL_CONSTANT_BLOCK string GetModifierMagical_ConstantBlock
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_MAGICAL_RESISTANCE_BASE_REDUCTION string GetModifierMagicalResistanceBaseReduction
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_MAGICAL_RESISTANCE_BONUS string GetModifierMagicalResistanceBonus
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_MAGICAL_RESISTANCE_BONUS_ILLUSIONS string GetModifierMagicalResistanceBonusIllusions
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_MAGICAL_RESISTANCE_DECREPIFY_UNIQUE string GetModifierMagicalResistanceDecrepifyUnique
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_MAGICAL_RESISTANCE_DIRECT_MODIFICATION string GetModifierMagicalResistanceDirectModification
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_MANACOST_PERCENTAGE string GetModifierPercentageManacost
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_MANACOST_PERCENTAGE_STACKING string GetModifierPercentageManacostStacking
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_MANA_BONUS string GetModifierManaBonus
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_MANA_REGEN_CONSTANT string GetModifierConstantManaRegen
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_MANA_REGEN_CONSTANT_UNIQUE string GetModifierConstantManaRegenUnique
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_MANA_REGEN_TOTAL_PERCENTAGE string GetModifierTotalPercentageManaRegen
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_MAX_ATTACK_RANGE string GetModifierMaxAttackRange
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_MIN_HEALTH string GetMinHealth
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_MISS_PERCENTAGE string GetModifierMiss_Percentage
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_MODEL_CHANGE string GetModifierModelChange
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_MODEL_SCALE string GetModifierModelScale
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_MOVESPEED_ABSOLUTE string GetModifierMoveSpeed_Absolute
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_MOVESPEED_ABSOLUTE_MAX string GetModifierMoveSpeed_AbsoluteMax
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_MOVESPEED_ABSOLUTE_MIN string GetModifierMoveSpeed_AbsoluteMin
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_MOVESPEED_BASE_OVERRIDE string GetModifierMoveSpeedOverride
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_MOVESPEED_BONUS_CONSTANT string GetModifierMoveSpeedBonus_Constant
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_MOVESPEED_BONUS_CONSTANT_UNIQUE string GetModifierMoveSpeedBonus_Constant_Unique
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_MOVESPEED_BONUS_CONSTANT_UNIQUE_2 string GetModifierMoveSpeedBonus_Constant_Unique_2
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_MOVESPEED_BONUS_PERCENTAGE string GetModifierMoveSpeedBonus_Percentage
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_MOVESPEED_BONUS_PERCENTAGE_UNIQUE string GetModifierMoveSpeedBonus_Percentage_Unique
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_MOVESPEED_BONUS_PERCENTAGE_UNIQUE_2 string GetModifierMoveSpeedBonus_Percentage_Unique_2
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_MOVESPEED_BONUS_UNIQUE string GetModifierMoveSpeedBonus_Special_Boots
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_MOVESPEED_BONUS_UNIQUE_2 string GetModifierMoveSpeedBonus_Special_Boots_2
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_MOVESPEED_LIMIT string GetModifierMoveSpeed_Limit
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_MP_REGEN_AMPLIFY_PERCENTAGE string GetModifierMPRegenAmplify_Percentage
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_MP_RESTORE_AMPLIFY_PERCENTAGE string GetModifierMPRestoreAmplify_Percentage
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_NEGATIVE_EVASION_CONSTANT string GetModifierNegativeEvasion_Constant
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_OVERRIDE_ANIMATION string GetOverrideAnimation
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_OVERRIDE_ANIMATION_RATE string GetOverrideAnimationRate
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_OVERRIDE_ANIMATION_WEIGHT string GetOverrideAnimationWeight
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_OVERRIDE_ATTACK_DAMAGE string GetModifierOverrideAttackDamage
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_OVERRIDE_ATTACK_MAGICAL string GetOverrideAttackMagical
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_PERSISTENT_INVISIBILITY string GetModifierPersistentInvisibility
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_PHYSICAL_ARMOR_BASE_PERCENTAGE string GetModifierPhysicalArmorBase_Percentage
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_PHYSICAL_ARMOR_BONUS string GetModifierPhysicalArmorBonus
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_PHYSICAL_ARMOR_BONUS_UNIQUE string GetModifierPhysicalArmorBonusUnique
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_PHYSICAL_ARMOR_BONUS_UNIQUE_ACTIVE string GetModifierPhysicalArmorBonusUniqueActive
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_PHYSICAL_ARMOR_TOTAL_PERCENTAGE string GetModifierPhysicalArmorTotal_Percentage
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_PHYSICAL_CONSTANT_BLOCK string GetModifierPhysical_ConstantBlock
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_PHYSICAL_CONSTANT_BLOCK_SPECIAL string GetModifierPhysical_ConstantBlockSpecial
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_PREATTACK_BONUS_DAMAGE string GetModifierPreAttack_BonusDamage
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_PREATTACK_BONUS_DAMAGE_POST_CRIT string GetModifierPreAttack_BonusDamagePostCrit
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_PREATTACK_BONUS_DAMAGE_PROC string GetModifierPreAttack_BonusDamage_Proc
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_PREATTACK_BONUS_DAMAGE_TARGET string GetModifierPreAttack_BonusDamage_Target
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_PREATTACK_CRITICALSTRIKE string GetModifierPreAttack_CriticalStrike
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_PREATTACK_TARGET_CRITICALSTRIKE string GetModifierPreAttack_Target_CriticalStrike
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_PRESERVE_PARTICLES_ON_MODEL_CHANGE string PreserveParticlesOnModelChanged
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_PRE_ATTACK string GetModifierPreAttack
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_PROCATTACK_BONUS_DAMAGE_MAGICAL string GetModifierProcAttack_BonusDamage_Magical
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_PROCATTACK_BONUS_DAMAGE_PHYSICAL string GetModifierProcAttack_BonusDamage_Physical
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_PROCATTACK_BONUS_DAMAGE_PURE string GetModifierProcAttack_BonusDamage_Pure
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_PROCATTACK_FEEDBACK string GetModifierProcAttack_Feedback
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_PROJECTILE_NAME string GetModifierProjectileName
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_PROJECTILE_SPEED_BONUS string GetModifierProjectileSpeedBonus
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_PROJECTILE_SPEED_BONUS_PERCENTAGE string GetModifierProjectileSpeedBonusPercentage
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_PROVIDES_FOW_POSITION string GetModifierProvidesFOWVision
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_RADAR_COOLDOWN_REDUCTION string GetModifierRadarCooldownReduction
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_REFLECT_SPELL string GetReflectSpell
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_REINCARNATION string ReincarnateTime
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_RESPAWNTIME string GetModifierConstantRespawnTime
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_RESPAWNTIME_PERCENTAGE string GetModifierPercentageRespawnTime
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_RESPAWNTIME_STACKING string GetModifierStackingRespawnTime
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_SPELLS_REQUIRE_HP string GetModifierSpellsRequireHP
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_SPELL_AMPLIFY_PERCENTAGE string GetModifierSpellAmplify_Percentage
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_SPELL_AMPLIFY_PERCENTAGE_UNIQUE string GetModifierSpellAmplify_PercentageUnique
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_STATS_AGILITY_BONUS string GetModifierBonusStats_Agility
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_STATS_AGILITY_BONUS_PERCENTAGE string GetModifierBonusStats_Agility_Percentage
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_STATS_INTELLECT_BONUS string GetModifierBonusStats_Intellect
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_STATS_INTELLECT_BONUS_PERCENTAGE string GetModifierBonusStats_Intellect_Percentage
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_STATS_STRENGTH_BONUS string GetModifierBonusStats_Strength
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_STATS_STRENGTH_BONUS_PERCENTAGE string GetModifierBonusStats_Strength_Percentage
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_STATUS_RESISTANCE string GetModifierStatusResistance
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_STATUS_RESISTANCE_CASTER string GetModifierStatusResistanceCaster
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_STATUS_RESISTANCE_STACKING string GetModifierStatusResistanceStacking
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_STRONG_ILLUSION string GetModifierStrongIllusion
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_SUPER_ILLUSION string GetModifierSuperIllusion
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_SUPER_ILLUSION_WITH_ULTIMATE string GetModifierSuperIllusionWithUltimate
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_SUPPRESS_CLEAVE string GetSuppressCleave
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_SUPPRESS_TELEPORT string GetSuppressTeleport
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_TEMPEST_DOUBLE string GetModifierTempestDouble
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_TOOLTIP string OnTooltip
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_TOOLTIP2 string OnTooltip2
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_TOTALDAMAGEOUTGOING_PERCENTAGE string GetModifierTotalDamageOutgoing_Percentage
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_TOTAL_CONSTANT_BLOCK string GetModifierTotal_ConstantBlock
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_TOTAL_CONSTANT_BLOCK_UNAVOIDABLE_PRE_ARMOR string GetModifierPhysical_ConstantBlockUnavoidablePreArmor
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_TRANSLATE_ACTIVITY_MODIFIERS string GetActivityTranslationModifiers
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_TRANSLATE_ATTACK_SOUND string GetAttackSound
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_TRIGGER_COSMETIC_AND_END_ATTACK string GetTriggerCosmeticAndEndAttack
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_TURN_RATE_OVERRIDE string GetModifierTurnRate_Override
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_TURN_RATE_PERCENTAGE string GetModifierTurnRate_Percentage
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_UNIT_DISALLOW_UPGRADING string GetModifierUnitDisllowUpgrading
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_UNIT_STATS_NEEDS_REFRESH string GetModifierUnitStatsNeedsRefresh
_G.EDesc.modifierfunction.MODIFIER_PROPERTY_VISUAL_Z_DELTA string GetVisualZDelta
_G.EDesc.modifierpriority table table: 0x00174ce8
_G.EDesc.modifierpriority.MODIFIER_PRIORITY_HIGH string 
_G.EDesc.modifierpriority.MODIFIER_PRIORITY_LOW string 
_G.EDesc.modifierpriority.MODIFIER_PRIORITY_NORMAL string 
_G.EDesc.modifierpriority.MODIFIER_PRIORITY_SUPER_ULTRA string 
_G.EDesc.modifierpriority.MODIFIER_PRIORITY_ULTRA string 
_G.EDesc.modifierremove table table: 0x001759d8
_G.EDesc.modifierremove.DOTA_BUFF_REMOVE_ALL string 
_G.EDesc.modifierremove.DOTA_BUFF_REMOVE_ALLY string 
_G.EDesc.modifierremove.DOTA_BUFF_REMOVE_ENEMY string 
_G.EDesc.modifierstate table table: 0x001748c0
_G.EDesc.modifierstate.MODIFIER_STATE_ALLOW_PATHING_TROUGH_TREES string 
_G.EDesc.modifierstate.MODIFIER_STATE_ATTACK_IMMUNE string 
_G.EDesc.modifierstate.MODIFIER_STATE_BLIND string 
_G.EDesc.modifierstate.MODIFIER_STATE_BLOCK_DISABLED string 
_G.EDesc.modifierstate.MODIFIER_STATE_CANNOT_MISS string 
_G.EDesc.modifierstate.MODIFIER_STATE_CANNOT_TARGET_ENEMIES string 
_G.EDesc.modifierstate.MODIFIER_STATE_COMMAND_RESTRICTED string 
_G.EDesc.modifierstate.MODIFIER_STATE_DISARMED string 
_G.EDesc.modifierstate.MODIFIER_STATE_DOMINATED string 
_G.EDesc.modifierstate.MODIFIER_STATE_EVADE_DISABLED string 
_G.EDesc.modifierstate.MODIFIER_STATE_FAKE_ALLY string 
_G.EDesc.modifierstate.MODIFIER_STATE_FLYING string 
_G.EDesc.modifierstate.MODIFIER_STATE_FLYING_FOR_PATHING_PURPOSES_ONLY string 
_G.EDesc.modifierstate.MODIFIER_STATE_FROZEN string 
_G.EDesc.modifierstate.MODIFIER_STATE_HEXED string 
_G.EDesc.modifierstate.MODIFIER_STATE_IGNORING_MOVE_AND_ATTACK_ORDERS string 
_G.EDesc.modifierstate.MODIFIER_STATE_IGNORING_STOP_ORDERS string 
_G.EDesc.modifierstate.MODIFIER_STATE_INVISIBLE string 
_G.EDesc.modifierstate.MODIFIER_STATE_INVULNERABLE string 
_G.EDesc.modifierstate.MODIFIER_STATE_LAST string 
_G.EDesc.modifierstate.MODIFIER_STATE_LOW_ATTACK_PRIORITY string 
_G.EDesc.modifierstate.MODIFIER_STATE_MAGIC_IMMUNE string 
_G.EDesc.modifierstate.MODIFIER_STATE_MUTED string 
_G.EDesc.modifierstate.MODIFIER_STATE_NIGHTMARED string 
_G.EDesc.modifierstate.MODIFIER_STATE_NOT_ON_MINIMAP string 
_G.EDesc.modifierstate.MODIFIER_STATE_NOT_ON_MINIMAP_FOR_ENEMIES string 
_G.EDesc.modifierstate.MODIFIER_STATE_NO_HEALTH_BAR string 
_G.EDesc.modifierstate.MODIFIER_STATE_NO_TEAM_MOVE_TO string 
_G.EDesc.modifierstate.MODIFIER_STATE_NO_TEAM_SELECT string 
_G.EDesc.modifierstate.MODIFIER_STATE_NO_UNIT_COLLISION string 
_G.EDesc.modifierstate.MODIFIER_STATE_OUT_OF_GAME string 
_G.EDesc.modifierstate.MODIFIER_STATE_PASSIVES_DISABLED string 
_G.EDesc.modifierstate.MODIFIER_STATE_PROVIDES_VISION string 
_G.EDesc.modifierstate.MODIFIER_STATE_ROOTED string 
_G.EDesc.modifierstate.MODIFIER_STATE_SILENCED string 
_G.EDesc.modifierstate.MODIFIER_STATE_SPECIALLY_DENIABLE string 
_G.EDesc.modifierstate.MODIFIER_STATE_STUNNED string 
_G.EDesc.modifierstate.MODIFIER_STATE_TETHERED string 
_G.EDesc.modifierstate.MODIFIER_STATE_TRUESIGHT_IMMUNE string 
_G.EDesc.modifierstate.MODIFIER_STATE_UNSELECTABLE string 
_G.EDesc.modifierstate.MODIFIER_STATE_UNSLOWABLE string 
_G.EDesc.modifierstate.MODIFIER_STATE_UNTARGETABLE string 
_G.EDesc.quest_text_replace_values_t table table: 0x0014a5c0
_G.EDesc.quest_text_replace_values_t.QUEST_NUM_TEXT_REPLACE_VALUES string 
_G.EDesc.quest_text_replace_values_t.QUEST_TEXT_REPLACE_VALUE_CURRENT_VALUE string 
_G.EDesc.quest_text_replace_values_t.QUEST_TEXT_REPLACE_VALUE_REWARD string 
_G.EDesc.quest_text_replace_values_t.QUEST_TEXT_REPLACE_VALUE_ROUND string 
_G.EDesc.quest_text_replace_values_t.QUEST_TEXT_REPLACE_VALUE_TARGET_VALUE string 
_G.EDesc.subquest_text_replace_values_t table table: 0x0014a748
_G.EDesc.subquest_text_replace_values_t.SUBQUEST_NUM_TEXT_REPLACE_VALUES string 
_G.EDesc.subquest_text_replace_values_t.SUBQUEST_TEXT_REPLACE_VALUE_CURRENT_VALUE string 
_G.EDesc.subquest_text_replace_values_t.SUBQUEST_TEXT_REPLACE_VALUE_TARGET_VALUE string 
_G.EF_NODRAW number 32
_G.EMPTY number 0
_G.EmitAnnouncerSound function function: 0x00149af0
_G.EmitAnnouncerSoundForPlayer function function: 0x00149ca0
_G.EmitAnnouncerSoundForTeam function function: 0x00149b78
_G.EmitAnnouncerSoundForTeamOnLocation function function: 0x00149c08
_G.EmitGlobalSound function function: 0x00129fc0
_G.EmitSoundOn function function: 0x00140300
_G.EmitSoundOnClient function function: 0x00140380
_G.EmitSoundOnLocationForAllies function function: 0x001410d8
_G.EmitSoundOnLocationWithCaster function function: 0x00141048
_G.EndScriptDebug function function: 0x001c9980
_G.EntFire function function: 0x001c6300
_G.EntFireByHandle function function: 0x001c6320
_G.EntIndexToHScript function function: 0x0013faf8
_G.Entities table table: 0x00143c50
_G.Entities.__self userdata userdata: 0x00143c90
_G.EntityClassNameOverrides table table: 0x001bfae8
_G.EntityClasses table table: 0x001bed18
_G.EntityClasses.CBaseEntity table table: 0x001bbd28
_G.EntityClasses.CBaseEntity.Specification table table: 0x001bbd00
_G.EntityClasses.CBaseEntity.Specification.scriptclassname string CBaseEntity
_G.EntityClasses.CBaseEntity.__class__ == _G.EntityClasses.CBaseEntity table table: 0x001bbd28
_G.EntityClasses.CBaseEntity.__getbase__ function function: 0x001b9af8
_G.EntityClasses.CBaseEntity.__getclass__ function function: 0x0012c730
_G.EntityClasses.CBaseEntity.__initprops__ table table: 0x0012c768
_G.EntityClasses.CBaseEntity.__instanceof__ function function: 0x001c2ac0
_G.EntityClasses.CBaseEntity.constructor function function: 0x001cb328
_G.EntityClasses.CBaseEntity.describe_R function function: 0x001cb348
_G.EntityClasses.CBaseEntity.inspect function function: 0x001c84d0
_G.EntityClasses.CEntityInstance table table: 0x001c1270
_G.EntityClasses.CEntityInstance.Specification table table: 0x001c2760
_G.EntityClasses.CEntityInstance.Specification.scriptclassname string CEntityInstance
_G.EntityClasses.CEntityInstance.__class__ == _G.EntityClasses.CEntityInstance table table: 0x001c1270
_G.EntityClasses.CEntityInstance.__getbase__ function function: 0x001c29b8
_G.EntityClasses.CEntityInstance.__getclass__ function function: 0x001c3578
_G.EntityClasses.CEntityInstance.__initprops__ table table: 0x001c16e8
_G.EntityClasses.CEntityInstance.__instanceof__ function function: 0x001c3558
_G.EntityClasses.CEntityInstance.constructor function function: 0x001d2718
_G.EntityClasses.CEntityInstance.describe_R function function: 0x001d3498
_G.EntityClasses.CEntityInstance.inspect function function: 0x001d3a10
_G.EntityDesignerNameToClassname table table: 0x001c2bc8
_G.EntityFramework table table: 0x001c3cf0
_G.EntityFramework.AddClassToGameData function function: 0x001ceaf8
_G.EntityFramework.CreateCppClassProxy function function: 0x001cf788
_G.EntityFramework.CreateCppLinkClassProxyInstance function function: 0x001cfe08
_G.EntityFramework.CreateEntity function function: 0x001cf7e8
_G.EntityFramework.CreateScriptProxyClass function function: 0x001cf670
_G.EntityFramework.DispatchActivate function function: 0x00181028
_G.EntityFramework.DispatchInput function function: 0x00181068
_G.EntityFramework.DispatchPrecache function function: 0x0017b7c0
_G.EntityFramework.DispatchSpawn function function: 0x0017b7e0
_G.EntityFramework.DispatchUpdateOnRemove function function: 0x00181048
_G.EntityFramework.GetClassNameOverride function function: 0x001d00b8
_G.EntityFramework.GetDesignerNameForScriptClass function function: 0x001d0858
_G.EntityFramework.GetEntityHandle function function: 0x00183478
_G.EntityFramework.GetInputsForScriptClass function function: 0x001d0b90
_G.EntityFramework.GetNativeClassForDesignerName function function: 0x001c9d78
_G.EntityFramework.GetNativeClassForScriptClass function function: 0x001c9bf0
_G.EntityFramework.GetNativeOutputsForClass function function: 0x001c9e40
_G.EntityFramework.GetScriptClassForDesignerName function function: 0x001d0358
_G.EntityFramework.InputValueConverters table table: 0x001c7688
_G.EntityFramework.InputValueConverters.float function function: 0x001c8ef0
_G.EntityFramework.InputValueConverters.integer function function: 0x001c8e68
_G.EntityFramework.InputValueConverters.number function function: 0x001c2a40
_G.EntityFramework.InputValueConverters.string function function: 0x001c9160
_G.EntityFramework.InstallClass function function: 0x001cc0a0
_G.EntityFramework.InstallClassMixinKeysToIgnore table table: 0x001c0498
_G.EntityFramework.InstallClassMixinKeysToIgnore[1] string Specification
_G.EntityFramework.InstallClassMixinKeysToMakeUnique table table: 0x001bbd70
_G.EntityFramework.InstallClassMixinKeysToMakeUnique[1] string Spawn
_G.EntityFramework.InstallClassVisits table table: 0x001c7560
_G.EntityFramework.InstallClassVisits.CBaseEntity boolean true
_G.EntityFramework.InstallClassVisits.CEntityInstance boolean true
_G.EntityFramework.InstallClass_BuildCompleteSpecification function function: 0x001c8750
_G.EntityFramework.InstallClass_HandleEntityIO function function: 0x001cd860
_G.EntityFramework.InstallClass_MergeSpecifications function function: 0x001c8860
_G.EntityFramework.InstallClass_Publish function function: 0x001ce938
_G.EntityFramework.InstallClasses function function: 0x001cbda8
_G.EntityFramework.IsKeyValueUsed function function: 0x00179228
_G.EntityFramework.LoadEntityClasses function function: 0x001cf508
_G.EntityFramework.PrecacheResource function function: 0x00183498
_G.EntityFramework.UnserializeForPrecache function function: 0x0017aed0
_G.EntityFramework.UnserializeForSpawn function function: 0x0017b7a0
_G.EntityLinkClasses table table: 0x001bf9c8
_G.EntityMixins table table: 0x001bec10
_G.EntityMixins.EnableDisable table table: 0x001a5ce8
_G.EntityMixins.EnableDisable.Disable function function: 0x001c03e8
_G.EntityMixins.EnableDisable.Enable function function: 0x001c03c8
_G.EntityMixins.EnableDisable.InstallMixin function function: 0x001b04b0
_G.EntityMixins.EnableDisable.Spawn function function: 0x001b25c8
_G.EntityMixins.EnableDisable.Specification table table: 0x001a8fd8
_G.EntityMixins.EnableDisable.Specification.description string Standard implementation for entities that can be enabled & disabled (logically)
_G.EntityMixins.EnableDisable.Specification.documentation string http://
_G.EntityMixins.EnableDisable.Specification.inputs table table: 0x001d2b70
_G.EntityMixins.EnableDisable.Specification.inputs.Disable table table: 0x001b0218
_G.EntityMixins.EnableDisable.Specification.inputs.Disable.description string Disable the entity
_G.EntityMixins.EnableDisable.Specification.inputs.Disable.tags string publish
_G.EntityMixins.EnableDisable.Specification.inputs.Enable table table: 0x001aef60
_G.EntityMixins.EnableDisable.Specification.inputs.Enable.description string Enable the entity
_G.EntityMixins.EnableDisable.Specification.inputs.Enable.tags string publish
_G.EntityMixins.EnableDisable.Specification.meta table table: 0x001a9000
_G.EntityMixins.EnableDisable.Specification.meta.enabled table table: 0x001a98e8
_G.EntityMixins.EnableDisable.Specification.meta.enabled.def boolean true
_G.EntityMixins.EnableDisable.Specification.meta.enabled.name string Is enabled
_G.EntityMixins.EnableDisable.Specification.meta.enabled.tags string publish
_G.EntityMixins.EnableDisable.Specification.meta.enabled.type string boolean
_G.EntityMixins.EnableDisable.enabled boolean true
_G.EntityUtils table table: 0x001c4010
_G.EntityUtils.GetClassFieldType function function: 0x00179208
_G.EntityUtils.GetRootScriptClass function function: 0x001791e8
_G.ExecuteOrderFromTable function function: 0x0014b948
_G.ExponentialDecay function function: 0x0013e138
_G.ExtendInstance function function: 0x001e21a0
_G.FASTRELOAD number 15
_G.FCVAR_ARCHIVE number 128
_G.FCVAR_CHEAT number 16384
_G.FCVAR_DEMO number 65536
_G.FCVAR_DEVELOPMENTONLY number 2
_G.FCVAR_DONTRECORD number 131072
_G.FCVAR_HIDDEN number 16
_G.FCVAR_NEVER_AS_STRING number 4096
_G.FCVAR_NOTIFY number 256
_G.FCVAR_NOT_CONNECTED number 4194304
_G.FCVAR_PRINTABLEONLY number 1024
_G.FCVAR_PROTECTED number 32
_G.FCVAR_REPLICATED number 8192
_G.FCVAR_SPONLY number 64
_G.FCVAR_SS number 32768
_G.FCVAR_UNLOGGED number 2048
_G.FCVAR_UNREGISTERED number 1
_G.FCVAR_USERINFO number 512
_G.FCVAR_VCONSOLE_SET_FOCUS number 1073741824
_G.FDesc table table: 0x00117500
_G.FDesc.AddFOWViewer userdata void AddFOWViewer(int, Vector, float, float, bool)
Add temporary vision for a given team ( nTeamID, vLocation, flRadius, flDuration, bObstructedVision)
_G.FDesc.AngleDiff userdata float AngleDiff(float, float)
Returns the number of degrees difference between two yaw angles
_G.FDesc.AppendToLogFile userdata void AppendToLogFile(string, string)
AppendToLogFile is deprecated. Print to the console for logging instead.
_G.FDesc.ApplyDamage userdata float ApplyDamage(handle)
Damage an npc.
_G.FDesc.AxisAngleToQuaternion userdata Quaternion AxisAngleToQuaternion(Vector, float)
(vector,float) constructs a quaternion representing a rotation by angle around the specified vector axis
_G.FDesc.CalcClosestPointOnEntityOBB userdata Vector CalcClosestPointOnEntityOBB(handle, Vector)
Compute the closest point on the OBB of an entity.
_G.FDesc.CalcDistanceBetweenEntityOBB userdata float CalcDistanceBetweenEntityOBB(handle, handle)
Compute the distance between two entity OBB. A negative return value indicates an input error. A return value of zero indicates that the OBBs are overlapping.
_G.FDesc.CalcDistanceToLineSegment2D userdata float CalcDistanceToLineSegment2D(Vector, Vector, Vector)

_G.FDesc.CancelEntityIOEvents userdata void CancelEntityIOEvents(ehandle)
Create all I/O events for a particular entity
_G.FDesc.ClearTeamCustomHealthbarColor userdata void ClearTeamCustomHealthbarColor(int)
( teamNumber )
_G.FDesc.CreateDamageInfo userdata handle CreateDamageInfo(handle, handle, Vector, Vector, float, int)
(hInflictor, hAttacker, flDamage) - Allocate a damageinfo object, used as an argument to TakeDamage(). Call DestroyDamageInfo( hInfo ) to free the object.
_G.FDesc.CreateEffect userdata bool CreateEffect(handle)
Pass table - Inputs: entity, effect
_G.FDesc.CreateHTTPRequest userdata handle CreateHTTPRequest(string, string)
Create an HTTP request.
_G.FDesc.CreateHTTPRequestScriptVM userdata handle CreateHTTPRequestScriptVM(string, string)
Create an HTTP request.
_G.FDesc.CreateHeroForPlayer userdata handle CreateHeroForPlayer(string, handle)
Creates a DOTA hero by its dota_npc_units.txt name and sets it as the given player's controlled hero
_G.FDesc.CreateIllusions userdata table CreateIllusions(handle, handle, handle, int, int, bool, bool)
Create illusions of the passed hero that belong to passed unit using passed modifier data. ( hOwner, hHeroToCopy, hModiiferKeys, nNumIllusions, nPadding, bScramblePosition, bFindClearSpace ) 
Supported keys: 
outgoing_damage
incoming_damage
bounty_base
bounty_growth
outgoing_damage_structure
outgoing_damage_roshan
_G.FDesc.CreateItem userdata handle CreateItem(string, handle, handle)
Create a DOTA item
_G.FDesc.CreateItemOnPositionForLaunch userdata handle CreateItemOnPositionForLaunch(Vector, handle)
Create a physical item at a given location, can start in air (but doesn't clear a space)
_G.FDesc.CreateItemOnPositionSync userdata handle CreateItemOnPositionSync(Vector, handle)
Create a physical item at a given location
_G.FDesc.CreateModifierThinker userdata handle CreateModifierThinker(handle, handle, string, handle, Vector, int, bool)
Create a modifier not associated with an NPC. ( hCaster, hAbility, modifierName, paramTable, vOrigin, nTeamNumber, bPhantomBlocker )
_G.FDesc.CreateSceneEntity userdata handle CreateSceneEntity(string)
Create a scene entity to play the specified scene.
_G.FDesc.CreateTempTree userdata handle CreateTempTree(Vector, float)
Create a temporary tree, uses a default tree model. (vLocation, flDuration).
_G.FDesc.CreateTempTreeWithModel userdata handle CreateTempTreeWithModel(Vector, float, string)
Create a temporary tree, specifying the tree model name. (vLocation, flDuration, szModelName).
_G.FDesc.CreateTrigger userdata handle CreateTrigger(Vector, Vector, Vector)
CreateTrigger( vecMin, vecMax ) : Creates and returns an AABB trigger
_G.FDesc.CreateTriggerRadiusApproximate userdata handle CreateTriggerRadiusApproximate(Vector, float)
CreateTriggerRadiusApproximate( vecOrigin, flRadius ) : Creates and returns an AABB trigger thats bigger than the radius provided
_G.FDesc.CreateUnitByName userdata handle CreateUnitByName(string, Vector, bool, handle, handle, int)
Creates a DOTA unit by its dota_npc_units.txt name
_G.FDesc.CreateUnitByNameAsync userdata int CreateUnitByNameAsync(string, Vector, bool, handle, handle, int, handle)
Creates a DOTA unit by its dota_npc_units.txt name
_G.FDesc.CreateUnitFromTable userdata handle CreateUnitFromTable(handle, Vector)
Creates a DOTA unit by its dota_npc_units.txt name from a table of entity key values and a position to spawn at.
_G.FDesc.CrossVectors userdata Vector CrossVectors(Vector, Vector)
(vector,vector) cross product between two vectors
_G.FDesc.DebugBreak userdata void DebugBreak()
Breaks in the debugger
_G.FDesc.DebugDrawBox userdata void DebugDrawBox(Vector, Vector, Vector, int, int, int, int, float)
Draw a debug overlay box (origin, mins, maxs, forward, r, g, b, a, duration )
_G.FDesc.DebugDrawBoxDirection userdata void DebugDrawBoxDirection(Vector, Vector, Vector, Vector, Vector, float, float)
Draw a debug forward box (cent, min, max, forward, vRgb, a, duration)
_G.FDesc.DebugDrawCircle userdata void DebugDrawCircle(Vector, Vector, float, float, bool, float)
Draw a debug circle (center, vRgb, a, rad, ztest, duration)
_G.FDesc.DebugDrawClear userdata void DebugDrawClear()
Try to clear all the debug overlay info
_G.FDesc.DebugDrawLine userdata void DebugDrawLine(Vector, Vector, int, int, int, bool, float)
Draw a debug overlay line (origin, target, r, g, b, ztest, duration)
_G.FDesc.DebugDrawLine_vCol userdata void DebugDrawLine_vCol(Vector, Vector, Vector, bool, float)
Draw a debug line using color vec (start, end, vRgb, a, ztest, duration)
_G.FDesc.DebugDrawScreenTextLine userdata void DebugDrawScreenTextLine(float, float, int, string, int, int, int, int, float)
Draw text with a line offset (x, y, lineOffset, text, r, g, b, a, duration)
_G.FDesc.DebugDrawSphere userdata void DebugDrawSphere(Vector, Vector, float, float, bool, float)
Draw a debug sphere (center, vRgb, a, rad, ztest, duration)
_G.FDesc.DebugDrawText userdata void DebugDrawText(Vector, string, bool, float)
Draw text in 3d (origin, text, bViewCheck, duration)
_G.FDesc.DebugScreenTextPretty userdata void DebugScreenTextPretty(float, float, int, string, int, int, int, int, float, string, int, bool)
Draw pretty debug text (x, y, lineOffset, text, r, g, b, a, duration, font, size, bBold)
_G.FDesc.DestroyDamageInfo userdata void DestroyDamageInfo(handle)
Free a damageinfo object that was created with CreateDamageInfo().
_G.FDesc.DoCleaveAttack userdata int DoCleaveAttack(handle, handle, handle, float, float, float, float, string)
(hAttacker, hTarget, hAbility, fDamage, fRadius, effectName)
_G.FDesc.DoEntFire userdata void DoEntFire(string, string, string, float, handle, handle)
#EntFire:Generate and entity i/o event
_G.FDesc.DoEntFireByInstanceHandle userdata void DoEntFireByInstanceHandle(handle, string, string, float, handle, handle)
#EntFireByHandle:Generate and entity i/o event
_G.FDesc.DoIncludeScript userdata bool DoIncludeScript(string, handle)
Execute a script (internal)
_G.FDesc.DoScriptAssert userdata void DoScriptAssert(bool, string)
#ScriptAssert:Asserts the passed in value. Prints out a message and brings up the assert dialog.
_G.FDesc.DoUniqueString userdata string DoUniqueString(string)
#UniqueString:Generate a string guaranteed to be unique across the life of the script VM, with an optional root string. Useful for adding data to tables when not sure what keys are already in use in that table.
_G.FDesc.DotProduct userdata float DotProduct(Vector, Vector)

_G.FDesc.EmitAnnouncerSound userdata void EmitAnnouncerSound(string)
Emit an announcer sound for all players.
_G.FDesc.EmitAnnouncerSoundForPlayer userdata void EmitAnnouncerSoundForPlayer(string, int)
Emit an announcer sound for a player.
_G.FDesc.EmitAnnouncerSoundForTeam userdata void EmitAnnouncerSoundForTeam(string, int)
Emit an announcer sound for a team.
_G.FDesc.EmitAnnouncerSoundForTeamOnLocation userdata void EmitAnnouncerSoundForTeamOnLocation(string, int, Vector)
Emit an announcer sound for a team at a specific location.
_G.FDesc.EmitGlobalSound userdata void EmitGlobalSound(string)
Play named sound for all players
_G.FDesc.EmitSoundOn userdata void EmitSoundOn(string, handle)
Play named sound on Entity
_G.FDesc.EmitSoundOnClient userdata void EmitSoundOnClient(string, handle)
Play named sound only on the client for the passed in player
_G.FDesc.EmitSoundOnLocationForAllies userdata void EmitSoundOnLocationForAllies(Vector, string, handle)
Emit a sound on a location from a unit, only for players allied with that unit (vLocation, soundName, hCaster
_G.FDesc.EmitSoundOnLocationWithCaster userdata void EmitSoundOnLocationWithCaster(Vector, string, handle)
Emit a sound on a location from a unit. (vLocation, soundName, hCaster).
_G.FDesc.EntIndexToHScript userdata handle EntIndexToHScript(int)
Turn an entity index integer to an HScript representing that entity's script instance.
_G.FDesc.ExecuteOrderFromTable userdata void ExecuteOrderFromTable(handle)
Issue an order from a script table
_G.FDesc.ExponentialDecay userdata float ExponentialDecay(float, float, float)
Smooth curve decreasing slower as it approaches zero
_G.FDesc.FindClearRandomPositionAroundUnit userdata bool FindClearRandomPositionAroundUnit(handle, handle, int)
Finds a clear random position around a given target unit, using the target unit's padded collision radius.
_G.FDesc.FindClearSpaceForUnit userdata bool FindClearSpaceForUnit(handle, Vector, bool)
Place a unit somewhere not already occupied.
_G.FDesc.FindUnitsInLine userdata table FindUnitsInLine(int, Vector, Vector, handle, float, int, int, int)
Find units that intersect the given line with the given flags.
_G.FDesc.FindUnitsInRadius userdata table FindUnitsInRadius(int, Vector, handle, float, int, int, int, int, bool)
Finds the units in a given radius with the given flags.
_G.FDesc.FireEntityIOInputNameOnly userdata void FireEntityIOInputNameOnly(ehandle, string)
Fire Entity's Action Input w/no data
_G.FDesc.FireEntityIOInputString userdata void FireEntityIOInputString(ehandle, string, string)
Fire Entity's Action Input with passed String - you own the memory
_G.FDesc.FireEntityIOInputVec userdata void FireEntityIOInputVec(ehandle, string, Vector)
Fire Entity's Action Input with passed Vector - you own the memory
_G.FDesc.FireGameEvent userdata void FireGameEvent(string, handle)
Fire a game event.
_G.FDesc.FireGameEventLocal userdata void FireGameEventLocal(string, handle)
Fire a game event without broadcasting to the client.
_G.FDesc.FrameTime userdata float FrameTime()
Get the time spent on the server in the last frame
_G.FDesc.GetDedicatedServerKey userdata string GetDedicatedServerKey(string)
( version )
_G.FDesc.GetDedicatedServerKeyV2 userdata string GetDedicatedServerKeyV2(string)
( version )
_G.FDesc.GetEntityIndexForTreeId userdata <unknown> GetEntityIndexForTreeId(unsigned)
Get the enity index for a tree id specified as the entindex_target of a DOTA_UNIT_ORDER_CAST_TARGET_TREE.
_G.FDesc.GetFrameCount userdata int GetFrameCount()
Returns the engines current frame count
_G.FDesc.GetGroundHeight userdata float GetGroundHeight(Vector, handle)

_G.FDesc.GetGroundPosition userdata Vector GetGroundPosition(Vector, handle)
Returns the supplied position moved to the ground. Second parameter is an NPC for measuring movement collision hull offset.
_G.FDesc.GetItemCost userdata int GetItemCost(string)
Get the cost of an item by name.
_G.FDesc.GetItemDefOwnedCount userdata int GetItemDefOwnedCount(int, int)

_G.FDesc.GetItemDefQuantity userdata int GetItemDefQuantity(int, int)

_G.FDesc.GetListenServerHost userdata handle GetListenServerHost()
Get the local player on a listen server.
_G.FDesc.GetLobbyEventGameDetails userdata table GetLobbyEventGameDetails()
( )
_G.FDesc.GetMapName userdata string GetMapName()
Get the name of the map.
_G.FDesc.GetMaxOutputDelay userdata float GetMaxOutputDelay(ehandle, string)
Get the longest delay for all events attached to an output
_G.FDesc.GetPhysAngularVelocity userdata Vector GetPhysAngularVelocity(handle)
Get Angular Velocity for VPHYS or normal object. Returns a vector of the axis of rotation, multiplied by the degrees of rotation per second.
_G.FDesc.GetPhysVelocity userdata Vector GetPhysVelocity(handle)
Get Velocity for VPHYS or normal object
_G.FDesc.GetSystemDate userdata string GetSystemDate()
Get the current real world date
_G.FDesc.GetSystemTime userdata string GetSystemTime()
Get the current real world time
_G.FDesc.GetTargetAOELocation userdata Vector GetTargetAOELocation(int, int, int, Vector, int, int, int)

_G.FDesc.GetTargetLinearLocation userdata Vector GetTargetLinearLocation(int, int, int, Vector, int, int, int)

_G.FDesc.GetTeamHeroKills userdata int GetTeamHeroKills(int)
( int teamID )
_G.FDesc.GetTeamName userdata string GetTeamName(int)
( int teamID )
_G.FDesc.GetTreeIdForEntityIndex userdata int GetTreeIdForEntityIndex(int)
Given and entity index of a tree, get the tree id for use for use with with unit orders.
_G.FDesc.GetWorldMaxX userdata float GetWorldMaxX()
Gets the world's maximum X position.
_G.FDesc.GetWorldMaxY userdata float GetWorldMaxY()
Gets the world's maximum Y position.
_G.FDesc.GetWorldMinX userdata float GetWorldMinX()
Gets the world's minimum X position.
_G.FDesc.GetWorldMinY userdata float GetWorldMinY()
Gets the world's minimum Y position.
_G.FDesc.InitLogFile userdata void InitLogFile(string, string)
InitLogFile is deprecated. Print to the console for logging instead.
_G.FDesc.IsClient userdata bool IsClient()
Returns true if this is lua running from the client.dll.
_G.FDesc.IsDedicatedServer userdata bool IsDedicatedServer()
Returns true if this server is a dedicated server.
_G.FDesc.IsInToolsMode userdata bool IsInToolsMode()
Returns true if this is lua running within tools mode.
_G.FDesc.IsLocationVisible userdata bool IsLocationVisible(int, Vector)
Ask fog of war if a location is visible to a certain team (nTeamNumber, vLocation).
_G.FDesc.IsMarkedForDeletion userdata bool IsMarkedForDeletion(handle)
Returns true if the entity is valid and marked for deletion.
_G.FDesc.IsServer userdata bool IsServer()
Returns true if this is lua running from the server.dll.
_G.FDesc.IsValidEntity userdata bool IsValidEntity(handle)
Checks to see if the given hScript is a valid entity
_G.FDesc.LerpVectors userdata Vector LerpVectors(Vector, Vector, float)
(vector,vector,float) lerp between two vectors by a float factor returning new vector
_G.FDesc.LimitPathingSearchDepth userdata void LimitPathingSearchDepth(float)
Set the limit on the pathfinding search space.
_G.FDesc.LinkLuaModifier userdata void LinkLuaModifier(string, string, int)
Link a lua-defined modifier with the associated class ( className, fileName, LuaModifierType).
_G.FDesc.ListenToGameEvent userdata int ListenToGameEvent(string, handle, handle)
Register as a listener for a game event from script.
_G.FDesc.LoadKeyValues userdata table LoadKeyValues(string)
Creates a table from the specified keyvalues text file
_G.FDesc.LoadKeyValuesFromString userdata table LoadKeyValuesFromString(string)
Creates a table from the specified keyvalues string
_G.FDesc.LocalTime userdata table LocalTime()
Get the current local time
_G.FDesc.MakeStringToken userdata int MakeStringToken(string)
Checks to see if the given hScript is a valid entity
_G.FDesc.MinimapEvent userdata void MinimapEvent(int, handle, int, int, int, int)
Start a minimap event. (nTeamID, hEntity, nXCoord, nYCoord, nEventType, nEventDuration).
_G.FDesc.Msg userdata void Msg(string)
Print a message
_G.FDesc.PauseGame userdata void PauseGame(bool)
Pause or unpause the game.
_G.FDesc.PlayerInstanceFromIndex userdata handle PlayerInstanceFromIndex(int)
Get a script instance of a player by index.
_G.FDesc.PrecacheEntityFromTable userdata void PrecacheEntityFromTable(string, handle, handle)
Precache an entity from KeyValues in table
_G.FDesc.PrecacheEntityListFromTable userdata void PrecacheEntityListFromTable(handle, handle)
Precache a list of entity KeyValues tables
_G.FDesc.PrecacheItemByNameAsync userdata void PrecacheItemByNameAsync(string, handle)
Asynchronously precaches a DOTA item by its dota_npc_items.txt name, provides a callback when it's finished.
_G.FDesc.PrecacheItemByNameSync userdata void PrecacheItemByNameSync(string, handle)
Precaches a DOTA item by its dota_npc_items.txt name
_G.FDesc.PrecacheModel userdata void PrecacheModel(string, handle)
( modelName, context ) - Manually precache a single model
_G.FDesc.PrecacheResource userdata void PrecacheResource(string, string, handle)
Manually precache a single resource
_G.FDesc.PrecacheUnitByNameAsync userdata void PrecacheUnitByNameAsync(string, handle, int)
Asynchronously precaches a DOTA unit by its dota_npc_units.txt name, provides a callback when it's finished.
_G.FDesc.PrecacheUnitByNameSync userdata void PrecacheUnitByNameSync(string, handle, int)
Precaches a DOTA unit by its dota_npc_units.txt name
_G.FDesc.PrecacheUnitFromTableAsync userdata void PrecacheUnitFromTableAsync(handle, handle)
Precaches a DOTA unit from a table of entity key values.
_G.FDesc.PrecacheUnitFromTableSync userdata void PrecacheUnitFromTableSync(handle, handle)
Precaches a DOTA unit from a table of entity key values.
_G.FDesc.PrintLinkedConsoleMessage userdata void PrintLinkedConsoleMessage(string, string)
Print a console message with a linked console command
_G.FDesc.RandomFloat userdata float RandomFloat(float, float)
Get a random float within a range
_G.FDesc.RandomInt userdata int RandomInt(int, int)
Get a random int within a range
_G.FDesc.RandomVector userdata Vector RandomVector(float)
Get a random 2D vector of the given length.
_G.FDesc.RegisterCustomAnimationScriptForModel userdata void RegisterCustomAnimationScriptForModel(string, string)
Register a custom animation script to run when a model loads
_G.FDesc.RegisterSpawnGroupFilterProxy userdata void RegisterSpawnGroupFilterProxy(string)
Create a C proxy for a script-based spawn group filter
_G.FDesc.ReloadMOTD userdata void ReloadMOTD()
Reloads the MotD file
_G.FDesc.RemoveSpawnGroupFilterProxy userdata void RemoveSpawnGroupFilterProxy(string)
Remove the C proxy for a script-based spawn group filter
_G.FDesc.ResolveNPCPositions userdata void ResolveNPCPositions(Vector, float)
Check and fix units that have been assigned a position inside collision radius of other NPCs.
_G.FDesc.RollPercentage userdata bool RollPercentage(int)
(int nPct)
_G.FDesc.RotateOrientation userdata QAngle RotateOrientation(QAngle, QAngle)
Rotate a QAngle by another QAngle.
_G.FDesc.RotatePosition userdata Vector RotatePosition(Vector, QAngle, Vector)
Rotate a Vector around a point.
_G.FDesc.RotateQuaternionByAxisAngle userdata Quaternion RotateQuaternionByAxisAngle(Quaternion, Vector, float)
(quaternion,vector,float) rotates a quaternion by the specified angle around the specified vector axis
_G.FDesc.RotationDelta userdata QAngle RotationDelta(QAngle, QAngle)
Find the delta between two QAngles.
_G.FDesc.RotationDeltaAsAngularVelocity userdata Vector RotationDeltaAsAngularVelocity(QAngle, QAngle)
converts delta QAngle to an angular velocity Vector
_G.FDesc.Say userdata void Say(handle, string, bool)
Have Entity say string, and teamOnly or not
_G.FDesc.ScreenShake userdata void ScreenShake(Vector, float, float, float, float, int, bool)
Start a screenshake with the following parameters. vecCenter, flAmplitude, flFrequency, flDuration, flRadius, eCommand( SHAKE_START = 0, SHAKE_STOP = 1 ), bAirShake
_G.FDesc.SendOverheadEventMessage userdata void SendOverheadEventMessage(handle, int, handle, int, handle)
( DOTAPlayer sendToPlayer, int iMessageType, Entity targetEntity, int iValue, DOTAPlayer sourcePlayer ) - sendToPlayer and sourcePlayer can be nil - iMessageType is one of OVERHEAD_ALERT_*
_G.FDesc.SendToConsole userdata void SendToConsole(string)
Send a string to the console as a client command
_G.FDesc.SendToServerConsole userdata void SendToServerConsole(string)
Send a string to the console as a server command
_G.FDesc.SetOpvarFloatAll userdata void SetOpvarFloatAll(string, string, string, float)
Sets an opvar value for all players
_G.FDesc.SetOpvarFloatPlayer userdata void SetOpvarFloatPlayer(string, string, string, float, handle)
Sets an opvar value for a single player
_G.FDesc.SetPhysAngularVelocity userdata void SetPhysAngularVelocity(handle, Vector)
Set Angular Velocity for VPHYS or normal object, from a vector of the axis of rotation, multiplied by the degrees of rotation per second.
_G.FDesc.SetQuestName userdata void SetQuestName(string)
Set the current quest name.
_G.FDesc.SetQuestPhase userdata void SetQuestPhase(int)
Set the current quest phase.
_G.FDesc.SetRenderingEnabled userdata void SetRenderingEnabled(ehandle, bool)
Set rendering on/off for an ehandle
_G.FDesc.SetTeamCustomHealthbarColor userdata void SetTeamCustomHealthbarColor(int, int, int, int)
( teamNumber, r, g, b )
_G.FDesc.ShowCustomHeaderMessage userdata void ShowCustomHeaderMessage(string, int, int, float)
( const char *pszMessage, int nPlayerID, int nValue, float flTime ) - Supports localized strings - %s1 = PlayerName, %s2 = Value, %s3 = TeamName
_G.FDesc.ShowGenericPopup userdata void ShowGenericPopup(string, string, string, string, int)
Show a generic popup dialog for all players.
_G.FDesc.ShowGenericPopupToPlayer userdata void ShowGenericPopupToPlayer(handle, string, string, string, string, int)
Show a generic popup dialog to a specific player.
_G.FDesc.ShowMessage userdata void ShowMessage(string)
Print a hud message on all clients
_G.FDesc.SpawnDOTAShopTriggerRadiusApproximate userdata handle SpawnDOTAShopTriggerRadiusApproximate(Vector, float)
(Vector vOrigin, float flRadius )
_G.FDesc.SpawnEntityFromTableSynchronous userdata handle SpawnEntityFromTableSynchronous(string, handle)
Synchronously spawns a single entity from a table
_G.FDesc.SpawnEntityGroupFromTable userdata bool SpawnEntityGroupFromTable(handle, bool, handle)
Hierarchically spawn an entity group from a set of spawn tables.
_G.FDesc.SpawnEntityListFromTableAsynchronous userdata int SpawnEntityListFromTableAsynchronous(handle, handle)
Asynchronously spawn an entity group from a list of spawn tables. A callback will be triggered when the spawning is complete
_G.FDesc.SpawnEntityListFromTableSynchronous userdata handle SpawnEntityListFromTableSynchronous(handle)
Synchronously spawn an entity group from a list of spawn tables.
_G.FDesc.SplineQuaternions userdata Quaternion SplineQuaternions(Quaternion, Quaternion, float)
(quaternion,quaternion,float) very basic interpolation of v0 to v1 over t on [0,1]
_G.FDesc.SplineVectors userdata Vector SplineVectors(Vector, Vector, float)
(vector,vector,float) very basic interpolation of v0 to v1 over t on [0,1]
_G.FDesc.StartSoundEvent userdata void StartSoundEvent(string, handle)
Start a sound event
_G.FDesc.StartSoundEventFromPosition userdata void StartSoundEventFromPosition(string, Vector)
Start a sound event from position
_G.FDesc.StartSoundEventFromPositionReliable userdata void StartSoundEventFromPositionReliable(string, Vector)
Start a sound event from position with reliable delivery
_G.FDesc.StartSoundEventFromPositionUnreliable userdata void StartSoundEventFromPositionUnreliable(string, Vector)
Start a sound event from position with optional delivery
_G.FDesc.StartSoundEventReliable userdata void StartSoundEventReliable(string, handle)
Start a sound event with reliable delivery
_G.FDesc.StartSoundEventUnreliable userdata void StartSoundEventUnreliable(string, handle)
Start a sound event with optional delivery
_G.FDesc.StopEffect userdata void StopEffect(handle, string)
Pass entity and effect name
_G.FDesc.StopGlobalSound userdata void StopGlobalSound(string)
Stop named sound for all players
_G.FDesc.StopListeningToAllGameEvents userdata void StopListeningToAllGameEvents(handle)
Stop listening to all game events within a specific context.
_G.FDesc.StopListeningToGameEvent userdata bool StopListeningToGameEvent(int)
Stop listening to a particular game event.
_G.FDesc.StopSoundEvent userdata void StopSoundEvent(string, handle)
Stops a sound event with optional delivery
_G.FDesc.StopSoundOn userdata void StopSoundOn(string, handle)
Stop named sound on Entity
_G.FDesc.Time userdata float Time()
Get the current server time
_G.FDesc.TraceCollideable userdata bool TraceCollideable(handle)
Pass table - Inputs: start, end, ent, (optional mins, maxs) -- outputs: pos, fraction, hit, startsolid, normal
_G.FDesc.TraceHull userdata bool TraceHull(handle)
Pass table - Inputs: start, end, min, max, mask, ignore  -- outputs: pos, fraction, hit, enthit, startsolid
_G.FDesc.TraceLine userdata bool TraceLine(handle)
Pass table - Inputs: startpos, endpos, mask, ignore  -- outputs: pos, fraction, hit, enthit, startsolid
_G.FDesc.UTIL_AngleDiff userdata float UTIL_AngleDiff(float, float)
Returns the number of degrees difference between two yaw angles
_G.FDesc.UTIL_MessageText userdata void UTIL_MessageText(int, string, int, int, int, int)
Sends colored text to one client.
_G.FDesc.UTIL_MessageTextAll userdata void UTIL_MessageTextAll(string, int, int, int, int)
Sends colored text to all clients.
_G.FDesc.UTIL_MessageTextAll_WithContext userdata void UTIL_MessageTextAll_WithContext(string, int, int, int, int, handle)
Sends colored text to all clients. (Valid context keys: player_id, value, team_id)
_G.FDesc.UTIL_MessageText_WithContext userdata void UTIL_MessageText_WithContext(int, string, int, int, int, int, handle)
Sends colored text to one client. (Valid context keys: player_id, value, team_id)
_G.FDesc.UTIL_Remove userdata void UTIL_Remove(handle)
Removes the specified entity
_G.FDesc.UTIL_RemoveImmediate userdata void UTIL_RemoveImmediate(handle)
Immediately removes the specified entity
_G.FDesc.UTIL_ResetMessageText userdata void UTIL_ResetMessageText(int)
Clear all message text on one client.
_G.FDesc.UTIL_ResetMessageTextAll userdata void UTIL_ResetMessageTextAll()
Clear all message text from all clients.
_G.FDesc.UnitFilter userdata int UnitFilter(handle, int, int, int, int)
Check if a unit passes a set of filters. (hNPC, nTargetTeam, nTargetType, nTargetFlags, nTeam
_G.FDesc.UnloadSpawnGroup userdata void UnloadSpawnGroup(string)
Unload a spawn group by name
_G.FDesc.UnloadSpawnGroupByHandle userdata void UnloadSpawnGroupByHandle(int)
Unload a spawn group by handle
_G.FDesc.UpdateEventPoints userdata void UpdateEventPoints(handle)
( hEventPointData )
_G.FDesc.VectorAngles userdata QAngle VectorAngles(Vector)

_G.FDesc.VectorToAngles userdata QAngle VectorToAngles(Vector)
Get Qangles (with no roll) for a Vector.
_G.FDesc.Warning userdata void Warning(string)
Print a warning
_G.FDesc.cvar_getf userdata float cvar_getf(string)
Gets the value of the given cvar, as a float.
_G.FDesc.cvar_setf userdata bool cvar_setf(string, float)
Sets the value of the given cvar, as a float.
_G.FDesc.rr_AddDecisionRule userdata bool rr_AddDecisionRule(handle)
Add a rule to the decision database.
_G.FDesc.rr_CommitAIResponse userdata bool rr_CommitAIResponse(handle, handle)
Commit the result of QueryBestResponse back to the given entity to play. Call with params (entity, airesponse)
_G.FDesc.rr_GetResponseTargets userdata handle rr_GetResponseTargets()
Retrieve a table of all available expresser targets, in the form { name : handle, name: handle }.
_G.FDesc.rr_QueryBestResponse userdata bool rr_QueryBestResponse(handle, handle, handle)
Params: (entity, query) : tests 'query' against entity's response system and returns the best response found (or null if none found).
_G.FIND_ANY_ORDER number 0
_G.FIND_CLOSEST number 1
_G.FIND_FARTHEST number 2
_G.FIND_UNITS_EVERYWHERE number -1
_G.FilterSpawnGroupEntities function function: 0x001c9a08
_G.FindClearRandomPositionAroundUnit function function: 0x001409f8
_G.FindClearSpaceForUnit function function: 0x001408e8
_G.FindUnitsInLine function function: 0x00140a90
_G.FindUnitsInRadius function function: 0x00140970
_G.FireEntityIOInputNameOnly function function: 0x0013e240
_G.FireEntityIOInputString function function: 0x0013e6c8
_G.FireEntityIOInputVec function function: 0x0013e640
_G.FireGameEvent function function: 0x0013f9f0
_G.FireGameEventLocal function function: 0x0013fa70
_G.FrameTime function function: 0x0013de88
_G.GameRules table table: 0x001f01e0
_G.GameRules.__self userdata userdata: 0x001f0220
_G.GetDedicatedServerKey function function: 0x0014a050
_G.GetDedicatedServerKeyV2 function function: 0x0014a0d8
_G.GetEntityIndexForTreeId function function: 0x00131830
_G.GetFrameCount function function: 0x00141ea0
_G.GetFunctionSignature function function: 0x001e1bb8
_G.GetGroundHeight function function: 0x00140b98
_G.GetGroundPosition function function: 0x00140b10
_G.GetItemCost function function: 0x00140748
_G.GetItemDefOwnedCount function function: 0x00131ae0
_G.GetItemDefQuantity function function: 0x00131b68
_G.GetListenServerHost function function: 0x0013fc08
_G.GetLobbyEventGameDetails function function: 0x0014a160
_G.GetMapName function function: 0x0013eb80
_G.GetMaxOutputDelay function function: 0x0013e0b0
_G.GetPhysAngularVelocity function function: 0x0013f6a0
_G.GetPhysVelocity function function: 0x0013f620
_G.GetSpawnGroupEntityFilterFunc function function: 0x001c9a48
_G.GetSystemDate function function: 0x00129ec0
_G.GetSystemTime function function: 0x00129e40
_G.GetTargetAOELocation function function: 0x00149eb8
_G.GetTargetLinearLocation function function: 0x00149f40
_G.GetTeamHeroKills function function: 0x0014a270
_G.GetTeamName function function: 0x0014a1f0
_G.GetTreeIdForEntityIndex function function: 0x001318b8
_G.GetWorldMaxX function function: 0x00129d40
_G.GetWorldMaxY function function: 0x00129dc0
_G.GetWorldMinX function function: 0x00129c40
_G.GetWorldMinY function function: 0x00129cc0
_G.GlobalSys table table: 0x00128fa8
_G.GlobalSys.__self userdata userdata: 0x00128fe8
_G.GridNav table table: 0x001329e8
_G.GridNav.__self userdata userdata: 0x00132a28
_G.HasBaseClass function function: 0x001e18f8
_G.HeroList table table: 0x00132010
_G.HeroList.__self userdata userdata: 0x00132050
_G.ITEM_FULLY_SHAREABLE number 0
_G.ITEM_NOT_SHAREABLE number 2
_G.ITEM_PARTIALLY_SHAREABLE number 1
_G.InitLogFile function function: 0x0013ee98
_G.InstallMixins function function: 0x001c5da0
_G.IsClient function function: 0x001426b8
_G.IsDedicatedServer function function: 0x001425b0
_G.IsInToolsMode function function: 0x00142738
_G.IsLocationVisible function function: 0x00131940
_G.IsMarkedForDeletion function function: 0x0013f740
_G.IsServer function function: 0x00142638
_G.IsValidEntity function function: 0x0013e9f0
_G.LUA_MODIFIER_INVALID number 4
_G.LUA_MODIFIER_MOTION_BOTH number 3
_G.LUA_MODIFIER_MOTION_HORIZONTAL number 1
_G.LUA_MODIFIER_MOTION_NONE number 0
_G.LUA_MODIFIER_MOTION_VERTICAL number 2
_G.Lerp function function: 0x001c9ea0
_G.LerpVectors function function: 0x0013e4b0
_G.LimitPathingSearchDepth function function: 0x0014a390
_G.LinkLuaModifier function function: 0x001e1b58
_G.LinkLuaModifier_Engine function function: 0x00177cb8
_G.ListenToGameEvent function function: 0x0013f848
_G.LoadKeyValues function function: 0x00141240
_G.LoadKeyValuesFromString function function: 0x001412c0
_G.LocalTime function function: 0x0013f090
_G.MAX_PATTACH_TYPES number 15
_G.MELEE_HIT number 9
_G.MELEE_HIT_WORLD number 10
_G.MELEE_MISS number 8
_G.MODIFIER_ATTRIBUTE_AURA_PRIORITY number 8
_G.MODIFIER_ATTRIBUTE_IGNORE_INVULNERABLE number 4
_G.MODIFIER_ATTRIBUTE_MULTIPLE number 2
_G.MODIFIER_ATTRIBUTE_NONE number 0
_G.MODIFIER_ATTRIBUTE_PERMANENT number 1
_G.MODIFIER_EVENT_ON_ABILITY_END_CHANNEL number 168
_G.MODIFIER_EVENT_ON_ABILITY_EXECUTED number 165
_G.MODIFIER_EVENT_ON_ABILITY_FULLY_CAST number 166
_G.MODIFIER_EVENT_ON_ABILITY_START number 164
_G.MODIFIER_EVENT_ON_ATTACK number 157
_G.MODIFIER_EVENT_ON_ATTACKED number 177
_G.MODIFIER_EVENT_ON_ATTACK_ALLIED number 160
_G.MODIFIER_EVENT_ON_ATTACK_CANCELLED number 220
_G.MODIFIER_EVENT_ON_ATTACK_FAIL number 159
_G.MODIFIER_EVENT_ON_ATTACK_FINISHED number 210
_G.MODIFIER_EVENT_ON_ATTACK_LANDED number 158
_G.MODIFIER_EVENT_ON_ATTACK_RECORD number 155
_G.MODIFIER_EVENT_ON_ATTACK_RECORD_DESTROY number 217
_G.MODIFIER_EVENT_ON_ATTACK_START number 156
_G.MODIFIER_EVENT_ON_BREAK_INVISIBILITY number 167
_G.MODIFIER_EVENT_ON_BUILDING_KILLED number 189
_G.MODIFIER_EVENT_ON_DAMAGE_CALCULATED number 176
_G.MODIFIER_EVENT_ON_DEATH number 178
_G.MODIFIER_EVENT_ON_DEATH_PREVENTED number 172
_G.MODIFIER_EVENT_ON_DOMINATED number 207
_G.MODIFIER_EVENT_ON_HEALTH_GAINED number 184
_G.MODIFIER_EVENT_ON_HEAL_RECEIVED number 188
_G.MODIFIER_EVENT_ON_HERO_KILLED number 187
_G.MODIFIER_EVENT_ON_MANA_GAINED number 185
_G.MODIFIER_EVENT_ON_MODEL_CHANGED number 190
_G.MODIFIER_EVENT_ON_MODIFIER_ADDED number 191
_G.MODIFIER_EVENT_ON_ORB_EFFECT number 174
_G.MODIFIER_EVENT_ON_ORDER number 162
_G.MODIFIER_EVENT_ON_PROCESS_CLEAVE number 175
_G.MODIFIER_EVENT_ON_PROCESS_UPGRADE number 169
_G.MODIFIER_EVENT_ON_PROJECTILE_DODGE number 161
_G.MODIFIER_EVENT_ON_PROJECTILE_OBSTRUCTION_HIT number 218
_G.MODIFIER_EVENT_ON_REFRESH number 170
_G.MODIFIER_EVENT_ON_RESPAWN number 179
_G.MODIFIER_EVENT_ON_SET_LOCATION number 183
_G.MODIFIER_EVENT_ON_SPELL_TARGET_READY number 154
_G.MODIFIER_EVENT_ON_SPENT_MANA number 180
_G.MODIFIER_EVENT_ON_STATE_CHANGED number 173
_G.MODIFIER_EVENT_ON_TAKEDAMAGE number 171
_G.MODIFIER_EVENT_ON_TAKEDAMAGE_KILLCREDIT number 186
_G.MODIFIER_EVENT_ON_TELEPORTED number 182
_G.MODIFIER_EVENT_ON_TELEPORTING number 181
_G.MODIFIER_EVENT_ON_UNIT_MOVED number 163
_G.MODIFIER_FUNCTION_INVALID number 255
_G.MODIFIER_FUNCTION_LAST number 223
_G.MODIFIER_PRIORITY_HIGH number 2
_G.MODIFIER_PRIORITY_LOW number 0
_G.MODIFIER_PRIORITY_NORMAL number 1
_G.MODIFIER_PRIORITY_SUPER_ULTRA number 4
_G.MODIFIER_PRIORITY_ULTRA number 3
_G.MODIFIER_PROPERTY_ABILITY_LAYOUT number 206
_G.MODIFIER_PROPERTY_ABSOLUTE_NO_DAMAGE_MAGICAL number 135
_G.MODIFIER_PROPERTY_ABSOLUTE_NO_DAMAGE_PHYSICAL number 134
_G.MODIFIER_PROPERTY_ABSOLUTE_NO_DAMAGE_PURE number 136
_G.MODIFIER_PROPERTY_ABSORB_SPELL number 124
_G.MODIFIER_PROPERTY_ALWAYS_ALLOW_ATTACK number 145
_G.MODIFIER_PROPERTY_ALWAYS_ETHEREAL_ATTACK number 146
_G.MODIFIER_PROPERTY_ATTACKSPEED_BASE_OVERRIDE number 28
_G.MODIFIER_PROPERTY_ATTACKSPEED_BONUS_CONSTANT number 30
_G.MODIFIER_PROPERTY_ATTACK_POINT_CONSTANT number 34
_G.MODIFIER_PROPERTY_ATTACK_RANGE_BASE_OVERRIDE number 95
_G.MODIFIER_PROPERTY_ATTACK_RANGE_BONUS number 96
_G.MODIFIER_PROPERTY_ATTACK_RANGE_BONUS_PERCENTAGE number 98
_G.MODIFIER_PROPERTY_ATTACK_RANGE_BONUS_UNIQUE number 97
_G.MODIFIER_PROPERTY_AVOID_DAMAGE number 58
_G.MODIFIER_PROPERTY_AVOID_SPELL number 59
_G.MODIFIER_PROPERTY_BASEATTACK_BONUSDAMAGE number 4
_G.MODIFIER_PROPERTY_BASEDAMAGEOUTGOING_PERCENTAGE number 47
_G.MODIFIER_PROPERTY_BASEDAMAGEOUTGOING_PERCENTAGE_UNIQUE number 48
_G.MODIFIER_PROPERTY_BASE_ATTACK_TIME_CONSTANT number 32
_G.MODIFIER_PROPERTY_BASE_ATTACK_TIME_CONSTANT_ADJUST number 33
_G.MODIFIER_PROPERTY_BASE_MANA_REGEN number 72
_G.MODIFIER_PROPERTY_BONUS_DAY_VISION number 127
_G.MODIFIER_PROPERTY_BONUS_NIGHT_VISION number 128
_G.MODIFIER_PROPERTY_BONUS_NIGHT_VISION_UNIQUE number 129
_G.MODIFIER_PROPERTY_BONUS_VISION_PERCENTAGE number 130
_G.MODIFIER_PROPERTY_BOT_ATTACK_SCORE_BONUS number 222
_G.MODIFIER_PROPERTY_BOUNTY_CREEP_MULTIPLIER number 149
_G.MODIFIER_PROPERTY_BOUNTY_OTHER_MULTIPLIER number 150
_G.MODIFIER_PROPERTY_CAN_ATTACK_TREES number 212
_G.MODIFIER_PROPERTY_CASTTIME_PERCENTAGE number 109
_G.MODIFIER_PROPERTY_CAST_RANGE_BONUS number 92
_G.MODIFIER_PROPERTY_CAST_RANGE_BONUS_STACKING number 94
_G.MODIFIER_PROPERTY_CAST_RANGE_BONUS_TARGET number 93
_G.MODIFIER_PROPERTY_CHANGE_ABILITY_VALUE number 205
_G.MODIFIER_PROPERTY_COOLDOWN_PERCENTAGE number 107
_G.MODIFIER_PROPERTY_COOLDOWN_PERCENTAGE_ONGOING number 108
_G.MODIFIER_PROPERTY_COOLDOWN_REDUCTION_CONSTANT number 31
_G.MODIFIER_PROPERTY_DAMAGEOUTGOING_PERCENTAGE number 35
_G.MODIFIER_PROPERTY_DAMAGEOUTGOING_PERCENTAGE_ILLUSION number 36
_G.MODIFIER_PROPERTY_DAMAGEOUTGOING_PERCENTAGE_ILLUSION_AMPLIFY number 37
_G.MODIFIER_PROPERTY_DEATHGOLDCOST number 112
_G.MODIFIER_PROPERTY_DISABLE_AUTOATTACK number 126
_G.MODIFIER_PROPERTY_DISABLE_HEALING number 144
_G.MODIFIER_PROPERTY_DISABLE_TURNING number 203
_G.MODIFIER_PROPERTY_DODGE_PROJECTILE number 152
_G.MODIFIER_PROPERTY_DONT_GIVE_VISION_OF_ATTACKER number 215
_G.MODIFIER_PROPERTY_EVASION_CONSTANT number 53
_G.MODIFIER_PROPERTY_EXP_RATE_BOOST number 113
_G.MODIFIER_PROPERTY_EXTRA_HEALTH_BONUS number 82
_G.MODIFIER_PROPERTY_EXTRA_HEALTH_PERCENTAGE number 84
_G.MODIFIER_PROPERTY_EXTRA_MANA_BONUS number 83
_G.MODIFIER_PROPERTY_EXTRA_MANA_PERCENTAGE number 85
_G.MODIFIER_PROPERTY_EXTRA_STRENGTH_BONUS number 81
_G.MODIFIER_PROPERTY_FIXED_ATTACK_RATE number 29
_G.MODIFIER_PROPERTY_FIXED_DAY_VISION number 131
_G.MODIFIER_PROPERTY_FIXED_NIGHT_VISION number 132
_G.MODIFIER_PROPERTY_FORCE_DRAW_MINIMAP number 202
_G.MODIFIER_PROPERTY_HEALTH_BONUS number 79
_G.MODIFIER_PROPERTY_HEALTH_REGEN_CONSTANT number 76
_G.MODIFIER_PROPERTY_HEALTH_REGEN_PERCENTAGE number 77
_G.MODIFIER_PROPERTY_HEALTH_REGEN_PERCENTAGE_UNIQUE number 78
_G.MODIFIER_PROPERTY_HEAL_AMPLIFY_PERCENTAGE_SOURCE number 41
_G.MODIFIER_PROPERTY_HEAL_AMPLIFY_PERCENTAGE_TARGET number 42
_G.MODIFIER_PROPERTY_HP_REGEN_AMPLIFY_PERCENTAGE number 43
_G.MODIFIER_PROPERTY_IGNORE_CAST_ANGLE number 204
_G.MODIFIER_PROPERTY_IGNORE_COOLDOWN number 211
_G.MODIFIER_PROPERTY_IGNORE_MOVESPEED_LIMIT number 26
_G.MODIFIER_PROPERTY_IGNORE_PHYSICAL_ARMOR number 66
_G.MODIFIER_PROPERTY_ILLUSION_LABEL number 138
_G.MODIFIER_PROPERTY_INCOMING_DAMAGE_ILLUSION number 214
_G.MODIFIER_PROPERTY_INCOMING_DAMAGE_PERCENTAGE number 49
_G.MODIFIER_PROPERTY_INCOMING_PHYSICAL_DAMAGE_CONSTANT number 51
_G.MODIFIER_PROPERTY_INCOMING_PHYSICAL_DAMAGE_PERCENTAGE number 50
_G.MODIFIER_PROPERTY_INCOMING_SPELL_DAMAGE_CONSTANT number 52
_G.MODIFIER_PROPERTY_INVISIBILITY_ATTACK_BEHAVIOR_EXCEPTION number 12
_G.MODIFIER_PROPERTY_INVISIBILITY_LEVEL number 11
_G.MODIFIER_PROPERTY_IS_ILLUSION number 137
_G.MODIFIER_PROPERTY_IS_SCEPTER number 195
_G.MODIFIER_PROPERTY_LIFESTEAL_AMPLIFY_PERCENTAGE number 44
_G.MODIFIER_PROPERTY_LIFETIME_FRACTION number 199
_G.MODIFIER_PROPERTY_MAGICAL_CONSTANT_BLOCK number 116
_G.MODIFIER_PROPERTY_MAGICAL_RESISTANCE_BASE_REDUCTION number 67
_G.MODIFIER_PROPERTY_MAGICAL_RESISTANCE_BONUS number 69
_G.MODIFIER_PROPERTY_MAGICAL_RESISTANCE_BONUS_ILLUSIONS number 70
_G.MODIFIER_PROPERTY_MAGICAL_RESISTANCE_DECREPIFY_UNIQUE number 71
_G.MODIFIER_PROPERTY_MAGICAL_RESISTANCE_DIRECT_MODIFICATION number 68
_G.MODIFIER_PROPERTY_MANACOST_PERCENTAGE number 110
_G.MODIFIER_PROPERTY_MANACOST_PERCENTAGE_STACKING number 111
_G.MODIFIER_PROPERTY_MANA_BONUS number 80
_G.MODIFIER_PROPERTY_MANA_REGEN_CONSTANT number 73
_G.MODIFIER_PROPERTY_MANA_REGEN_CONSTANT_UNIQUE number 74
_G.MODIFIER_PROPERTY_MANA_REGEN_TOTAL_PERCENTAGE number 75
_G.MODIFIER_PROPERTY_MAX_ATTACK_RANGE number 99
_G.MODIFIER_PROPERTY_MIN_HEALTH number 133
_G.MODIFIER_PROPERTY_MISS_PERCENTAGE number 60
_G.MODIFIER_PROPERTY_MODEL_CHANGE number 193
_G.MODIFIER_PROPERTY_MODEL_SCALE number 194
_G.MODIFIER_PROPERTY_MOVESPEED_ABSOLUTE number 23
_G.MODIFIER_PROPERTY_MOVESPEED_ABSOLUTE_MAX number 25
_G.MODIFIER_PROPERTY_MOVESPEED_ABSOLUTE_MIN number 24
_G.MODIFIER_PROPERTY_MOVESPEED_BASE_OVERRIDE number 15
_G.MODIFIER_PROPERTY_MOVESPEED_BONUS_CONSTANT number 14
_G.MODIFIER_PROPERTY_MOVESPEED_BONUS_CONSTANT_UNIQUE number 21
_G.MODIFIER_PROPERTY_MOVESPEED_BONUS_CONSTANT_UNIQUE_2 number 22
_G.MODIFIER_PROPERTY_MOVESPEED_BONUS_PERCENTAGE number 16
_G.MODIFIER_PROPERTY_MOVESPEED_BONUS_PERCENTAGE_UNIQUE number 17
_G.MODIFIER_PROPERTY_MOVESPEED_BONUS_PERCENTAGE_UNIQUE_2 number 18
_G.MODIFIER_PROPERTY_MOVESPEED_BONUS_UNIQUE number 19
_G.MODIFIER_PROPERTY_MOVESPEED_BONUS_UNIQUE_2 number 20
_G.MODIFIER_PROPERTY_MOVESPEED_LIMIT number 27
_G.MODIFIER_PROPERTY_MP_REGEN_AMPLIFY_PERCENTAGE number 45
_G.MODIFIER_PROPERTY_MP_RESTORE_AMPLIFY_PERCENTAGE number 46
_G.MODIFIER_PROPERTY_NEGATIVE_EVASION_CONSTANT number 54
_G.MODIFIER_PROPERTY_OVERRIDE_ANIMATION number 121
_G.MODIFIER_PROPERTY_OVERRIDE_ANIMATION_RATE number 123
_G.MODIFIER_PROPERTY_OVERRIDE_ANIMATION_WEIGHT number 122
_G.MODIFIER_PROPERTY_OVERRIDE_ATTACK_DAMAGE number 9
_G.MODIFIER_PROPERTY_OVERRIDE_ATTACK_MAGICAL number 147
_G.MODIFIER_PROPERTY_PERSISTENT_INVISIBILITY number 13
_G.MODIFIER_PROPERTY_PHYSICAL_ARMOR_BASE_PERCENTAGE number 61
_G.MODIFIER_PROPERTY_PHYSICAL_ARMOR_BONUS number 63
_G.MODIFIER_PROPERTY_PHYSICAL_ARMOR_BONUS_UNIQUE number 64
_G.MODIFIER_PROPERTY_PHYSICAL_ARMOR_BONUS_UNIQUE_ACTIVE number 65
_G.MODIFIER_PROPERTY_PHYSICAL_ARMOR_TOTAL_PERCENTAGE number 62
_G.MODIFIER_PROPERTY_PHYSICAL_CONSTANT_BLOCK number 117
_G.MODIFIER_PROPERTY_PHYSICAL_CONSTANT_BLOCK_SPECIAL number 118
_G.MODIFIER_PROPERTY_PREATTACK_BONUS_DAMAGE number 0
_G.MODIFIER_PROPERTY_PREATTACK_BONUS_DAMAGE_POST_CRIT number 3
_G.MODIFIER_PROPERTY_PREATTACK_BONUS_DAMAGE_PROC number 2
_G.MODIFIER_PROPERTY_PREATTACK_BONUS_DAMAGE_TARGET number 1
_G.MODIFIER_PROPERTY_PREATTACK_CRITICALSTRIKE number 114
_G.MODIFIER_PROPERTY_PREATTACK_TARGET_CRITICALSTRIKE number 115
_G.MODIFIER_PROPERTY_PRESERVE_PARTICLES_ON_MODEL_CHANGE number 209
_G.MODIFIER_PROPERTY_PRE_ATTACK number 10
_G.MODIFIER_PROPERTY_PROCATTACK_BONUS_DAMAGE_MAGICAL number 6
_G.MODIFIER_PROPERTY_PROCATTACK_BONUS_DAMAGE_PHYSICAL number 5
_G.MODIFIER_PROPERTY_PROCATTACK_BONUS_DAMAGE_PURE number 7
_G.MODIFIER_PROPERTY_PROCATTACK_FEEDBACK number 8
_G.MODIFIER_PROPERTY_PROJECTILE_NAME number 102
_G.MODIFIER_PROPERTY_PROJECTILE_SPEED_BONUS number 100
_G.MODIFIER_PROPERTY_PROJECTILE_SPEED_BONUS_PERCENTAGE number 101
_G.MODIFIER_PROPERTY_PROVIDES_FOW_POSITION number 200
_G.MODIFIER_PROPERTY_RADAR_COOLDOWN_REDUCTION number 196
_G.MODIFIER_PROPERTY_REFLECT_SPELL number 125
_G.MODIFIER_PROPERTY_REINCARNATION number 103
_G.MODIFIER_PROPERTY_RESPAWNTIME number 104
_G.MODIFIER_PROPERTY_RESPAWNTIME_PERCENTAGE number 105
_G.MODIFIER_PROPERTY_RESPAWNTIME_STACKING number 106
_G.MODIFIER_PROPERTY_SPELLS_REQUIRE_HP number 201
_G.MODIFIER_PROPERTY_SPELL_AMPLIFY_PERCENTAGE number 39
_G.MODIFIER_PROPERTY_SPELL_AMPLIFY_PERCENTAGE_UNIQUE number 40
_G.MODIFIER_PROPERTY_STATS_AGILITY_BONUS number 87
_G.MODIFIER_PROPERTY_STATS_AGILITY_BONUS_PERCENTAGE number 90
_G.MODIFIER_PROPERTY_STATS_INTELLECT_BONUS number 88
_G.MODIFIER_PROPERTY_STATS_INTELLECT_BONUS_PERCENTAGE number 91
_G.MODIFIER_PROPERTY_STATS_STRENGTH_BONUS number 86
_G.MODIFIER_PROPERTY_STATS_STRENGTH_BONUS_PERCENTAGE number 89
_G.MODIFIER_PROPERTY_STATUS_RESISTANCE number 55
_G.MODIFIER_PROPERTY_STATUS_RESISTANCE_CASTER number 57
_G.MODIFIER_PROPERTY_STATUS_RESISTANCE_STACKING number 56
_G.MODIFIER_PROPERTY_STRONG_ILLUSION number 139
_G.MODIFIER_PROPERTY_SUPER_ILLUSION number 140
_G.MODIFIER_PROPERTY_SUPER_ILLUSION_WITH_ULTIMATE number 141
_G.MODIFIER_PROPERTY_SUPPRESS_CLEAVE number 221
_G.MODIFIER_PROPERTY_SUPPRESS_TELEPORT number 219
_G.MODIFIER_PROPERTY_TEMPEST_DOUBLE number 208
_G.MODIFIER_PROPERTY_TOOLTIP number 192
_G.MODIFIER_PROPERTY_TOOLTIP2 number 216
_G.MODIFIER_PROPERTY_TOTALDAMAGEOUTGOING_PERCENTAGE number 38
_G.MODIFIER_PROPERTY_TOTAL_CONSTANT_BLOCK number 120
_G.MODIFIER_PROPERTY_TOTAL_CONSTANT_BLOCK_UNAVOIDABLE_PRE_ARMOR number 119
_G.MODIFIER_PROPERTY_TRANSLATE_ACTIVITY_MODIFIERS number 197
_G.MODIFIER_PROPERTY_TRANSLATE_ATTACK_SOUND number 198
_G.MODIFIER_PROPERTY_TRIGGER_COSMETIC_AND_END_ATTACK number 153
_G.MODIFIER_PROPERTY_TURN_RATE_OVERRIDE number 143
_G.MODIFIER_PROPERTY_TURN_RATE_PERCENTAGE number 142
_G.MODIFIER_PROPERTY_UNIT_DISALLOW_UPGRADING number 151
_G.MODIFIER_PROPERTY_UNIT_STATS_NEEDS_REFRESH number 148
_G.MODIFIER_PROPERTY_VISUAL_Z_DELTA number 213
_G.MODIFIER_STATE_ALLOW_PATHING_TROUGH_TREES number 36
_G.MODIFIER_STATE_ATTACK_IMMUNE number 2
_G.MODIFIER_STATE_BLIND number 29
_G.MODIFIER_STATE_BLOCK_DISABLED number 12
_G.MODIFIER_STATE_CANNOT_MISS number 16
_G.MODIFIER_STATE_CANNOT_TARGET_ENEMIES number 15
_G.MODIFIER_STATE_COMMAND_RESTRICTED number 19
_G.MODIFIER_STATE_DISARMED number 1
_G.MODIFIER_STATE_DOMINATED number 28
_G.MODIFIER_STATE_EVADE_DISABLED number 13
_G.MODIFIER_STATE_FAKE_ALLY number 31
_G.MODIFIER_STATE_FLYING number 23
_G.MODIFIER_STATE_FLYING_FOR_PATHING_PURPOSES_ONLY number 32
_G.MODIFIER_STATE_FROZEN number 18
_G.MODIFIER_STATE_HEXED number 6
_G.MODIFIER_STATE_IGNORING_MOVE_AND_ATTACK_ORDERS number 35
_G.MODIFIER_STATE_IGNORING_STOP_ORDERS number 40
_G.MODIFIER_STATE_INVISIBLE number 7
_G.MODIFIER_STATE_INVULNERABLE number 8
_G.MODIFIER_STATE_LAST number 41
_G.MODIFIER_STATE_LOW_ATTACK_PRIORITY number 21
_G.MODIFIER_STATE_MAGIC_IMMUNE number 9
_G.MODIFIER_STATE_MUTED number 4
_G.MODIFIER_STATE_NIGHTMARED number 11
_G.MODIFIER_STATE_NOT_ON_MINIMAP number 20
_G.MODIFIER_STATE_NOT_ON_MINIMAP_FOR_ENEMIES number 37
_G.MODIFIER_STATE_NO_HEALTH_BAR number 22
_G.MODIFIER_STATE_NO_TEAM_MOVE_TO number 25
_G.MODIFIER_STATE_NO_TEAM_SELECT number 26
_G.MODIFIER_STATE_NO_UNIT_COLLISION number 24
_G.MODIFIER_STATE_OUT_OF_GAME number 30
_G.MODIFIER_STATE_PASSIVES_DISABLED number 27
_G.MODIFIER_STATE_PROVIDES_VISION number 10
_G.MODIFIER_STATE_ROOTED number 0
_G.MODIFIER_STATE_SILENCED number 3
_G.MODIFIER_STATE_SPECIALLY_DENIABLE number 17
_G.MODIFIER_STATE_STUNNED number 5
_G.MODIFIER_STATE_TETHERED number 39
_G.MODIFIER_STATE_TRUESIGHT_IMMUNE number 33
_G.MODIFIER_STATE_UNSELECTABLE number 14
_G.MODIFIER_STATE_UNSLOWABLE number 38
_G.MODIFIER_STATE_UNTARGETABLE number 34
_G.MakeStringToken function function: 0x001b8ce8
_G.Merge function function: 0x001d2b08
_G.MinimapEvent function function: 0x00149d30
_G.Msg function function: 0x001176f0
_G.NDEBUG_PERSIST_TILL_NEXT_SERVER number 0.01023
_G.NativeFunctions table table: 0x001b8be8
_G.NativeFunctions.__self userdata userdata: 0x001b8c28
_G.OVERHEAD_ALERT_BLOCK number 8
_G.OVERHEAD_ALERT_BLOCKED number 21
_G.OVERHEAD_ALERT_BONUS_POISON_DAMAGE number 9
_G.OVERHEAD_ALERT_BONUS_SPELL_DAMAGE number 4
_G.OVERHEAD_ALERT_CRITICAL number 2
_G.OVERHEAD_ALERT_DAMAGE number 6
_G.OVERHEAD_ALERT_DEATH number 20
_G.OVERHEAD_ALERT_DENY number 1
_G.OVERHEAD_ALERT_DISABLE_RESIST number 19
_G.OVERHEAD_ALERT_EVADE number 7
_G.OVERHEAD_ALERT_GOLD number 0
_G.OVERHEAD_ALERT_HEAL number 10
_G.OVERHEAD_ALERT_INCOMING_DAMAGE number 17
_G.OVERHEAD_ALERT_LAST_HIT_CLOSE number 14
_G.OVERHEAD_ALERT_LAST_HIT_EARLY number 13
_G.OVERHEAD_ALERT_LAST_HIT_MISS number 15
_G.OVERHEAD_ALERT_MAGICAL_BLOCK number 16
_G.OVERHEAD_ALERT_MANA_ADD number 11
_G.OVERHEAD_ALERT_MANA_LOSS number 12
_G.OVERHEAD_ALERT_MISS number 5
_G.OVERHEAD_ALERT_OUTGOING_DAMAGE number 18
_G.OVERHEAD_ALERT_XP number 3
_G.PATTACH_ABSORIGIN number 0
_G.PATTACH_ABSORIGIN_FOLLOW number 1
_G.PATTACH_CENTER_FOLLOW number 13
_G.PATTACH_CUSTOMORIGIN number 2
_G.PATTACH_CUSTOMORIGIN_FOLLOW number 3
_G.PATTACH_CUSTOM_GAME_STATE_1 number 14
_G.PATTACH_EYES_FOLLOW number 6
_G.PATTACH_INVALID number -1
_G.PATTACH_MAIN_VIEW number 11
_G.PATTACH_OVERHEAD_FOLLOW number 7
_G.PATTACH_POINT number 4
_G.PATTACH_POINT_FOLLOW number 5
_G.PATTACH_RENDERORIGIN_FOLLOW number 10
_G.PATTACH_ROOTBONE_FOLLOW number 9
_G.PATTACH_WATERWAKE number 12
_G.PATTACH_WORLDORIGIN number 8
_G.POSTSENSING number 2
_G.PRESENSING number 1
_G.PRESIM number 0
_G.ParticleEffectControlPoints table table: 0x001d2bb0
_G.ParticleEffectControlPoints.__class__ == _G.ParticleEffectControlPoints table table: 0x001d2bb0
_G.ParticleEffectControlPoints.__getbase__ function function: 0x001d4728
_G.ParticleEffectControlPoints.__getclass__ function function: 0x001d2bd8
_G.ParticleEffectControlPoints.__initprops__ table table: 0x001d4678
_G.ParticleEffectControlPoints.__instanceof__ function function: 0x001d46a0
_G.ParticleManager table table: 0x001340c0
_G.ParticleManager.__self userdata userdata: 0x00134100
_G.PauseGame function function: 0x00129f40
_G.PlayerInstanceFromIndex function function: 0x0013fb80
_G.PlayerResource table table: 0x0024b690
_G.PlayerResource.__self userdata userdata: 0x0024b6d0
_G.PrecacheEntityFromTable function function: 0x0013ff60
_G.PrecacheEntityListFromTable function function: 0x0013ffe8
_G.PrecacheItemByNameAsync function function: 0x00140538
_G.PrecacheItemByNameSync function function: 0x00117d88
_G.PrecacheModel function function: 0x00140da0
_G.PrecacheResource function function: 0x00140d18
_G.PrecacheUnitByNameAsync function function: 0x001e1938
_G.PrecacheUnitByNameAsync_Engine function function: 0x00117d00
_G.PrecacheUnitByNameSync function function: 0x001e1918
_G.PrecacheUnitByNameSync_Engine function function: 0x00117c78
_G.PrecacheUnitFromTableAsync function function: 0x0012a1d8
_G.PrecacheUnitFromTableSync function function: 0x0012a148
_G.PrintLinkedConsoleMessage function function: 0x0013ee08
_G.ProjectileManager table table: 0x001330e8
_G.ProjectileManager.__self userdata userdata: 0x00133128
_G.QAngle function function: 0x00116c70
_G.QUEST_NUM_TEXT_REPLACE_VALUES number 4
_G.QUEST_TEXT_REPLACE_VALUE_CURRENT_VALUE number 0
_G.QUEST_TEXT_REPLACE_VALUE_REWARD number 3
_G.QUEST_TEXT_REPLACE_VALUE_ROUND number 2
_G.QUEST_TEXT_REPLACE_VALUE_TARGET_VALUE number 1
_G.RELOAD number 6
_G.RELOAD_NPC number 7
_G.Rad2Deg function function: 0x001d3bb0
_G.RandomFloat function function: 0x00129ae8
_G.RandomInt function function: 0x00129a90
_G.RandomVector function function: 0x00129b40
_G.RegisterCustomAnimationScriptForModel function function: 0x0014a4f0
_G.RegisterSpawnGroupEntityFilter function function: 0x001c99c8
_G.RegisterSpawnGroupFilterProxy function function: 0x00141f20
_G.ReloadMOTD function function: 0x00141a88
_G.RemapVal function function: 0x001d2a68
_G.RemapValClamped function function: 0x001d2a88
_G.RemoveSpawnGroupEntityFilter function function: 0x001c99e8
_G.RemoveSpawnGroupFilterProxy function function: 0x00141fb0
_G.ResolveNPCPositions function function: 0x00140fc0
_G.RollPercentage function function: 0x0014a498
_G.RotateOrientation function function: 0x00140178
_G.RotatePosition function function: 0x001400f8
_G.RotateQuaternionByAxisAngle function function: 0x0013e420
_G.RotationDelta function function: 0x00140280
_G.RotationDeltaAsAngularVelocity function function: 0x0013e5b0
_G.SERVER_DLL number 1
_G.SINGLE_SHOT number 1
_G.SINGLE_SHOT_NPC number 2
_G.SPECIAL1 number 11
_G.SPECIAL2 number 12
_G.SPECIAL3 number 13
_G.SUBQUEST_NUM_TEXT_REPLACE_VALUES number 2
_G.SUBQUEST_TEXT_REPLACE_VALUE_CURRENT_VALUE number 0
_G.SUBQUEST_TEXT_REPLACE_VALUE_TARGET_VALUE number 1
_G.Say function function: 0x001411c8
_G.ScreenShake function function: 0x0013fc90
_G.ScriptAssert function function: 0x001c62e0
_G.ScriptDebugAddTextFilter function function: 0x001ce818
_G.ScriptDebugAddTrace function function: 0x001ce758
_G.ScriptDebugAddWatch function function: 0x001ce658
_G.ScriptDebugAddWatchPattern function function: 0x001ce6d8
_G.ScriptDebugAddWatches function function: 0x001ce678
_G.ScriptDebugClearTraces function function: 0x001ce798
_G.ScriptDebugClearWatches function function: 0x001ce718
_G.ScriptDebugDefaultWatchColor table table: 0x001d1850
_G.ScriptDebugDefaultWatchColor[1] number 0
_G.ScriptDebugDefaultWatchColor[2] number 192
_G.ScriptDebugDefaultWatchColor[3] number 0
_G.ScriptDebugDraw function function: 0x001d1940
_G.ScriptDebugDrawTextEnabled boolean true
_G.ScriptDebugDrawWatches function function: 0x001d1960
_G.ScriptDebugDrawWatchesEnabled boolean true
_G.ScriptDebugFirstLine number 6
_G.ScriptDebugHook function function: 0x001c9920
_G.ScriptDebugInDebugDraw boolean false
_G.ScriptDebugRemoveTextFilter function function: 0x001ce838
_G.ScriptDebugRemoveTrace function function: 0x001ce778
_G.ScriptDebugRemoveWatch function function: 0x001ce698
_G.ScriptDebugRemoveWatchPattern function function: 0x001ce6f8
_G.ScriptDebugRemoveWatches function function: 0x001ce6b8
_G.ScriptDebugText table table: 0x001d18a0
_G.ScriptDebugTextDraw function function: 0x001ce7f8
_G.ScriptDebugTextFilters table table: 0x001d18c8
_G.ScriptDebugTextIndent number 0
_G.ScriptDebugTextLines number 20
_G.ScriptDebugTextPrint function function: 0x001ce7d8
_G.ScriptDebugTextTime number 10
_G.ScriptDebugTextTrace function function: 0x001ce7b8
_G.ScriptDebugTraceAll function function: 0x001ce738
_G.ScriptDebugTraceAllOn boolean false
_G.ScriptDebugTraces table table: 0x001d1918
_G.ScriptDebugWatchFistLine number 26
_G.ScriptDebugWatches table table: 0x001d18f0
_G.ScriptFunctionHelp function function: 0x001e1b98
_G.SendOverheadEventMessage function function: 0x00131c78
_G.SendToConsole function function: 0x0013ed00
_G.SendToServerConsole function function: 0x0013ed80
_G.SetOpvarFloatAll function function: 0x00140488
_G.SetOpvarFloatPlayer function function: 0x0013f110
_G.SetPhysAngularVelocity function function: 0x00141140
_G.SetQuestName function function: 0x0013ec00
_G.SetQuestPhase function function: 0x0013ec80
_G.SetRenderingEnabled function function: 0x0013e2d0
_G.SetTeamCustomHealthbarColor function function: 0x00140e20
_G.ShowCustomHeaderMessage function function: 0x00131bf0
_G.ShowGenericPopup function function: 0x001319c8
_G.ShowGenericPopupToPlayer function function: 0x00131a50
_G.ShowMessage function function: 0x0013eb00
_G.SpawnDOTAShopTriggerRadiusApproximate function function: 0x0014a2f8
_G.SpawnEntityFromTableSynchronous function function: 0x0013fd10
_G.SpawnEntityGroupFromTable function function: 0x0013fda0
_G.SpawnEntityListFromTableAsynchronous function function: 0x0013fec8
_G.SpawnEntityListFromTableSynchronous function function: 0x0013fe30
_G.SplineQuaternions function function: 0x0013df08
_G.SplineVectors function function: 0x0013e1c0
_G.StartSoundEvent function function: 0x0013f198
_G.StartSoundEventFromPosition function function: 0x0013f460
_G.StartSoundEventFromPositionReliable function function: 0x0013f4f0
_G.StartSoundEventFromPositionUnreliable function function: 0x0013f588
_G.StartSoundEventReliable function function: 0x0013f218
_G.StartSoundEventUnreliable function function: 0x0013f2a0
_G.SteamInfo table table: 0x001292d0
_G.SteamInfo.__self userdata userdata: 0x00129310
_G.StopEffect function function: 0x00141c98
_G.StopGlobalSound function function: 0x0012a040
_G.StopListeningToAllGameEvents function function: 0x0013f960
_G.StopListeningToGameEvent function function: 0x0013f8d0
_G.StopSoundEvent function function: 0x0013f408
_G.StopSoundOn function function: 0x00140408
_G.TAUNT number 14
_G.Time function function: 0x0013f018
_G.TimeOfDay table table: 0x001c8a48
_G.TimeOfDay.Float function function: 0x001b5600
_G.TimeOfDay.GetEntity function function: 0x001d2600
_G.TimeOfDay.IsDay function function: 0x001b5640
_G.TimeOfDay.IsNight function function: 0x001b5620
_G.TimeOfDay.NightProgress function function: 0x001bb640
_G.TraceCollideable function function: 0x00141e18
_G.TraceHull function function: 0x00141d98
_G.TraceLine function function: 0x00141d18
_G.Tutorial table table: 0x001f16b0
_G.Tutorial.__self userdata userdata: 0x001f16f0
_G.UF_FAIL_ANCIENT number 9
_G.UF_FAIL_ATTACK_IMMUNE number 22
_G.UF_FAIL_BUILDING number 6
_G.UF_FAIL_CONSIDERED_HERO number 4
_G.UF_FAIL_COURIER number 7
_G.UF_FAIL_CREEP number 5
_G.UF_FAIL_CUSTOM number 23
_G.UF_FAIL_DEAD number 15
_G.UF_FAIL_DISABLE_HELP number 25
_G.UF_FAIL_DOMINATED number 12
_G.UF_FAIL_ENEMY number 2
_G.UF_FAIL_FRIENDLY number 1
_G.UF_FAIL_HERO number 3
_G.UF_FAIL_ILLUSION number 10
_G.UF_FAIL_INVALID_LOCATION number 24
_G.UF_FAIL_INVISIBLE number 20
_G.UF_FAIL_INVULNERABLE number 18
_G.UF_FAIL_IN_FOW number 19
_G.UF_FAIL_MAGIC_IMMUNE_ALLY number 16
_G.UF_FAIL_MAGIC_IMMUNE_ENEMY number 17
_G.UF_FAIL_MELEE number 13
_G.UF_FAIL_NIGHTMARED number 27
_G.UF_FAIL_NOT_PLAYER_CONTROLLED number 21
_G.UF_FAIL_OBSTRUCTED number 28
_G.UF_FAIL_OTHER number 8
_G.UF_FAIL_OUT_OF_WORLD number 26
_G.UF_FAIL_RANGED number 14
_G.UF_FAIL_SUMMONED number 11
_G.UF_SUCCESS number 0
_G.UTIL_AngleDiff function function: 0x00140c98
_G.UTIL_MessageText function function: 0x001422f0
_G.UTIL_MessageTextAll function function: 0x00142268
_G.UTIL_MessageTextAll_WithContext function function: 0x00142378
_G.UTIL_MessageText_WithContext function function: 0x00142408
_G.UTIL_Remove function function: 0x0013e750
_G.UTIL_RemoveImmediate function function: 0x0013e7d0
_G.UTIL_ResetMessageText function function: 0x00142528
_G.UTIL_ResetMessageTextAll function function: 0x00142498
_G.UniqueString function function: 0x001c62c0
_G.UnitFilter function function: 0x00177d38
_G.UnloadSpawnGroup function function: 0x00142040
_G.UnloadSpawnGroupByHandle function function: 0x001420c8
_G.UpdateEventPoints function function: 0x00149fc8
_G.Vector function function: 0x00116920
_G.VectorAngles function function: 0x00140c18
_G.VectorDistance function function: 0x001c9ee0
_G.VectorDistanceSq function function: 0x001c9ec0
_G.VectorIsZero function function: 0x001d2a48
_G.VectorLerp function function: 0x001c9f00
_G.VectorToAngles function function: 0x00140078
_G.VoteSystem table table: 0x001f1a08
_G.VoteSystem.__self userdata userdata: 0x001f1a48
_G.Warning function function: 0x00117638
_G._DeepPrintMetaTable function function: 0x001d31c8
_G._DeepPrintTable function function: 0x001d30a8
_G._DeepToString function function: 0x001c0ef0
_G._G == _G table table: 0x00111960
_G._PublishedHelp table table: 0x001e1bd8
_G._VERSION string Lua 5.1
_G.__DumpScope function function: 0x001c6380
_G.__OutputsPattern string ^On.*Output$
_G.__RegisterGameEventListeners function function: 0x001d1830
_G.__ReplaceClosures function function: 0x001c6340
_G.__VScriptServerDebugHook function function: 0x001c9940
_G._deepprint_alreadyseen table table: 0x001d7780
_G._sourceline function function: 0x001bab80
_G.abs function function: 0x001d2ae8
_G.assert function function: builtin#2
_G.bit table table: 0x00115e98
_G.bit.arshift function function: builtin#70
_G.bit.band function function: builtin#73
_G.bit.bnot function function: builtin#66
_G.bit.bor function function: builtin#74
_G.bit.bswap function function: builtin#67
_G.bit.bxor function function: builtin#75
_G.bit.lshift function function: builtin#68
_G.bit.rol function function: builtin#71
_G.bit.ror function function: builtin#72
_G.bit.rshift function function: builtin#69
_G.bit.tobit function function: builtin#65
_G.bit.tohex function function: builtin#76
_G.c == _G.EntityClasses.CBaseEntity table table: 0x001bbd28
_G.class function function: 0x001118d8
_G.collectgarbage function function: builtin#27
_G.coroutine table table: 0x00113708
_G.coroutine.create function function: builtin#32
_G.coroutine.resume function function: builtin#34
_G.coroutine.running function function: builtin#31
_G.coroutine.status function function: builtin#30
_G.coroutine.wrap function function: builtin#36
_G.coroutine.yield function function: builtin#33
_G.cvar_getf function function: 0x0013e358
_G.cvar_setf function function: 0x0013ea80
_G.debug table table: 0x00115880
_G.debug.debug function function: builtin#145
_G.debug.getfenv function function: builtin#134
_G.debug.gethook function function: builtin#144
_G.debug.getinfo function function: builtin#136
_G.debug.getlocal function function: builtin#137
_G.debug.getmetatable function function: builtin#132
_G.debug.getregistry function function: builtin#131
_G.debug.getupvalue function function: builtin#139
_G.debug.setfenv function function: builtin#135
_G.debug.sethook function function: builtin#143
_G.debug.setlocal function function: builtin#138
_G.debug.setmetatable function function: builtin#133
_G.debug.setupvalue function function: builtin#140
_G.debug.traceback function function: builtin#146
_G.debug.upvalueid function function: builtin#141
_G.debug.upvaluejoin function function: builtin#142
_G.debugoverlay table table: 0x0024d630
_G.debugoverlay.__self userdata userdata: 0x0024d670
_G.dofile function function: 0x001174d8
_G.error function function: builtin#19
_G.g_SpawnGroupEntityFilters table table: 0x001c99a0
_G.g_reloadState table table: 0x001e1c20
_G.g_reloadState._G == _G table table: 0x00111960
_G.g_reloadState.bit == _G.bit table table: 0x00115e98
_G.g_reloadState.core.coreinit boolean true
_G.g_reloadState.coroutine == _G.coroutine table table: 0x00113708
_G.g_reloadState.debug == _G.debug table table: 0x00115880
_G.g_reloadState.framework.entities.entitiesinit boolean true
_G.g_reloadState.framework.frameworkinit boolean true
_G.g_reloadState.game.entities.entmixin_enabledisable boolean true
_G.g_reloadState.game.gameinit boolean true
_G.g_reloadState.game.globalsystems.timeofday_init boolean true
_G.g_reloadState.game/dkjson table table: 0x001ea478
_G.g_reloadState.game/dkjson.addnewline function function: 0x001c4868
_G.g_reloadState.game/dkjson.decode function function: 0x001e1848
_G.g_reloadState.game/dkjson.encode function function: 0x001bb828
_G.g_reloadState.game/dkjson.encodeexception function function: 0x001c4978
_G.g_reloadState.game/dkjson.null table table: 0x001d3530
_G.g_reloadState.game/dkjson.quotestring function function: 0x001ea9d0
_G.g_reloadState.game/dkjson.use_lpeg function function: 0x001e1890
_G.g_reloadState.game/dkjson.version string dkjson 2.5
_G.g_reloadState.io table table: 0x00116968
_G.g_reloadState.io.close function function: builtin#112
_G.g_reloadState.io.flush function function: builtin#115
_G.g_reloadState.io.input function function: builtin#116
_G.g_reloadState.io.lines function function: builtin#118
_G.g_reloadState.io.open function function: builtin#109
_G.g_reloadState.io.output function function: builtin#117
_G.g_reloadState.io.popen function function: builtin#110
_G.g_reloadState.io.read function function: builtin#113
_G.g_reloadState.io.stderr userdata file (0x7ff9aa7144b0)
_G.g_reloadState.io.stdin userdata file (0x7ff9aa714400)
_G.g_reloadState.io.stdout userdata file (0x7ff9aa714458)
_G.g_reloadState.io.tmpfile function function: builtin#111
_G.g_reloadState.io.type function function: builtin#119
_G.g_reloadState.io.write function function: builtin#114
_G.g_reloadState.math table table: 0x00114ca0
_G.g_reloadState.math.abs function function: builtin#37
_G.g_reloadState.math.acos function function: builtin#47
_G.g_reloadState.math.asin function function: builtin#46
_G.g_reloadState.math.atan function function: builtin#48
_G.g_reloadState.math.atan2 function function: builtin#57
_G.g_reloadState.math.ceil function function: builtin#39
_G.g_reloadState.math.cos function function: builtin#44
_G.g_reloadState.math.cosh function function: builtin#50
_G.g_reloadState.math.deg function function: builtin#54
_G.g_reloadState.math.exp function function: builtin#42
_G.g_reloadState.math.floor function function: builtin#38
_G.g_reloadState.math.fmod function function: builtin#59
_G.g_reloadState.math.frexp function function: builtin#52
_G.g_reloadState.math.huge number inf
_G.g_reloadState.math.ldexp function function: builtin#60
_G.g_reloadState.math.log function function: builtin#56
_G.g_reloadState.math.log10 function function: builtin#41
_G.g_reloadState.math.max function function: builtin#62
_G.g_reloadState.math.min function function: builtin#61
_G.g_reloadState.math.mod function function: builtin#59
_G.g_reloadState.math.modf function function: builtin#53
_G.g_reloadState.math.pi number 3.1415926535898
_G.g_reloadState.math.pow function function: builtin#58
_G.g_reloadState.math.rad function function: builtin#55
_G.g_reloadState.math.random function function: builtin#63
_G.g_reloadState.math.randomseed function function: builtin#64
_G.g_reloadState.math.sin function function: builtin#43
_G.g_reloadState.math.sinh function function: builtin#49
_G.g_reloadState.math.sqrt function function: builtin#40
_G.g_reloadState.math.tan function function: builtin#45
_G.g_reloadState.math.tanh function function: builtin#51
_G.g_reloadState.package table table: 0x00113aa0
_G.g_reloadState.package.config string \
;
?
!
-
_G.g_reloadState.package.cpath string .\?.dll;D:\Games\Steam\steamapps\common\dota 2 beta\game\bin\win64\?.dll;D:\Games\Steam\steamapps\common\dota 2 beta\game\bin\win64\loadall.dll
_G.g_reloadState.package.loaded table table: 0x00112b10
_G.g_reloadState.package.loaded._G == _G table table: 0x00111960
_G.g_reloadState.package.loaded.bit == _G.bit table table: 0x00115e98
_G.g_reloadState.package.loaded.core.coreinit boolean true
_G.g_reloadState.package.loaded.coroutine == _G.coroutine table table: 0x00113708
_G.g_reloadState.package.loaded.debug == _G.debug table table: 0x00115880
_G.g_reloadState.package.loaded.framework.entities.entitiesinit boolean true
_G.g_reloadState.package.loaded.framework.frameworkinit boolean true
_G.g_reloadState.package.loaded.game.entities.entmixin_enabledisable boolean true
_G.g_reloadState.package.loaded.game.gameinit boolean true
_G.g_reloadState.package.loaded.game.globalsystems.timeofday_init boolean true
_G.g_reloadState.package.loaded.game/dkjson == _G.g_reloadState.game/dkjson table table: 0x001ea478
_G.g_reloadState.package.loaded.io == _G.g_reloadState.io table table: 0x00116968
_G.g_reloadState.package.loaded.math == _G.g_reloadState.math table table: 0x00114ca0
_G.g_reloadState.package.loaded.package == _G.g_reloadState.package table table: 0x00113aa0
_G.g_reloadState.package.loaded.string table table: 0x001145f0
_G.g_reloadState.package.loaded.string.byte function function: builtin#78
_G.g_reloadState.package.loaded.string.char function function: builtin#79
_G.g_reloadState.package.loaded.string.dump function function: builtin#85
_G.g_reloadState.package.loaded.string.find function function: builtin#86
_G.g_reloadState.package.loaded.string.format function function: builtin#91
_G.g_reloadState.package.loaded.string.gfind function function: builtin#89
_G.g_reloadState.package.loaded.string.gmatch function function: builtin#89
_G.g_reloadState.package.loaded.string.gsub function function: builtin#90
_G.g_reloadState.package.loaded.string.len function function: builtin#77
_G.g_reloadState.package.loaded.string.lower function function: builtin#83
_G.g_reloadState.package.loaded.string.match function function: builtin#87
_G.g_reloadState.package.loaded.string.rep function function: builtin#81
_G.g_reloadState.package.loaded.string.reverse function function: builtin#82
_G.g_reloadState.package.loaded.string.sub function function: builtin#80
_G.g_reloadState.package.loaded.string.upper function function: builtin#84
_G.g_reloadState.package.loaded.table table table: 0x00114290
_G.g_reloadState.package.loaded.table.concat function function: builtin#98
_G.g_reloadState.package.loaded.table.foreach function function: builtin#93
_G.g_reloadState.package.loaded.table.foreachi function function: builtin#92
_G.g_reloadState.package.loaded.table.getn function function: builtin#94
_G.g_reloadState.package.loaded.table.insert function function: builtin#96
_G.g_reloadState.package.loaded.table.maxn function function: builtin#95
_G.g_reloadState.package.loaded.table.remove function function: builtin#97
_G.g_reloadState.package.loaded.table.sort function function: builtin#99
_G.g_reloadState.package.loaded.utils.class boolean true
_G.g_reloadState.package.loaded.utils.deepprint boolean true
_G.g_reloadState.package.loaded.utils.library boolean true
_G.g_reloadState.package.loaded.utils.utilsinit boolean true
_G.g_reloadState.package.loaded.utils.vscriptinit boolean true
_G.g_reloadState.package.loaders table table: 0x00113c10
_G.g_reloadState.package.loaders[1] function function: 0x00113c60
_G.g_reloadState.package.loaders[2] function function: 0x001163a8
_G.g_reloadState.package.path string .\?.lua;D:\Games\Steam\steamapps\common\dota 2 beta\game\bin\win64\lua\?.lua;D:\Games\Steam\steamapps\common\dota 2 beta\game\bin\win64\lua\?\init.lua;
_G.g_reloadState.package.preload table table: 0x00114058
_G.g_reloadState.package.searchpath function function: 0x00113b78
_G.g_reloadState.package.seeall function function: 0x00113bc8
_G.g_reloadState.string == _G.g_reloadState.package.loaded.string table table: 0x001145f0
_G.g_reloadState.table == _G.g_reloadState.package.loaded.table table table: 0x00114290
_G.g_reloadState.utils.class boolean true
_G.g_reloadState.utils.deepprint boolean true
_G.g_reloadState.utils.library boolean true
_G.g_reloadState.utils.utilsinit boolean true
_G.g_reloadState.utils.vscriptinit boolean true
_G.gcinfo function function: builtin#26
_G.getbase function function: 0x00111938
_G.getclass function function: 0x00111918
_G.getfenv function function: builtin#10
_G.getmetatable function function: builtin#8
_G.h function function: 0x001b9af8
_G.instanceof function function: 0x001118f8
_G.io == _G.g_reloadState.io table table: 0x00116968
_G.ipairs function function: builtin#7
_G.isclass function function: 0x001bbbd8
_G.json == _G.g_reloadState.game/dkjson table table: 0x001ea478
_G.load function function: builtin#23
_G.loadfile function function: 0x001174b0
_G.loadstring function function: builtin#24
_G.math == _G.g_reloadState.math table table: 0x00114ca0
_G.max function function: 0x001d2ac8
_G.min function function: 0x001d2aa8
_G.module function function: 0x00113e58
_G.newproxy function function: builtin#28
_G.next function function: builtin#4
_G.package == _G.g_reloadState.package table table: 0x00113aa0
_G.pairs function function: builtin#5
_G.pcall function function: builtin#20
_G.print function function: 0x00117400
_G.printstack function function: 0x00117480
_G.radiant_melee_mars_shieldbash number 1771
_G.rawequal function function: builtin#14
_G.rawget function function: builtin#12
_G.rawset function function: builtin#13
_G.require function function: 0x00113ea0
_G.rr_AddDecisionRule function function: 0x00141868
_G.rr_CommitAIResponse function function: 0x00141978
_G.rr_GetResponseTargets function function: 0x00141a00
_G.rr_QueryBestResponse function function: 0x001418f0
_G.scripthelp_DeepPrint string Print out a class/array/instance/table to the console
_G.scripthelp_DeepPrintTable string Print out a table (and subtables) to the console
_G.scripthelp_DeepString string Convert a class/array/instance/table to a string
_G.select function function: builtin#16
_G.setfenv function function: builtin#11
_G.setmetatable function function: builtin#9
_G.string == _G.g_reloadState.package.loaded.string table table: 0x001145f0
_G.table == _G.g_reloadState.package.loaded.table table table: 0x00114290
_G.tonumber function function: builtin#17
_G.tostring function function: builtin#18
_G.type function function: builtin#3
_G.unpack function function: builtin#15
_G.vec3_invalid userdata Vector 0000000000129A50 [340282346638528859811704183484516925440.000000 340282346638528859811704183484516925440.000000 34028234
_G.vec3_origin userdata Vector 00000000001299F8 [0.000000 0.000000 0.000000]
_G.vlua table table: 0x001c2020
_G.vlua.clear function function: 0x001c2048
_G.vlua.clone function function: 0x001c15e0
_G.vlua.compare function function: 0x001c4ba8
_G.vlua.contains function function: 0x001bf7d8
_G.vlua.delete function function: 0x001c4b70
_G.vlua.extend function function: 0x001c1640
_G.vlua.find function function: 0x001bf818
_G.vlua.map function function: 0x001c1660
_G.vlua.rawdelete function function: 0x001c16c8
_G.vlua.rawin function function: 0x001bf7f8
_G.vlua.reduce function function: 0x001c1680
_G.vlua.resize function function: 0x001c1620
_G.vlua.reverse function function: 0x001c1600
_G.vlua.select function function: 0x001c2880
_G.vlua.slice function function: 0x001bf838
_G.vlua.split function function: 0x001c2860
_G.vlua.tableadd function function: 0x001c16a0
_G.xpcall function function: builtin#21
